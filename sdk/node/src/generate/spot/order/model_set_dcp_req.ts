// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class SetDCPReq implements Serializable {
    /**
     * Auto cancel order trigger setting time, the unit is second. Range: timeout=-1 (meaning unset) or 5 <= timeout <= 86400. For example, timeout=5 means that the order will be automatically canceled if no user request is received for more than 5 seconds. When this parameter is changed, the previous setting will be overwritten.
     */
    timeout: number;

    /**
     * List of trading pairs. When this parameter is not empty, separate it with commas and support up to 50 trading pairs. Empty means all trading pairs. When this parameter is changed, the previous setting will be overwritten.
     */
    symbols?: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.timeout = null;
    }
    /**
     * Creates a new instance of the `SetDCPReq` class.
     * The builder pattern allows step-by-step construction of a `SetDCPReq` object.
     */
    static builder(): SetDCPReqBuilder {
        return new SetDCPReqBuilder(new SetDCPReq());
    }

    /**
     * Creates a new instance of the `SetDCPReq` class with the given data.
     */
    static create(data: {
        /**
         * Auto cancel order trigger setting time, the unit is second. Range: timeout=-1 (meaning unset) or 5 <= timeout <= 86400. For example, timeout=5 means that the order will be automatically canceled if no user request is received for more than 5 seconds. When this parameter is changed, the previous setting will be overwritten.
         */
        timeout: number;
        /**
         * List of trading pairs. When this parameter is not empty, separate it with commas and support up to 50 trading pairs. Empty means all trading pairs. When this parameter is changed, the previous setting will be overwritten.
         */
        symbols?: string;
    }): SetDCPReq {
        let obj = new SetDCPReq();
        obj.timeout = data.timeout;
        obj.symbols = data.symbols;
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): SetDCPReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): SetDCPReq {
        return plainToClassFromExist(new SetDCPReq(), jsonObject);
    }
}

export class SetDCPReqBuilder {
    constructor(readonly obj: SetDCPReq) {
        this.obj = obj;
    }
    /**
     * Auto cancel order trigger setting time, the unit is second. Range: timeout=-1 (meaning unset) or 5 <= timeout <= 86400. For example, timeout=5 means that the order will be automatically canceled if no user request is received for more than 5 seconds. When this parameter is changed, the previous setting will be overwritten.
     */
    setTimeout(value: number): SetDCPReqBuilder {
        this.obj.timeout = value;
        return this;
    }

    /**
     * List of trading pairs. When this parameter is not empty, separate it with commas and support up to 50 trading pairs. Empty means all trading pairs. When this parameter is changed, the previous setting will be overwritten.
     */
    setSymbols(value: string): SetDCPReqBuilder {
        this.obj.symbols = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): SetDCPReq {
        return this.obj;
    }
}
