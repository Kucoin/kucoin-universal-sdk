// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class BatchCancelOcoOrdersReq implements Serializable {
    /**
     * Specify the order ID; there can be multiple orders, separated by commas. If not passed, all OCO orders will be canceled by default.
     */
    orderIds?: string;

    /**
     * Trading pair. If not passed, the OCO orders of all symbols will be canceled by default.
     */
    symbol?: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {}
    /**
     * Creates a new instance of the `BatchCancelOcoOrdersReq` class.
     * The builder pattern allows step-by-step construction of a `BatchCancelOcoOrdersReq` object.
     */
    static builder(): BatchCancelOcoOrdersReqBuilder {
        return new BatchCancelOcoOrdersReqBuilder(new BatchCancelOcoOrdersReq());
    }

    /**
     * Creates a new instance of the `BatchCancelOcoOrdersReq` class with the given data.
     */
    static create(data: {
        /**
         * Specify the order ID; there can be multiple orders, separated by commas. If not passed, all OCO orders will be canceled by default.
         */
        orderIds?: string;
        /**
         * Trading pair. If not passed, the OCO orders of all symbols will be canceled by default.
         */
        symbol?: string;
    }): BatchCancelOcoOrdersReq {
        let obj = new BatchCancelOcoOrdersReq();
        obj.orderIds = data.orderIds;
        obj.symbol = data.symbol;
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): BatchCancelOcoOrdersReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): BatchCancelOcoOrdersReq {
        return plainToClassFromExist(new BatchCancelOcoOrdersReq(), jsonObject);
    }
}

export class BatchCancelOcoOrdersReqBuilder {
    constructor(readonly obj: BatchCancelOcoOrdersReq) {
        this.obj = obj;
    }
    /**
     * Specify the order ID; there can be multiple orders, separated by commas. If not passed, all OCO orders will be canceled by default.
     */
    setOrderIds(value: string): BatchCancelOcoOrdersReqBuilder {
        this.obj.orderIds = value;
        return this;
    }

    /**
     * Trading pair. If not passed, the OCO orders of all symbols will be canceled by default.
     */
    setSymbol(value: string): BatchCancelOcoOrdersReqBuilder {
        this.obj.symbol = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): BatchCancelOcoOrdersReq {
        return this.obj;
    }
}
