// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetOrdersListOldItems implements Serializable {
    /**
     *
     */
    id: string;

    /**
     *
     */
    symbol: string;

    /**
     *
     */
    opType: string;

    /**
     *
     */
    type: string;

    /**
     *
     */
    side: string;

    /**
     *
     */
    price: string;

    /**
     *
     */
    size: string;

    /**
     *
     */
    funds: string;

    /**
     *
     */
    dealFunds: string;

    /**
     *
     */
    dealSize: string;

    /**
     *
     */
    fee: string;

    /**
     *
     */
    feeCurrency: string;

    /**
     *
     */
    stp: string;

    /**
     *
     */
    stop: string;

    /**
     *
     */
    stopTriggered: boolean;

    /**
     *
     */
    stopPrice: string;

    /**
     *
     */
    timeInForce: string;

    /**
     *
     */
    postOnly: boolean;

    /**
     *
     */
    hidden: boolean;

    /**
     *
     */
    iceberg: boolean;

    /**
     *
     */
    visibleSize: string;

    /**
     *
     */
    cancelAfter: number;

    /**
     *
     */
    channel: string;

    /**
     *
     */
    clientOid: string;

    /**
     *
     */
    remark: string;

    /**
     *
     */
    tags: string;

    /**
     *
     */
    isActive: boolean;

    /**
     *
     */
    cancelExist: boolean;

    /**
     *
     */
    createdAt: number;

    /**
     *
     */
    tradeType: string;

    /**
     *
     */
    tax?: string;

    /**
     *
     */
    taxRate?: string;

    /**
     *
     */
    taxCurrency?: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.id = null;
        // @ts-ignore
        this.symbol = null;
        // @ts-ignore
        this.opType = null;
        // @ts-ignore
        this.type = null;
        // @ts-ignore
        this.side = null;
        // @ts-ignore
        this.price = null;
        // @ts-ignore
        this.size = null;
        // @ts-ignore
        this.funds = null;
        // @ts-ignore
        this.dealFunds = null;
        // @ts-ignore
        this.dealSize = null;
        // @ts-ignore
        this.fee = null;
        // @ts-ignore
        this.feeCurrency = null;
        // @ts-ignore
        this.stp = null;
        // @ts-ignore
        this.stop = null;
        // @ts-ignore
        this.stopTriggered = null;
        // @ts-ignore
        this.stopPrice = null;
        // @ts-ignore
        this.timeInForce = null;
        // @ts-ignore
        this.postOnly = null;
        // @ts-ignore
        this.hidden = null;
        // @ts-ignore
        this.iceberg = null;
        // @ts-ignore
        this.visibleSize = null;
        // @ts-ignore
        this.cancelAfter = null;
        // @ts-ignore
        this.channel = null;
        // @ts-ignore
        this.clientOid = null;
        // @ts-ignore
        this.remark = null;
        // @ts-ignore
        this.tags = null;
        // @ts-ignore
        this.isActive = null;
        // @ts-ignore
        this.cancelExist = null;
        // @ts-ignore
        this.createdAt = null;
        // @ts-ignore
        this.tradeType = null;
    }
    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetOrdersListOldItems {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetOrdersListOldItems {
        return plainToClassFromExist(new GetOrdersListOldItems(), jsonObject);
    }
}
