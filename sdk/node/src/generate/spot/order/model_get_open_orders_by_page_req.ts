// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetOpenOrdersByPageReq implements Serializable {
    /**
     * Symbol
     */
    symbol?: string;

    /**
     * Current page
     */
    pageNum?: number = 1;

    /**
     * Size per page
     */
    pageSize?: number = 20;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {}
    /**
     * Creates a new instance of the `GetOpenOrdersByPageReq` class.
     * The builder pattern allows step-by-step construction of a `GetOpenOrdersByPageReq` object.
     */
    static builder(): GetOpenOrdersByPageReqBuilder {
        return new GetOpenOrdersByPageReqBuilder(new GetOpenOrdersByPageReq());
    }

    /**
     * Creates a new instance of the `GetOpenOrdersByPageReq` class with the given data.
     */
    static create(data: {
        /**
         * Symbol
         */
        symbol?: string;
        /**
         * Current page
         */
        pageNum?: number;
        /**
         * Size per page
         */
        pageSize?: number;
    }): GetOpenOrdersByPageReq {
        let obj = new GetOpenOrdersByPageReq();
        obj.symbol = data.symbol;
        if (data.pageNum) {
            obj.pageNum = data.pageNum;
        } else {
            obj.pageNum = 1;
        }
        if (data.pageSize) {
            obj.pageSize = data.pageSize;
        } else {
            obj.pageSize = 20;
        }
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetOpenOrdersByPageReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetOpenOrdersByPageReq {
        return plainToClassFromExist(new GetOpenOrdersByPageReq(), jsonObject);
    }
}

export class GetOpenOrdersByPageReqBuilder {
    constructor(readonly obj: GetOpenOrdersByPageReq) {
        this.obj = obj;
    }
    /**
     * Symbol
     */
    setSymbol(value: string): GetOpenOrdersByPageReqBuilder {
        this.obj.symbol = value;
        return this;
    }

    /**
     * Current page
     */
    setPageNum(value: number): GetOpenOrdersByPageReqBuilder {
        this.obj.pageNum = value;
        return this;
    }

    /**
     * Size per page
     */
    setPageSize(value: number): GetOpenOrdersByPageReqBuilder {
        this.obj.pageSize = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): GetOpenOrdersByPageReq {
        return this.obj;
    }
}
