// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, Exclude, plainToClassFromExist } from 'class-transformer';
import { WsMessage } from '@model/common';
import { WebSocketMessageCallback } from '@internal/interfaces/websocket';
import { Response } from '@internal/interfaces/serializable';

export class CallAuctionInfoEvent implements Response<WsMessage> {
    /**
     * Symbol
     */
    symbol: string;
    /**
     * Estimated price
     */
    estimatedPrice: string;
    /**
     * Estimated size
     */
    estimatedSize: string;
    /**
     * Sell ​​order minimum price
     */
    sellOrderRangeLowPrice: string;
    /**
     * Sell ​​order maximum price
     */
    sellOrderRangeHighPrice: string;
    /**
     * Bell ​​order minimum price
     */
    buyOrderRangeLowPrice: string;
    /**
     * Buy ​​order maximum price
     */
    buyOrderRangeHighPrice: string;
    /**
     * Timestamp (ms)
     */
    time: number;

    private constructor() {
        // @ts-ignore
        this.symbol = null;
        // @ts-ignore
        this.estimatedPrice = null;
        // @ts-ignore
        this.estimatedSize = null;
        // @ts-ignore
        this.sellOrderRangeLowPrice = null;
        // @ts-ignore
        this.sellOrderRangeHighPrice = null;
        // @ts-ignore
        this.buyOrderRangeLowPrice = null;
        // @ts-ignore
        this.buyOrderRangeHighPrice = null;
        // @ts-ignore
        this.time = null;
    }
    /**
     * common response
     */
    @Exclude()
    commonResponse?: WsMessage;

    setCommonResponse(response: WsMessage): void {
        this.commonResponse = response;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): CallAuctionInfoEvent {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): CallAuctionInfoEvent {
        return plainToClassFromExist(new CallAuctionInfoEvent(), jsonObject);
    }
}

export type CallAuctionInfoEventCallback = (
    topic: string,
    subject: string,
    data: CallAuctionInfoEvent,
) => void;

export class CallAuctionInfoEventCallbackWrapper implements WebSocketMessageCallback {
    constructor(private callback: CallAuctionInfoEventCallback) {
        this.callback = callback;
    }

    onMessage(msg: WsMessage): void {
        let event = CallAuctionInfoEvent.fromObject(msg.data);
        event.setCommonResponse(msg);
        this.callback(msg.topic, msg.subject, event);
    }
}
