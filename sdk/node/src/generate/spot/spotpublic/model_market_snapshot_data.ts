// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { Type, instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { MarketSnapshotDataMarketChange4h } from './model_market_snapshot_data_market_change4h';
import { MarketSnapshotDataMarketChange24h } from './model_market_snapshot_data_market_change24h';
import { MarketSnapshotDataMarketChange1h } from './model_market_snapshot_data_market_change1h';
import { Serializable } from '@internal/interfaces/serializable';

export class MarketSnapshotData implements Serializable {
    /**
     *
     */
    askSize: number;
    /**
     *
     */
    averagePrice: number;
    /**
     *
     */
    baseCurrency: string;
    /**
     *
     */
    bidSize: number;
    /**
     * Trading pair partition: 0. Primary partition 1.KuCoin Plus\", example = \"1\"
     */
    board: MarketSnapshotData.BoardEnum;
    /**
     *
     */
    buy: number;
    /**
     *
     */
    changePrice: number;
    /**
     *
     */
    changeRate: number;
    /**
     *
     */
    close: number;
    /**
     *
     */
    datetime: number;
    /**
     *
     */
    high: number;
    /**
     *
     */
    lastTradedPrice: number;
    /**
     *
     */
    low: number;
    /**
     *
     */
    makerCoefficient: number;
    /**
     *
     */
    makerFeeRate: number;
    /**
     *
     */
    marginTrade: boolean;
    /**
     * Trading Pair Mark: 0. Default 1.ST. 2.NEW\", example = \"1\"
     */
    mark: MarketSnapshotData.MarkEnum;
    /**
     *
     */
    market: string;
    /**
     *
     */
    marketChange1h: MarketSnapshotDataMarketChange1h;
    /**
     *
     */
    marketChange24h: MarketSnapshotDataMarketChange24h;
    /**
     *
     */
    marketChange4h: MarketSnapshotDataMarketChange4h;
    /**
     *
     */
    markets: Array<string>;
    /**
     *
     */
    open: number;
    /**
     *
     */
    quoteCurrency: string;
    /**
     *
     */
    sell: number;
    /**
     *
     */
    siteTypes: Array<string>;
    /**
     * sorting number
     */
    sort: number;
    /**
     *
     */
    symbol: string;
    /**
     *
     */
    symbolCode: string;
    /**
     *
     */
    takerCoefficient: number;
    /**
     *
     */
    takerFeeRate: number;
    /**
     *
     */
    trading: boolean;
    /**
     *
     */
    vol: number;
    /**
     *
     */
    volValue: number;

    private constructor() {
        // @ts-ignore
        this.askSize = null;
        // @ts-ignore
        this.averagePrice = null;
        // @ts-ignore
        this.baseCurrency = null;
        // @ts-ignore
        this.bidSize = null;
        // @ts-ignore
        this.board = null;
        // @ts-ignore
        this.buy = null;
        // @ts-ignore
        this.changePrice = null;
        // @ts-ignore
        this.changeRate = null;
        // @ts-ignore
        this.close = null;
        // @ts-ignore
        this.datetime = null;
        // @ts-ignore
        this.high = null;
        // @ts-ignore
        this.lastTradedPrice = null;
        // @ts-ignore
        this.low = null;
        // @ts-ignore
        this.makerCoefficient = null;
        // @ts-ignore
        this.makerFeeRate = null;
        // @ts-ignore
        this.marginTrade = null;
        // @ts-ignore
        this.mark = null;
        // @ts-ignore
        this.market = null;
        // @ts-ignore
        this.marketChange1h = null;
        // @ts-ignore
        this.marketChange24h = null;
        // @ts-ignore
        this.marketChange4h = null;
        // @ts-ignore
        this.markets = null;
        // @ts-ignore
        this.open = null;
        // @ts-ignore
        this.quoteCurrency = null;
        // @ts-ignore
        this.sell = null;
        // @ts-ignore
        this.siteTypes = null;
        // @ts-ignore
        this.sort = null;
        // @ts-ignore
        this.symbol = null;
        // @ts-ignore
        this.symbolCode = null;
        // @ts-ignore
        this.takerCoefficient = null;
        // @ts-ignore
        this.takerFeeRate = null;
        // @ts-ignore
        this.trading = null;
        // @ts-ignore
        this.vol = null;
        // @ts-ignore
        this.volValue = null;
    }
    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): MarketSnapshotData {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): MarketSnapshotData {
        return plainToClassFromExist(new MarketSnapshotData(), jsonObject);
    }
}

export namespace MarketSnapshotData {
    export enum BoardEnum {
        /**
         * primary partition
         */
        _0 = <any>0,
        /**
         * KuCoin Plus
         */
        _1 = <any>1,
    }
    export enum MarkEnum {
        /**
         * default
         */
        _0 = <any>0,
        /**
         * ST
         */
        _1 = <any>1,
        /**
         * NEW
         */
        _2 = <any>2,
    }
}
