// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetAnnouncementsReq implements Serializable {
    /**
     * page number
     */
    currentPage?: number;

    /**
     * page Size
     */
    pageSize?: number;

    /**
     * Announcement types: latest-announcements , activities (latest activities), new-listings (new currency online), product-updates (product updates), vip (institutions and VIPs), maintenance-updates (system maintenance), product -updates (product news), delistings (currency offline), others, api-campaigns (API user activities), default : latest-announcements
     */
    annType?: GetAnnouncementsReq.AnnTypeEnum =
        GetAnnouncementsReq.AnnTypeEnum.LATEST_ANNOUNCEMENTS;

    /**
     * Language type, the default is en_US, the specific value parameters are as follows
     */
    lang?: GetAnnouncementsReq.LangEnum = GetAnnouncementsReq.LangEnum.EN_US;

    /**
     * Announcement online start time (milliseconds)
     */
    startTime?: number;

    /**
     * Announcement online end time (milliseconds)
     */
    endTime?: number;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {}
    /**
     * Creates a new instance of the `GetAnnouncementsReq` class.
     * The builder pattern allows step-by-step construction of a `GetAnnouncementsReq` object.
     */
    static builder(): GetAnnouncementsReqBuilder {
        return new GetAnnouncementsReqBuilder(new GetAnnouncementsReq());
    }

    /**
     * Creates a new instance of the `GetAnnouncementsReq` class with the given data.
     */
    static create(data: {
        /**
         * page number
         */
        currentPage?: number;
        /**
         * page Size
         */
        pageSize?: number;
        /**
         * Announcement types: latest-announcements , activities (latest activities), new-listings (new currency online), product-updates (product updates), vip (institutions and VIPs), maintenance-updates (system maintenance), product -updates (product news), delistings (currency offline), others, api-campaigns (API user activities), default : latest-announcements
         */
        annType?: GetAnnouncementsReq.AnnTypeEnum;
        /**
         * Language type, the default is en_US, the specific value parameters are as follows
         */
        lang?: GetAnnouncementsReq.LangEnum;
        /**
         * Announcement online start time (milliseconds)
         */
        startTime?: number;
        /**
         * Announcement online end time (milliseconds)
         */
        endTime?: number;
    }): GetAnnouncementsReq {
        let obj = new GetAnnouncementsReq();
        obj.currentPage = data.currentPage;
        obj.pageSize = data.pageSize;
        if (data.annType) {
            obj.annType = data.annType;
        } else {
            obj.annType = GetAnnouncementsReq.AnnTypeEnum.LATEST_ANNOUNCEMENTS;
        }
        if (data.lang) {
            obj.lang = data.lang;
        } else {
            obj.lang = GetAnnouncementsReq.LangEnum.EN_US;
        }
        obj.startTime = data.startTime;
        obj.endTime = data.endTime;
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetAnnouncementsReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetAnnouncementsReq {
        return plainToClassFromExist(new GetAnnouncementsReq(), jsonObject);
    }
}

export namespace GetAnnouncementsReq {
    export enum AnnTypeEnum {
        /**
         * latest-announcements
         */
        LATEST_ANNOUNCEMENTS = <any>'latest-announcements',
        /**
         * latest activities
         */
        ACTIVITIES = <any>'activities',
        /**
         * product updates
         */
        PRODUCT_UPDATES = <any>'product-updates',
        /**
         * institutions and VIPs
         */
        VIPS = <any>'vip',
        /**
         * system maintenance
         */
        MAINTENANCE_UPDATE = <any>'maintenance-updates',
        /**
         * currency offline
         */
        DELISTINGS = <any>'delistings',
        /**
         * others
         */
        OTHERS = <any>'others',
        /**
         * API user activities
         */
        API_CAMPAIGNS = <any>'api-campaigns',
        /**
         * new currency online
         */
        NEW_LISTINGS = <any>'new-listings',
    }
    export enum LangEnum {
        /**
         * Chinese (Hong Kong)
         */
        ZH_HK = <any>'zh_HK',
        /**
         * Japanese (Japan)
         */
        JA_JP = <any>'ja_JP',
        /**
         * Korean (Korea)
         */
        KO_KR = <any>'ko_KR',
        /**
         * English
         */
        EN_US = <any>'en_US',
        /**
         * Polish (Poland)
         */
        PL_PL = <any>'pl_PL',
        /**
         * Spanish (Spain)
         */
        ES_ES = <any>'es_ES',
        /**
         * French (France)
         */
        FR_FR = <any>'fr_FR',
        /**
         * Arabic (Egypt)
         */
        AR_AE = <any>'ar_AE',
        /**
         * Italian (Italy)
         */
        IT_IT = <any>'it_IT',
        /**
         * Indonesian (Indonesia)
         */
        ID_ID = <any>'id_ID',
        /**
         * Dutch (Netherlands)
         */
        NL_NL = <any>'nl_NL',
        /**
         * Portuguese (Brazil)
         */
        PT_PT = <any>'pt_PT',
        /**
         * Vietnamese (Vietnam)
         */
        VI_VN = <any>'vi_VN',
        /**
         * German (Germany)
         */
        DE_DE = <any>'de_DE',
        /**
         * Turkish (Turkey)
         */
        TR_TR = <any>'tr_TR',
        /**
         * Malay (Malaysia)
         */
        MS_MY = <any>'ms_MY',
        /**
         * Russian (Russia)
         */
        RU_RU = <any>'ru_RU',
        /**
         * Thai (Thailand)
         */
        TH_TH = <any>'th_TH',
        /**
         * Hindi (India)
         */
        HI_IN = <any>'hi_IN',
        /**
         * Bengali (Bangladesh)
         */
        BN_BD = <any>'bn_BD',
        /**
         * Filipino (Philippines)
         */
        FIL_PH = <any>'fil_PH',
        /**
         * Urdu (Pakistan)
         */
        UR_PK = <any>'ur_PK',
    }
}

export class GetAnnouncementsReqBuilder {
    constructor(readonly obj: GetAnnouncementsReq) {
        this.obj = obj;
    }
    /**
     * page number
     */
    setCurrentPage(value: number): GetAnnouncementsReqBuilder {
        this.obj.currentPage = value;
        return this;
    }

    /**
     * page Size
     */
    setPageSize(value: number): GetAnnouncementsReqBuilder {
        this.obj.pageSize = value;
        return this;
    }

    /**
     * Announcement types: latest-announcements , activities (latest activities), new-listings (new currency online), product-updates (product updates), vip (institutions and VIPs), maintenance-updates (system maintenance), product -updates (product news), delistings (currency offline), others, api-campaigns (API user activities), default : latest-announcements
     */
    setAnnType(value: GetAnnouncementsReq.AnnTypeEnum): GetAnnouncementsReqBuilder {
        this.obj.annType = value;
        return this;
    }

    /**
     * Language type, the default is en_US, the specific value parameters are as follows
     */
    setLang(value: GetAnnouncementsReq.LangEnum): GetAnnouncementsReqBuilder {
        this.obj.lang = value;
        return this;
    }

    /**
     * Announcement online start time (milliseconds)
     */
    setStartTime(value: number): GetAnnouncementsReqBuilder {
        this.obj.startTime = value;
        return this;
    }

    /**
     * Announcement online end time (milliseconds)
     */
    setEndTime(value: number): GetAnnouncementsReqBuilder {
        this.obj.endTime = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): GetAnnouncementsReq {
        return this.obj;
    }
}
