// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { Type, instanceToPlain, Exclude, plainToClassFromExist } from 'class-transformer';
import { GetCurrencyChains } from './model_get_currency_chains';
import { RestResponse } from '@model/common';
import { Response } from '@internal/interfaces/serializable';

export class GetCurrencyResp implements Response<RestResponse> {
    /**
     * A unique currency code that will never change
     */
    currency: string;

    /**
     * Currency name; will change after renaming
     */
    name: string;

    /**
     * Full currency name; will change after renaming
     */
    fullName: string;

    /**
     * Currency precision
     */
    precision: number;

    /**
     * Number of block confirmations
     */
    confirms: number;

    /**
     * Contract address
     */
    contractAddress: string;

    /**
     * Margin support or not
     */
    isMarginEnabled: boolean;

    /**
     * Debit support or not
     */
    isDebitEnabled: boolean;

    /**
     * Chain list
     */
    @Type(() => GetCurrencyChains)
    chains: Array<GetCurrencyChains>;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.currency = null;
        // @ts-ignore
        this.name = null;
        // @ts-ignore
        this.fullName = null;
        // @ts-ignore
        this.precision = null;
        // @ts-ignore
        this.confirms = null;
        // @ts-ignore
        this.contractAddress = null;
        // @ts-ignore
        this.isMarginEnabled = null;
        // @ts-ignore
        this.isDebitEnabled = null;
        // @ts-ignore
        this.chains = null;
    }
    /**
     * common response
     */
    @Exclude()
    commonResponse?: RestResponse;

    setCommonResponse(response: RestResponse): void {
        this.commonResponse = response;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetCurrencyResp {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetCurrencyResp {
        return plainToClassFromExist(new GetCurrencyResp(), jsonObject);
    }
}
