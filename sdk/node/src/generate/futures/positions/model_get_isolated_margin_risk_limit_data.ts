// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetIsolatedMarginRiskLimitData implements Serializable {
    /**
     * Symbol of the contract. Please refer to [Get Symbol endpoint: symbol](https://www.kucoin.com/docs-new/api-3470220)
     */
    symbol: string;

    /**
     * Level
     */
    level: number;

    /**
     * Upper limit USDT (included)
     */
    maxRiskLimit: number;

    /**
     * Lower limit USDT
     */
    minRiskLimit: number;

    /**
     * Max. leverage
     */
    maxLeverage: number;

    /**
     * Initial margin rate
     */
    initialMargin: number;

    /**
     * Maintenance margin rate
     */
    maintainMargin: number;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.symbol = null;
        // @ts-ignore
        this.level = null;
        // @ts-ignore
        this.maxRiskLimit = null;
        // @ts-ignore
        this.minRiskLimit = null;
        // @ts-ignore
        this.maxLeverage = null;
        // @ts-ignore
        this.initialMargin = null;
        // @ts-ignore
        this.maintainMargin = null;
    }
    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetIsolatedMarginRiskLimitData {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetIsolatedMarginRiskLimitData {
        return plainToClassFromExist(new GetIsolatedMarginRiskLimitData(), jsonObject);
    }
}
