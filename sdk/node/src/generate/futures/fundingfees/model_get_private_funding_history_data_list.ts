// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetPrivateFundingHistoryDataList implements Serializable {
    /**
     * ID
     */
    id: number;

    /**
     * Symbol of the contract. Please refer to [Get Symbol endpoint: symbol](https://www.kucoin.com/docs-new/api-3470220)
     */
    symbol: string;

    /**
     * Time point (milliseconds)
     */
    timePoint: number;

    /**
     * Funding rate
     */
    fundingRate: number;

    /**
     * Mark price
     */
    markPrice: number;

    /**
     * Position size
     */
    positionQty: number;

    /**
     * Position value at settlement period
     */
    positionCost: number;

    /**
     * Settled funding fees A positive number means that the user received the funding fee, and vice versa.
     */
    funding: number;

    /**
     * Settlement currency
     */
    settleCurrency: string;

    /**
     * Context
     */
    context: string;

    /**
     * Margin mode: ISOLATED (isolated), CROSS (cross margin).
     */
    marginMode: GetPrivateFundingHistoryDataList.MarginModeEnum;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.id = null;
        // @ts-ignore
        this.symbol = null;
        // @ts-ignore
        this.timePoint = null;
        // @ts-ignore
        this.fundingRate = null;
        // @ts-ignore
        this.markPrice = null;
        // @ts-ignore
        this.positionQty = null;
        // @ts-ignore
        this.positionCost = null;
        // @ts-ignore
        this.funding = null;
        // @ts-ignore
        this.settleCurrency = null;
        // @ts-ignore
        this.context = null;
        // @ts-ignore
        this.marginMode = null;
    }
    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetPrivateFundingHistoryDataList {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetPrivateFundingHistoryDataList {
        return plainToClassFromExist(new GetPrivateFundingHistoryDataList(), jsonObject);
    }
}

export namespace GetPrivateFundingHistoryDataList {
    export enum MarginModeEnum {
        /**
         * isolated margin
         */
        ISOLATED = <any>'ISOLATED',
        /**
         * cross margin
         */
        CROSS = <any>'CROSS',
    }
}
