// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetTradeHistoryData implements Serializable {
    /**
     * Sequence number
     */
    sequence: number;

    /**
     * Deprecated param
     */
    contractId: number;

    /**
     * Transaction ID
     */
    tradeId: string;

    /**
     * Maker order ID
     */
    makerOrderId: string;

    /**
     * Taker order ID
     */
    takerOrderId: string;

    /**
     * Filled timestamp (nanosecond)
     */
    ts: number;

    /**
     * Filled amount
     */
    size: number;

    /**
     * Filled price
     */
    price: string;

    /**
     * Filled side; the trade side indicates the taker order side. A taker order is the order that was matched with orders opened on the order book.
     */
    side: GetTradeHistoryData.SideEnum;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.sequence = null;
        // @ts-ignore
        this.contractId = null;
        // @ts-ignore
        this.tradeId = null;
        // @ts-ignore
        this.makerOrderId = null;
        // @ts-ignore
        this.takerOrderId = null;
        // @ts-ignore
        this.ts = null;
        // @ts-ignore
        this.size = null;
        // @ts-ignore
        this.price = null;
        // @ts-ignore
        this.side = null;
    }
    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetTradeHistoryData {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetTradeHistoryData {
        return plainToClassFromExist(new GetTradeHistoryData(), jsonObject);
    }
}

export namespace GetTradeHistoryData {
    export enum SideEnum {
        /**
         * buy
         */
        BUY = <any>'buy',
        /**
         * sell
         */
        SELL = <any>'sell',
    }
}
