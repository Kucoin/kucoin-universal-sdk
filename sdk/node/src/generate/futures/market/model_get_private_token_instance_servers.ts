// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetPrivateTokenInstanceServers implements Serializable {
    /**
     * Websocket domain URL. It is recommended to use a dynamic URL, as the URL may change.
     */
    endpoint: string;

    /**
     * Whether to encrypt. Currently only supports wss, not ws
     */
    encrypt: boolean;

    /**
     * Network Protocol
     */
    protocol: GetPrivateTokenInstanceServers.ProtocolEnum;

    /**
     * Recommended ping interval (milliseconds)
     */
    pingInterval: number;

    /**
     * Heartbeat timeout (milliseconds)
     */
    pingTimeout: number;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.endpoint = null;
        // @ts-ignore
        this.encrypt = null;
        // @ts-ignore
        this.protocol = null;
        // @ts-ignore
        this.pingInterval = null;
        // @ts-ignore
        this.pingTimeout = null;
    }
    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetPrivateTokenInstanceServers {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetPrivateTokenInstanceServers {
        return plainToClassFromExist(new GetPrivateTokenInstanceServers(), jsonObject);
    }
}

export namespace GetPrivateTokenInstanceServers {
    export enum ProtocolEnum {
        /**
         * Websocket
         */
        WEBSOCKET = <any>'websocket',
    }
}
