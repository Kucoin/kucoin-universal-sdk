// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class AddSubAccountApiReq implements Serializable {
    /**
     * Sub-account UID
     */
    uid: string;

    /**
     * API passphrase
     */
    passphrase: string;

    /**
     * IP whitelist list, supports up to 20 IPs
     */
    ipWhitelist: Array<string>;

    /**
     * Permission group list (Only General, Spot and Futures permissions can be set, such as \"General, Trade\").
     */
    permissions: Array<AddSubAccountApiReq.PermissionsEnum>;

    /**
     * apikey remarks (length 4~32)
     */
    label: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.uid = null;
        // @ts-ignore
        this.passphrase = null;
        // @ts-ignore
        this.ipWhitelist = null;
        // @ts-ignore
        this.permissions = null;
        // @ts-ignore
        this.label = null;
    }
    /**
     * Creates a new instance of the `AddSubAccountApiReq` class.
     * The builder pattern allows step-by-step construction of a `AddSubAccountApiReq` object.
     */
    static builder(): AddSubAccountApiReqBuilder {
        return new AddSubAccountApiReqBuilder(new AddSubAccountApiReq());
    }

    /**
     * Creates a new instance of the `AddSubAccountApiReq` class with the given data.
     */
    static create(data: {
        /**
         * Sub-account UID
         */
        uid: string;
        /**
         * API passphrase
         */
        passphrase: string;
        /**
         * IP whitelist list, supports up to 20 IPs
         */
        ipWhitelist: Array<string>;
        /**
         * Permission group list (Only General, Spot and Futures permissions can be set, such as \"General, Trade\").
         */
        permissions: Array<AddSubAccountApiReq.PermissionsEnum>;
        /**
         * apikey remarks (length 4~32)
         */
        label: string;
    }): AddSubAccountApiReq {
        let obj = new AddSubAccountApiReq();
        obj.uid = data.uid;
        obj.passphrase = data.passphrase;
        obj.ipWhitelist = data.ipWhitelist;
        obj.permissions = data.permissions;
        obj.label = data.label;
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): AddSubAccountApiReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): AddSubAccountApiReq {
        return plainToClassFromExist(new AddSubAccountApiReq(), jsonObject);
    }
}

export namespace AddSubAccountApiReq {
    export enum PermissionsEnum {
        /**
         *
         */
        GENERAL = <any>'general',
        /**
         *
         */
        SPOT = <any>'spot',
        /**
         *
         */
        FUTURES = <any>'futures',
    }
}

export class AddSubAccountApiReqBuilder {
    constructor(readonly obj: AddSubAccountApiReq) {
        this.obj = obj;
    }
    /**
     * Sub-account UID
     */
    setUid(value: string): AddSubAccountApiReqBuilder {
        this.obj.uid = value;
        return this;
    }

    /**
     * API passphrase
     */
    setPassphrase(value: string): AddSubAccountApiReqBuilder {
        this.obj.passphrase = value;
        return this;
    }

    /**
     * IP whitelist list, supports up to 20 IPs
     */
    setIpWhitelist(value: Array<string>): AddSubAccountApiReqBuilder {
        this.obj.ipWhitelist = value;
        return this;
    }

    /**
     * Permission group list (Only General, Spot and Futures permissions can be set, such as \"General, Trade\").
     */
    setPermissions(value: Array<AddSubAccountApiReq.PermissionsEnum>): AddSubAccountApiReqBuilder {
        this.obj.permissions = value;
        return this;
    }

    /**
     * apikey remarks (length 4~32)
     */
    setLabel(value: string): AddSubAccountApiReqBuilder {
        this.obj.label = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): AddSubAccountApiReq {
        return this.obj;
    }
}
