// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class AddSubAccountReq implements Serializable {
    /**
     * Sub-account Name. Note that this name is unique across the exchange. It is recommended to add a special identifier to prevent name duplication.
     */
    accountName: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.accountName = null;
    }
    /**
     * Creates a new instance of the `AddSubAccountReq` class.
     * The builder pattern allows step-by-step construction of a `AddSubAccountReq` object.
     */
    static builder(): AddSubAccountReqBuilder {
        return new AddSubAccountReqBuilder(new AddSubAccountReq());
    }

    /**
     * Creates a new instance of the `AddSubAccountReq` class with the given data.
     */
    static create(data: {
        /**
         * Sub-account Name. Note that this name is unique across the exchange. It is recommended to add a special identifier to prevent name duplication.
         */
        accountName: string;
    }): AddSubAccountReq {
        let obj = new AddSubAccountReq();
        obj.accountName = data.accountName;
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): AddSubAccountReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): AddSubAccountReq {
        return plainToClassFromExist(new AddSubAccountReq(), jsonObject);
    }
}

export class AddSubAccountReqBuilder {
    constructor(readonly obj: AddSubAccountReq) {
        this.obj = obj;
    }
    /**
     * Sub-account Name. Note that this name is unique across the exchange. It is recommended to add a special identifier to prevent name duplication.
     */
    setAccountName(value: string): AddSubAccountReqBuilder {
        this.obj.accountName = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): AddSubAccountReq {
        return this.obj;
    }
}
