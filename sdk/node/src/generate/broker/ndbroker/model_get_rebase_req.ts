// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetRebaseReq implements Serializable {
    /**
     * Start time, for example: 20240610
     */
    begin?: string;

    /**
     * End time, for example: 20241010 (query data with a maximum interval of 6 months)
     */
    end?: string;

    /**
     * Transaction type: 1, spot; 2, futures
     */
    tradeType?: GetRebaseReq.TradeTypeEnum;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {}
    /**
     * Creates a new instance of the `GetRebaseReq` class.
     * The builder pattern allows step-by-step construction of a `GetRebaseReq` object.
     */
    static builder(): GetRebaseReqBuilder {
        return new GetRebaseReqBuilder(new GetRebaseReq());
    }

    /**
     * Creates a new instance of the `GetRebaseReq` class with the given data.
     */
    static create(data: {
        /**
         * Start time, for example: 20240610
         */
        begin?: string;
        /**
         * End time, for example: 20241010 (query data with a maximum interval of 6 months)
         */
        end?: string;
        /**
         * Transaction type: 1, spot; 2, futures
         */
        tradeType?: GetRebaseReq.TradeTypeEnum;
    }): GetRebaseReq {
        let obj = new GetRebaseReq();
        obj.begin = data.begin;
        obj.end = data.end;
        obj.tradeType = data.tradeType;
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetRebaseReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetRebaseReq {
        return plainToClassFromExist(new GetRebaseReq(), jsonObject);
    }
}

export namespace GetRebaseReq {
    export enum TradeTypeEnum {
        /**
         * spot
         */
        _1 = <any>'1',
        /**
         * futures
         */
        _2 = <any>'2',
    }
}

export class GetRebaseReqBuilder {
    constructor(readonly obj: GetRebaseReq) {
        this.obj = obj;
    }
    /**
     * Start time, for example: 20240610
     */
    setBegin(value: string): GetRebaseReqBuilder {
        this.obj.begin = value;
        return this;
    }

    /**
     * End time, for example: 20241010 (query data with a maximum interval of 6 months)
     */
    setEnd(value: string): GetRebaseReqBuilder {
        this.obj.end = value;
        return this;
    }

    /**
     * Transaction type: 1, spot; 2, futures
     */
    setTradeType(value: GetRebaseReq.TradeTypeEnum): GetRebaseReqBuilder {
        this.obj.tradeType = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): GetRebaseReq {
        return this.obj;
    }
}
