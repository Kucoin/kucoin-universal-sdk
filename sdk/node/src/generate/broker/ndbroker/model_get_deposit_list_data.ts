// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetDepositListData implements Serializable {
    /**
     * deposit uid
     */
    uid: number;

    /**
     * hash
     */
    hash: string;

    /**
     * Deposit address
     */
    address: string;

    /**
     * Address remark. If thereâ€™s no remark, it is empty. When you withdraw from other platforms to KuCoin, you need to fill in memo(tag). Be careful: If you do not fill in memo(tag), your deposit may not be available.
     */
    memo: string;

    /**
     * Deposit amount
     */
    amount: string;

    /**
     * Fees charged for deposit
     */
    fee: string;

    /**
     * currency
     */
    currency: string;

    /**
     * Internal deposit or not
     */
    isInner: boolean;

    /**
     * Wallet Txid
     */
    walletTxId: string;

    /**
     * Status. Available value: PROCESSING, SUCCESS, FAILURE
     */
    status: GetDepositListData.StatusEnum;

    /**
     * Remark
     */
    remark: string;

    /**
     * Chain name of currency
     */
    chain: string;

    /**
     * Database record creation time
     */
    createdAt: number;

    /**
     * Update time of the database record
     */
    updatedAt: number;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.uid = null;
        // @ts-ignore
        this.hash = null;
        // @ts-ignore
        this.address = null;
        // @ts-ignore
        this.memo = null;
        // @ts-ignore
        this.amount = null;
        // @ts-ignore
        this.fee = null;
        // @ts-ignore
        this.currency = null;
        // @ts-ignore
        this.isInner = null;
        // @ts-ignore
        this.walletTxId = null;
        // @ts-ignore
        this.status = null;
        // @ts-ignore
        this.remark = null;
        // @ts-ignore
        this.chain = null;
        // @ts-ignore
        this.createdAt = null;
        // @ts-ignore
        this.updatedAt = null;
    }
    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetDepositListData {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetDepositListData {
        return plainToClassFromExist(new GetDepositListData(), jsonObject);
    }
}

export namespace GetDepositListData {
    export enum StatusEnum {
        /**
         *
         */
        PROCESSING = <any>'PROCESSING',
        /**
         *
         */
        SUCCESS = <any>'SUCCESS',
        /**
         *
         */
        FAILURE = <any>'FAILURE',
    }
}
