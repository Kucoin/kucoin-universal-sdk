// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetSpotAccountListData implements Serializable {
    /**
     * Account ID
     */
    id: string;

    /**
     * Currency
     */
    currency: string;

    /**
     * Account type: main, trade, isolated (abandon), margin (abandon)
     */
    type: GetSpotAccountListData.TypeEnum;

    /**
     * Total funds in the account
     */
    balance: string;

    /**
     * Funds available to withdraw or trade
     */
    available: string;

    /**
     * Funds on hold (not available for use)
     */
    holds: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.id = null;
        // @ts-ignore
        this.currency = null;
        // @ts-ignore
        this.type = null;
        // @ts-ignore
        this.balance = null;
        // @ts-ignore
        this.available = null;
        // @ts-ignore
        this.holds = null;
    }
    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetSpotAccountListData {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetSpotAccountListData {
        return plainToClassFromExist(new GetSpotAccountListData(), jsonObject);
    }
}

export namespace GetSpotAccountListData {
    export enum TypeEnum {
        /**
         * Funding account
         */
        MAIN = <any>'main',
        /**
         * Spot account
         */
        TRADE = <any>'trade',
    }
}
