// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class FuturesAccountTransferInReq implements Serializable {
    /**
     * Currency, including XBT, USDT...
     */
    currency: string;

    /**
     * Amount to be transferred in
     */
    amount: number;

    /**
     * Payment account type, including MAIN, TRADE
     */
    payAccountType: FuturesAccountTransferInReq.PayAccountTypeEnum;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.currency = null;
        // @ts-ignore
        this.amount = null;
        // @ts-ignore
        this.payAccountType = null;
    }
    /**
     * Creates a new instance of the `FuturesAccountTransferInReq` class.
     * The builder pattern allows step-by-step construction of a `FuturesAccountTransferInReq` object.
     */
    static builder(): FuturesAccountTransferInReqBuilder {
        return new FuturesAccountTransferInReqBuilder(new FuturesAccountTransferInReq());
    }

    /**
     * Creates a new instance of the `FuturesAccountTransferInReq` class with the given data.
     */
    static create(data: {
        /**
         * Currency, including XBT, USDT...
         */
        currency: string;
        /**
         * Amount to be transferred in
         */
        amount: number;
        /**
         * Payment account type, including MAIN, TRADE
         */
        payAccountType: FuturesAccountTransferInReq.PayAccountTypeEnum;
    }): FuturesAccountTransferInReq {
        let obj = new FuturesAccountTransferInReq();
        obj.currency = data.currency;
        obj.amount = data.amount;
        obj.payAccountType = data.payAccountType;
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): FuturesAccountTransferInReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): FuturesAccountTransferInReq {
        return plainToClassFromExist(new FuturesAccountTransferInReq(), jsonObject);
    }
}

export namespace FuturesAccountTransferInReq {
    export enum PayAccountTypeEnum {
        /**
         *
         */
        MAIN = <any>'MAIN',
        /**
         *
         */
        TRADE = <any>'TRADE',
    }
}

export class FuturesAccountTransferInReqBuilder {
    constructor(readonly obj: FuturesAccountTransferInReq) {
        this.obj = obj;
    }
    /**
     * Currency, including XBT, USDT...
     */
    setCurrency(value: string): FuturesAccountTransferInReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * Amount to be transferred in
     */
    setAmount(value: number): FuturesAccountTransferInReqBuilder {
        this.obj.amount = value;
        return this;
    }

    /**
     * Payment account type, including MAIN, TRADE
     */
    setPayAccountType(
        value: FuturesAccountTransferInReq.PayAccountTypeEnum,
    ): FuturesAccountTransferInReqBuilder {
        this.obj.payAccountType = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): FuturesAccountTransferInReq {
        return this.obj;
    }
}
