// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetSpotActualFeeData implements Serializable {
    /**
     * The unique identity of the trading pair; will not change even if the trading pair is renamed
     */
    symbol: string;

    /**
     * Actual taker fee rate of the symbol
     */
    takerFeeRate: string;

    /**
     * Actual maker fee rate of the symbol
     */
    makerFeeRate: string;

    /**
     * Buy tax rate; this field is visible to users in certain countries
     */
    sellTaxRate?: string;

    /**
     * Sell tax rate; this field is visible to users in certain countries
     */
    buyTaxRate?: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.symbol = null;
        // @ts-ignore
        this.takerFeeRate = null;
        // @ts-ignore
        this.makerFeeRate = null;
    }
    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetSpotActualFeeData {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetSpotActualFeeData {
        return plainToClassFromExist(new GetSpotActualFeeData(), jsonObject);
    }
}
