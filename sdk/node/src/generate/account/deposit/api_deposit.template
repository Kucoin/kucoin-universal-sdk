
describe('Auto Test', ()=> {
    let api: DepositAPI;

    beforeAll(()=> {
        api = ??
    });
    test('addDepositAddressV3 request test', ()=> {
    /**
    * addDepositAddressV3
    * Add Deposit Address (V3)
    * /api/v3/deposit-address/create
    */
    let builder = AddDepositAddressV3Req.builder();
    builder.setCurrency(?).setChain(?).setTo(?).setAmount(?);
    let req = builder.build();
    let resp = api.addDepositAddressV3(req);
    return resp.then(result => {
        expect(result.address).toEqual(expect.anything());
        expect(result.memo).toEqual(expect.anything());
        expect(result.chainId).toEqual(expect.anything());
        expect(result.to).toEqual(expect.anything());
        expect(result.expirationDate).toEqual(expect.anything());
        expect(result.currency).toEqual(expect.anything());
        expect(result.chainName).toEqual(expect.anything());
        console.log(resp);
    });
    })

    test('getDepositAddressV3 request test', ()=> {
    /**
    * getDepositAddressV3
    * Get Deposit Address (V3)
    * /api/v3/deposit-addresses
    */
    let builder = GetDepositAddressV3Req.builder();
    builder.setCurrency(?).setAmount(?).setChain(?);
    let req = builder.build();
    let resp = api.getDepositAddressV3(req);
    return resp.then(result => {
        expect(result.data).toEqual(expect.anything());
        console.log(resp);
    });
    })

    test('getDepositHistory request test', ()=> {
    /**
    * getDepositHistory
    * Get Deposit History
    * /api/v1/deposits
    */
    let builder = GetDepositHistoryReq.builder();
    builder.setCurrency(?).setStatus(?).setStartAt(?).setEndAt(?).setCurrentPage(?).setPageSize(?);
    let req = builder.build();
    let resp = api.getDepositHistory(req);
    return resp.then(result => {
        expect(result.currentPage).toEqual(expect.anything());
        expect(result.pageSize).toEqual(expect.anything());
        expect(result.totalNum).toEqual(expect.anything());
        expect(result.totalPage).toEqual(expect.anything());
        expect(result.items).toEqual(expect.anything());
        console.log(resp);
    });
    })

    test('getDepositAddressV2 request test', ()=> {
    /**
    * getDepositAddressV2
    * Get Deposit Addresses (V2)
    * /api/v2/deposit-addresses
    */
    let builder = GetDepositAddressV2Req.builder();
    builder.setCurrency(?).setChain(?);
    let req = builder.build();
    let resp = api.getDepositAddressV2(req);
    return resp.then(result => {
        expect(result.data).toEqual(expect.anything());
        console.log(resp);
    });
    })

    test('getDepositAddressV1 request test', ()=> {
    /**
    * getDepositAddressV1
    * Get Deposit Addresses - V1
    * /api/v1/deposit-addresses
    */
    let builder = GetDepositAddressV1Req.builder();
    builder.setCurrency(?).setChain(?);
    let req = builder.build();
    let resp = api.getDepositAddressV1(req);
    return resp.then(result => {
        expect(result.address).toEqual(expect.anything());
        expect(result.memo).toEqual(expect.anything());
        expect(result.chain).toEqual(expect.anything());
        expect(result.chainId).toEqual(expect.anything());
        expect(result.to).toEqual(expect.anything());
        expect(result.currency).toEqual(expect.anything());
        expect(result.contractAddress).toEqual(expect.anything());
        console.log(resp);
    });
    })

    test('getDepositHistoryOld request test', ()=> {
    /**
    * getDepositHistoryOld
    * Get Deposit History - Old
    * /api/v1/hist-deposits
    */
    let builder = GetDepositHistoryOldReq.builder();
    builder.setCurrency(?).setStatus(?).setStartAt(?).setEndAt(?);
    let req = builder.build();
    let resp = api.getDepositHistoryOld(req);
    return resp.then(result => {
        expect(result.currentPage).toEqual(expect.anything());
        expect(result.pageSize).toEqual(expect.anything());
        expect(result.totalNum).toEqual(expect.anything());
        expect(result.totalPage).toEqual(expect.anything());
        expect(result.items).toEqual(expect.anything());
        console.log(resp);
    });
    })

    test('addDepositAddressV1 request test', ()=> {
    /**
    * addDepositAddressV1
    * Add Deposit Address - V1
    * /api/v1/deposit-addresses
    */
    let builder = AddDepositAddressV1Req.builder();
    builder.setCurrency(?).setChain(?).setTo(?);
    let req = builder.build();
    let resp = api.addDepositAddressV1(req);
    return resp.then(result => {
        expect(result.address).toEqual(expect.anything());
        expect(result.memo).toEqual(expect.anything());
        expect(result.chain).toEqual(expect.anything());
        expect(result.chainId).toEqual(expect.anything());
        expect(result.to).toEqual(expect.anything());
        expect(result.currency).toEqual(expect.anything());
        console.log(resp);
    });
    })

})