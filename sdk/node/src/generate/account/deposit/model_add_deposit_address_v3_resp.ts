// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, Exclude, plainToClassFromExist } from 'class-transformer';
import { RestResponse } from '@model/common';
import { Response } from '@internal/interfaces/serializable';

export class AddDepositAddressV3Resp implements Response<RestResponse> {
    /**
     * Deposit address
     */
    address: string;

    /**
     * Address remark. If thereâ€™s no remark, it is empty. When you withdraw from other platforms to KuCoin, you need to fill in memo(tag). Be careful: If you do not fill in memo(tag), your deposit may not be available.
     */
    memo: string;

    /**
     * The chainId of currency
     */
    chainId: string;

    /**
     * Deposit account type: MAIN (funding account), TRADE (spot trading account)
     */
    to: string;

    /**
     * Expiration time; Lightning network expiration time; this field is not applicable to non-Lightning networks
     */
    expirationDate: number;

    /**
     * currency
     */
    currency: string;

    /**
     * The chainName of currency
     */
    chainName: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.address = null;
        // @ts-ignore
        this.memo = null;
        // @ts-ignore
        this.chainId = null;
        // @ts-ignore
        this.to = null;
        // @ts-ignore
        this.expirationDate = null;
        // @ts-ignore
        this.currency = null;
        // @ts-ignore
        this.chainName = null;
    }
    /**
     * common response
     */
    @Exclude()
    commonResponse?: RestResponse;

    setCommonResponse(response: RestResponse): void {
        this.commonResponse = response;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): AddDepositAddressV3Resp {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): AddDepositAddressV3Resp {
        return plainToClassFromExist(new AddDepositAddressV3Resp(), jsonObject);
    }
}
