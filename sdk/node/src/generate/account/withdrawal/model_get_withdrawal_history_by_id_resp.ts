// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, Exclude, plainToClassFromExist } from 'class-transformer';
import { RestResponse } from '@model/common';
import { Response } from '@internal/interfaces/serializable';

export class GetWithdrawalHistoryByIdResp implements Response<RestResponse> {
    /**
     * Unique ID
     */
    id: string;

    /**
     * User ID
     */
    uid: number;

    /**
     * A unique currency code that will never change
     */
    currency: string;

    /**
     * The chain id of currency
     */
    chainId: string;

    /**
     * Chain name of currency
     */
    chainName: string;

    /**
     * Currency name; will change after renaming
     */
    currencyName: string;

    /**
     * Status. Available value: REVIEW, PROCESSING, WALLET_PROCESSING, SUCCESS and FAILURE
     */
    status: string;

    /**
     * Failure reason code
     */
    failureReason: string;

    /**
     * Failure reason message
     */
    failureReasonMsg?: string;

    /**
     * Withwrawal address
     */
    address: string;

    /**
     * Address remark. If thereâ€™s no remark, it is empty.
     */
    memo: string;

    /**
     * Internal withdrawal or not.
     */
    isInner: boolean;

    /**
     * Withwrawal amount
     */
    amount: string;

    /**
     * Fees charged for withwrawal
     */
    fee: string;

    /**
     * Wallet Transaction ID
     */
    walletTxId?: string;

    /**
     * Address remark
     */
    addressRemark?: string;

    /**
     * Remark
     */
    remark: string;

    /**
     * Creation Time (milliseconds)
     */
    createdAt: number;

    /**
     *
     */
    cancelType: GetWithdrawalHistoryByIdResp.CancelTypeEnum;

    /**
     * Users in some regions need query this field
     */
    taxes?: Array<string>;

    /**
     * Tax description
     */
    taxDescription?: string;

    /**
     * Return status
     */
    returnStatus: GetWithdrawalHistoryByIdResp.ReturnStatusEnum;

    /**
     * Return amount
     */
    returnAmount?: string;

    /**
     * Return currency
     */
    returnCurrency: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.id = null;
        // @ts-ignore
        this.uid = null;
        // @ts-ignore
        this.currency = null;
        // @ts-ignore
        this.chainId = null;
        // @ts-ignore
        this.chainName = null;
        // @ts-ignore
        this.currencyName = null;
        // @ts-ignore
        this.status = null;
        // @ts-ignore
        this.failureReason = null;
        // @ts-ignore
        this.address = null;
        // @ts-ignore
        this.memo = null;
        // @ts-ignore
        this.isInner = null;
        // @ts-ignore
        this.amount = null;
        // @ts-ignore
        this.fee = null;
        // @ts-ignore
        this.remark = null;
        // @ts-ignore
        this.createdAt = null;
        // @ts-ignore
        this.cancelType = null;
        // @ts-ignore
        this.returnStatus = null;
        // @ts-ignore
        this.returnCurrency = null;
    }
    /**
     * common response
     */
    @Exclude()
    commonResponse?: RestResponse;

    setCommonResponse(response: RestResponse): void {
        this.commonResponse = response;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetWithdrawalHistoryByIdResp {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetWithdrawalHistoryByIdResp {
        return plainToClassFromExist(new GetWithdrawalHistoryByIdResp(), jsonObject);
    }
}

export namespace GetWithdrawalHistoryByIdResp {
    export enum CancelTypeEnum {
        /**
         * Cancellable
         */
        CANCELABLE = <any>'CANCELABLE',
        /**
         * Cancelling
         */
        CANCELING = <any>'CANCELING',
        /**
         * Non-Cancellable
         */
        NON_CANCELABLE = <any>'NON_CANCELABLE',
    }
    export enum ReturnStatusEnum {
        /**
         * No returned
         */
        NOT_RETURN = <any>'NOT_RETURN',
        /**
         * To be returned
         */
        PROCESSING = <any>'PROCESSING',
        /**
         * Returned
         */
        SUCCESS = <any>'SUCCESS',
    }
}
