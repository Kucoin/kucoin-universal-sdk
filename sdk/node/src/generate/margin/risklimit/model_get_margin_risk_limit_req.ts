// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetMarginRiskLimitReq implements Serializable {
    /**
     * True-isolated, false-cross
     */
    isIsolated?: boolean;

    /**
     * Currency: This field is only required for cross margin
     */
    currency?: string;

    /**
     * Symbol: This field is only required for isolated margin
     */
    symbol?: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {}
    /**
     * Creates a new instance of the `GetMarginRiskLimitReq` class.
     * The builder pattern allows step-by-step construction of a `GetMarginRiskLimitReq` object.
     */
    static builder(): GetMarginRiskLimitReqBuilder {
        return new GetMarginRiskLimitReqBuilder(new GetMarginRiskLimitReq());
    }

    /**
     * Creates a new instance of the `GetMarginRiskLimitReq` class with the given data.
     */
    static create(data: {
        /**
         * True-isolated, false-cross
         */
        isIsolated?: boolean;
        /**
         * Currency: This field is only required for cross margin
         */
        currency?: string;
        /**
         * Symbol: This field is only required for isolated margin
         */
        symbol?: string;
    }): GetMarginRiskLimitReq {
        let obj = new GetMarginRiskLimitReq();
        obj.isIsolated = data.isIsolated;
        obj.currency = data.currency;
        obj.symbol = data.symbol;
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetMarginRiskLimitReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetMarginRiskLimitReq {
        return plainToClassFromExist(new GetMarginRiskLimitReq(), jsonObject);
    }
}

export class GetMarginRiskLimitReqBuilder {
    constructor(readonly obj: GetMarginRiskLimitReq) {
        this.obj = obj;
    }
    /**
     * True-isolated, false-cross
     */
    setIsIsolated(value: boolean): GetMarginRiskLimitReqBuilder {
        this.obj.isIsolated = value;
        return this;
    }

    /**
     * Currency: This field is only required for cross margin
     */
    setCurrency(value: string): GetMarginRiskLimitReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * Symbol: This field is only required for isolated margin
     */
    setSymbol(value: string): GetMarginRiskLimitReqBuilder {
        this.obj.symbol = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): GetMarginRiskLimitReq {
        return this.obj;
    }
}
