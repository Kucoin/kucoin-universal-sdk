// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class RedeemReq implements Serializable {
    /**
     * Currency
     */
    currency: string;

    /**
     * Redemption amount
     */
    size: string;

    /**
     * Purchase order ID
     */
    purchaseOrderNo: string;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.currency = null;
        // @ts-ignore
        this.size = null;
        // @ts-ignore
        this.purchaseOrderNo = null;
    }
    /**
     * Creates a new instance of the `RedeemReq` class.
     * The builder pattern allows step-by-step construction of a `RedeemReq` object.
     */
    static builder(): RedeemReqBuilder {
        return new RedeemReqBuilder(new RedeemReq());
    }

    /**
     * Creates a new instance of the `RedeemReq` class with the given data.
     */
    static create(data: {
        /**
         * Currency
         */
        currency: string;
        /**
         * Redemption amount
         */
        size: string;
        /**
         * Purchase order ID
         */
        purchaseOrderNo: string;
    }): RedeemReq {
        let obj = new RedeemReq();
        obj.currency = data.currency;
        obj.size = data.size;
        obj.purchaseOrderNo = data.purchaseOrderNo;
        return obj;
    }

    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): RedeemReq {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): RedeemReq {
        return plainToClassFromExist(new RedeemReq(), jsonObject);
    }
}

export class RedeemReqBuilder {
    constructor(readonly obj: RedeemReq) {
        this.obj = obj;
    }
    /**
     * Currency
     */
    setCurrency(value: string): RedeemReqBuilder {
        this.obj.currency = value;
        return this;
    }

    /**
     * Redemption amount
     */
    setSize(value: string): RedeemReqBuilder {
        this.obj.size = value;
        return this;
    }

    /**
     * Purchase order ID
     */
    setPurchaseOrderNo(value: string): RedeemReqBuilder {
        this.obj.purchaseOrderNo = value;
        return this;
    }

    /**
     * Get the final object.
     */
    build(): RedeemReq {
        return this.obj;
    }
}
