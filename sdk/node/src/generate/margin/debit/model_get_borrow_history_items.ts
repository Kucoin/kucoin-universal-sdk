// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

import { instanceToPlain, plainToClassFromExist } from 'class-transformer';
import { Serializable } from '@internal/interfaces/serializable';

export class GetBorrowHistoryItems implements Serializable {
    /**
     * Borrow Order ID
     */
    orderNo: string;

    /**
     * Isolated Margin symbol; empty for cross margin
     */
    symbol: string;

    /**
     * currency
     */
    currency: string;

    /**
     * Initiated borrow amount
     */
    size: string;

    /**
     * Actual borrow amount
     */
    actualSize: string;

    /**
     * PENDING: Processing, SUCCESS: Successful, FAILED: Failed
     */
    status: GetBorrowHistoryItems.StatusEnum;

    /**
     * Borrow time
     */
    createdTime: number;

    /**
     * Private constructor, please use the corresponding static methods to construct the object.
     */
    private constructor() {
        // @ts-ignore
        this.orderNo = null;
        // @ts-ignore
        this.symbol = null;
        // @ts-ignore
        this.currency = null;
        // @ts-ignore
        this.size = null;
        // @ts-ignore
        this.actualSize = null;
        // @ts-ignore
        this.status = null;
        // @ts-ignore
        this.createdTime = null;
    }
    /**
     * Convert the object to a JSON string.
     */
    toJson(): string {
        return JSON.stringify(instanceToPlain(this));
    }
    /**
     * Create an object from a JSON string.
     */
    static fromJson(input: string): GetBorrowHistoryItems {
        return this.fromObject(JSON.parse(input));
    }
    /**
     * Create an object from Js Object.
     */
    static fromObject(jsonObject: Object): GetBorrowHistoryItems {
        return plainToClassFromExist(new GetBorrowHistoryItems(), jsonObject);
    }
}

export namespace GetBorrowHistoryItems {
    export enum StatusEnum {
        /**
         *
         */
        PENDING = <any>'PENDING',
        /**
         *
         */
        SUCCESS = <any>'SUCCESS',
        /**
         *
         */
        FAILED = <any>'FAILED',
    }
}
