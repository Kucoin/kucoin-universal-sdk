// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.earn.earn;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetAccountHoldingReq implements Request {
  /** currency */
  @JsonProperty("currency")
  private String currency;

  /** Product ID */
  @JsonProperty("productId")
  private String productId;

  /** Product category */
  @JsonProperty("productCategory")
  private ProductCategoryEnum productCategory;

  /** Current request page. */
  @JsonProperty("currentPage")
  @Builder.Default
  private Integer currentPage = 1;

  /** Number of results per request. Minimum is 10, maximum is 500. */
  @JsonProperty("pageSize")
  @Builder.Default
  private Integer pageSize = 15;

  public enum ProductCategoryEnum {
    /** Savings */
    DEMAND("DEMAND"),
    /** Activity */
    ACTIVITY("ACTIVITY"),
    /** Staking */
    STAKING("STAKING"),
    /** KCS Staking */
    KCS_STAKING("KCS_STAKING"),
    /** ETHStaking */
    ETH2("ETH2");

    private final String value;

    ProductCategoryEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ProductCategoryEnum fromValue(String value) {
      for (ProductCategoryEnum b : ProductCategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
