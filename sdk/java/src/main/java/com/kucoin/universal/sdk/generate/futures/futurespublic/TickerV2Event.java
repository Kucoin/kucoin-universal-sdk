// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.futures.futurespublic;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.kucoin.universal.sdk.internal.interfaces.Response;
import com.kucoin.universal.sdk.internal.interfaces.WebSocketMessageCallback;
import com.kucoin.universal.sdk.model.WsMessage;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class TickerV2Event implements Response<TickerV2Event, WsMessage<TickerV2Event>> {
  /** */
  @JsonProperty("symbol")
  private String symbol;

  /** */
  @JsonProperty("sequence")
  private Long sequence;

  /** */
  @JsonProperty("bestBidSize")
  private Integer bestBidSize;

  /** */
  @JsonProperty("bestBidPrice")
  private String bestBidPrice;

  /** */
  @JsonProperty("bestAskPrice")
  private String bestAskPrice;

  /** */
  @JsonProperty("bestAskSize")
  private Integer bestAskSize;

  /** */
  @JsonProperty("ts")
  private Long ts;

  /** common response */
  @JsonIgnore private WsMessage<TickerV2Event> commonResponse;

  @Override
  public void setCommonResponse(WsMessage<TickerV2Event> response) {
    this.commonResponse = response;
  }

  @FunctionalInterface
  public interface Callback {
    void onEvent(String topic, String subject, TickerV2Event data);
  }

  public static class CallbackAdapters {
    public static WebSocketMessageCallback<TickerV2Event> of(Callback callback) {
      return msg -> callback.onEvent(msg.getTopic(), msg.getSubject(), msg.getData());
    }
  }
}
