// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.spot.spotpublic;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.kucoin.universal.sdk.internal.interfaces.Response;
import com.kucoin.universal.sdk.internal.interfaces.WebSocketMessageCallback;
import com.kucoin.universal.sdk.model.WsMessage;
import java.util.ArrayList;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class KlinesEvent
    implements Response<KlinesEvent, WsMessage<KlinesEvent>> {
  /**
   * symbol
   */
  @JsonProperty("symbol") private String symbol;
  /**
   * Start time of the candle cycle,open price,close price, high price,low
   * price,Transaction volume,Transaction amount
   */
  @JsonProperty("candles") private List<String> candles = new ArrayList<>();
  /**
   * now（us）
   */
  @JsonProperty("time") private Long time;
  /**
   * common response
   */
  @JsonIgnore private WsMessage<KlinesEvent> commonResponse;

  @Override
  public void setCommonResponse(WsMessage<KlinesEvent> response) {
    this.commonResponse = response;
  }

  @FunctionalInterface
  public interface Callback {
    void onEvent(String topic, String subject, KlinesEvent data);
  }

  public static class CallbackAdapters {
    public static WebSocketMessageCallback<KlinesEvent> of(Callback callback) {
      return msg
          -> callback.onEvent(msg.getTopic(), msg.getSubject(), msg.getData());
    }
  }
}
