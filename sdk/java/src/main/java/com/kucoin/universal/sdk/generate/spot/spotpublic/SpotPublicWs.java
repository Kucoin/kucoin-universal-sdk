// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.spot.spotpublic;

public interface SpotPublicWs {

  /**
   * Get All Tickers
   *
   * <p>Subscribe to this topic to get pushes on all market symbol BBO changes.
   *
   * <p>push frequency: once every 100ms
   */
  String allTickers(AllTickersEvent.Callback callback);

  /**
   * Get Call Auction Info
   *
   * <p>Subscribe to this topic to get the specified symbol call auction info.
   *
   * <p>push frequency: once every 100ms
   */
  String callAuctionInfo(String symbol, CallAuctionInfoEvent.Callback callback);

  /**
   * CallAuctionOrderbook - Level50
   *
   * <p>The system will return the call auction 50 best ask/bid orders data; if there is no change
   * in the market, data will not be pushed
   *
   * <p>push frequency: once every 100ms
   */
  String callAuctionOrderbookLevel50(
      String symbol, CallAuctionOrderbookLevel50Event.Callback callback);

  /**
   * Klines
   *
   * <p>Subscribe to this topic to get K-Line data.
   *
   * <p>push frequency: real-time
   */
  String klines(String symbol, String type, KlinesEvent.Callback callback);

  /**
   * Market Snapshot
   *
   * <p>Subscribe to this topic to get snapshot data for the entire market.
   *
   * <p>push frequency: once every 2s
   */
  String marketSnapshot(String market, MarketSnapshotEvent.Callback callback);

  /**
   * Orderbook - Increment
   *
   * <p>The system will return the increment change orderbook data (all depths); a topic supports up
   * to 100 symbols. If there is no change in the market, data will not be pushed
   *
   * <p>push frequency: real-time
   */
  String orderbookIncrement(String[] symbol, OrderbookIncrementEvent.Callback callback);

  /**
   * Orderbook - Level1
   *
   * <p>The system will return the 1 best ask/bid orders data; a topic supports up to 100 symbols.
   * If there is no change in the market, data will not be pushed
   *
   * <p>push frequency: once every 10ms
   */
  String orderbookLevel1(String[] symbol, OrderbookLevel1Event.Callback callback);

  /**
   * Orderbook - Level50
   *
   * <p>The system will return data for the 50 best ask/bid orders; a topic supports up to 100
   * symbols. If there is no change in the market, data will not be pushed
   *
   * <p>push frequency: once every 100ms
   */
  String orderbookLevel50(String[] symbol, OrderbookLevel50Event.Callback callback);

  /**
   * Orderbook - Level5
   *
   * <p>The system will return the 5 best ask/bid orders data; a topic supports up to 100 symbols.
   * If there is no change in the market, data will not be pushed
   *
   * <p>push frequency: once every 100ms
   */
  String orderbookLevel5(String[] symbol, OrderbookLevel5Event.Callback callback);

  /**
   * Symbol Snapshot
   *
   * <p>Subscribe to get snapshot data for a single symbol.
   *
   * <p>push frequency: once every 2s
   */
  String symbolSnapshot(String symbol, SymbolSnapshotEvent.Callback callback);

  /**
   * Get Ticker
   *
   * <p>Subscribe to this topic to get specified symbol pushes on BBO changes.
   *
   * <p>push frequency: once every 100ms
   */
  String ticker(String[] symbol, TickerEvent.Callback callback);

  /**
   * Trade
   *
   * <p>Subscribe to this topic to get Level 3 matching event data flows. A topic supports up to 100
   * symbols.
   *
   * <p>push frequency: real-time
   */
  String trade(String[] symbol, TradeEvent.Callback callback);

  /** Unsubscribe from topics */
  void unSubscribe(String id);

  /** Start websocket */
  void start();

  /** Stop websocket */
  void stop();
}
