// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.spot.market;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetKlinesReq implements Request {
  /** symbol */
  @JsonProperty("symbol")
  private String symbol;

  /**
   * Type of candlestick patterns: 1min, 3min, 5min, 15min, 30min, 1hour, 2hour, 4hour, 6hour,
   * 8hour, 12hour, 1day, 1week, 1month
   */
  @JsonProperty("type")
  private TypeEnum type;

  /** Start time (second), default is 0 */
  @JsonProperty("startAt")
  @Builder.Default
  private Long startAt = 0l;

  /** End time (second), default is 0 */
  @JsonProperty("endAt")
  @Builder.Default
  private Long endAt = 0l;

  public enum TypeEnum {
    /** 1min */
    _1MIN("1min"),
    /** 3min */
    _3MIN("3min"),
    /** 5min */
    _5MIN("5min"),
    /** 15min */
    _15MIN("15min"),
    /** 30min */
    _30MIN("30min"),
    /** 1hour */
    _1HOUR("1hour"),
    /** 2hour */
    _2HOUR("2hour"),
    /** 4hour */
    _4HOUR("4hour"),
    /** 6hour */
    _6HOUR("6hour"),
    /** 8hour */
    _8HOUR("8hour"),
    /** 12hour */
    _12HOUR("12hour"),
    /** 1day */
    _1DAY("1day"),
    /** 1week */
    _1WEEK("1week"),
    /** 1month */
    _1MONTH("1month");

    private final String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
