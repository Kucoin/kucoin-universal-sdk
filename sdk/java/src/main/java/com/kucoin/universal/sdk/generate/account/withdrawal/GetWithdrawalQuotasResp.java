// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.account.withdrawal;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.kucoin.universal.sdk.internal.interfaces.Response;
import com.kucoin.universal.sdk.model.RestResponse;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetWithdrawalQuotasResp
    implements Response<GetWithdrawalQuotasResp, RestResponse<GetWithdrawalQuotasResp>> {
  /** */
  @JsonProperty("currency")
  private String currency;

  /** */
  @JsonProperty("limitBTCAmount")
  private String limitBTCAmount;

  /** */
  @JsonProperty("usedBTCAmount")
  private String usedBTCAmount;

  /** Withdrawal limit currency */
  @JsonProperty("quotaCurrency")
  private String quotaCurrency;

  /** The intraday available withdrawal amount (withdrawal limit currency) */
  @JsonProperty("limitQuotaCurrencyAmount")
  private String limitQuotaCurrencyAmount;

  /** The intraday cumulative withdrawal amount (withdrawal limit currency) */
  @JsonProperty("usedQuotaCurrencyAmount")
  private String usedQuotaCurrencyAmount;

  /** Remaining amount available to withdraw the current day */
  @JsonProperty("remainAmount")
  private String remainAmount;

  /** Current available withdrawal amount */
  @JsonProperty("availableAmount")
  private String availableAmount;

  /** Minimum withdrawal fee */
  @JsonProperty("withdrawMinFee")
  private String withdrawMinFee;

  /** Fees for internal withdrawal */
  @JsonProperty("innerWithdrawMinFee")
  private String innerWithdrawMinFee;

  /** Minimum withdrawal amount */
  @JsonProperty("withdrawMinSize")
  private String withdrawMinSize;

  /** Is the withdraw function enabled? */
  @JsonProperty("isWithdrawEnabled")
  private Boolean isWithdrawEnabled;

  /** Floating point precision. */
  @JsonProperty("precision")
  private Integer precision;

  /** The chainName of currency */
  @JsonProperty("chain")
  private String chain;

  /** Reasons for restriction. Usually empty. */
  @JsonProperty("reason")
  private String reason;

  /** Total locked amount (including the amount locked into USDT for each currency) */
  @JsonProperty("lockedAmount")
  private String lockedAmount;

  /** common response */
  @JsonIgnore private RestResponse<GetWithdrawalQuotasResp> commonResponse;

  @Override
  public void setCommonResponse(RestResponse<GetWithdrawalQuotasResp> response) {
    this.commonResponse = response;
  }
}
