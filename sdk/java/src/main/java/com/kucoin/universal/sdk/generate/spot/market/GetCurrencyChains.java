// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.spot.market;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetCurrencyChains {
  /** Chain name of currency */
  @JsonProperty("chainName")
  private String chainName;

  /** Minimum withdrawal amount */
  @JsonProperty("withdrawalMinSize")
  private String withdrawalMinSize;

  /** Minimum deposit amount */
  @JsonProperty("depositMinSize")
  private String depositMinSize;

  /** Withdraw fee rate */
  @JsonProperty("withdrawFeeRate")
  private String withdrawFeeRate;

  /** Minimum fees charged for withdrawal */
  @JsonProperty("withdrawalMinFee")
  private String withdrawalMinFee;

  /** Withdrawal support or not */
  @JsonProperty("isWithdrawEnabled")
  private Boolean isWithdrawEnabled;

  /** Deposit support or not */
  @JsonProperty("isDepositEnabled")
  private Boolean isDepositEnabled;

  /** Number of block confirmations */
  @JsonProperty("confirms")
  private Integer confirms;

  /** The number of blocks (confirmations) for advance on-chain verification */
  @JsonProperty("preConfirms")
  private Integer preConfirms;

  /** Contract address */
  @JsonProperty("contractAddress")
  private String contractAddress;

  /**
   * Withdrawal precision bit, indicating the maximum supported length after the decimal point of
   * the withdrawal amount
   */
  @JsonProperty("withdrawPrecision")
  private Integer withdrawPrecision;

  /** Maximum amount of single withdrawal */
  @JsonProperty("maxWithdraw")
  private Double maxWithdraw;

  /** Maximum amount of single deposit (only applicable to Lightning Network) */
  @JsonProperty("maxDeposit")
  private String maxDeposit;

  /** Need for memo/tag or not */
  @JsonProperty("needTag")
  private Boolean needTag;

  /** Chain id of currency */
  @JsonProperty("chainId")
  private String chainId;
}
