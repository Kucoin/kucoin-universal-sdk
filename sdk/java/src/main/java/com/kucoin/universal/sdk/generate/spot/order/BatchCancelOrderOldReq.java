// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.spot.order;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class BatchCancelOrderOldReq implements Request {
  /** symbol */
  @JsonProperty("symbol")
  private String symbol;

  /**
   * The type of trading :TRADE(Spot Trading), MARGIN_TRADE(Cross Margin Trading),
   * MARGIN_ISOLATED_TRADE(Isolated Margin Trading), and the default is TRADE to cancel the spot
   * trading orders.
   */
  @JsonProperty("tradeType")
  @Builder.Default
  private TradeTypeEnum tradeType = TradeTypeEnum.TRADE;

  public enum TradeTypeEnum {
    /** Spot Trading */
    TRADE("TRADE"),
    /** Cross Margin Trading */
    MARGIN_TRADE("MARGIN_TRADE"),
    /** Isolated Margin Trading */
    MARGIN_ISOLATED_TRADE("MARGIN_ISOLATED_TRADE");

    private final String value;

    TradeTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TradeTypeEnum fromValue(String value) {
      for (TradeTypeEnum b : TradeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
