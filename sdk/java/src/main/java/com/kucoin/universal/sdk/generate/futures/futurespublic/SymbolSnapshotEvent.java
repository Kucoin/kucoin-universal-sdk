// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.futures.futurespublic;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.kucoin.universal.sdk.internal.interfaces.Response;
import com.kucoin.universal.sdk.internal.interfaces.WebSocketMessageCallback;
import com.kucoin.universal.sdk.model.WsMessage;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class SymbolSnapshotEvent
    implements Response<SymbolSnapshotEvent, WsMessage<SymbolSnapshotEvent>> {
  /** */
  @JsonProperty("highPrice")
  private Double highPrice;

  /** */
  @JsonProperty("lastPrice")
  private Double lastPrice;

  /** */
  @JsonProperty("lowPrice")
  private Double lowPrice;

  /** */
  @JsonProperty("price24HoursBefore")
  private Double price24HoursBefore;

  /** */
  @JsonProperty("priceChg")
  private Double priceChg;

  /** */
  @JsonProperty("priceChgPct")
  private Double priceChgPct;

  /** */
  @JsonProperty("symbol")
  private String symbol;

  /** */
  @JsonProperty("ts")
  private Long ts;

  /** */
  @JsonProperty("turnover")
  private Double turnover;

  /** */
  @JsonProperty("volume")
  private Double volume;

  /** common response */
  @JsonIgnore private WsMessage<SymbolSnapshotEvent> commonResponse;

  @Override
  public void setCommonResponse(WsMessage<SymbolSnapshotEvent> response) {
    this.commonResponse = response;
  }

  @FunctionalInterface
  public interface Callback {
    void onEvent(String topic, String subject, SymbolSnapshotEvent data);
  }

  public static class CallbackAdapters {
    public static WebSocketMessageCallback<SymbolSnapshotEvent> of(Callback callback) {
      return msg -> callback.onEvent(msg.getTopic(), msg.getSubject(), msg.getData());
    }
  }
}
