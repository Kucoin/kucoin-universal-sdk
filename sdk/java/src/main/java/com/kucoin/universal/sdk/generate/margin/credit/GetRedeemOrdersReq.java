// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.margin.credit;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetRedeemOrdersReq implements Request {
  /** DONE-completed; PENDING-settling */
  @JsonProperty("status")
  private StatusEnum status;

  /** currency */
  @JsonProperty("currency")
  private String currency;

  /** Redeem order ID */
  @JsonProperty("redeemOrderNo")
  private String redeemOrderNo;

  /** Current page; default is 1 */
  @JsonProperty("currentPage")
  @Builder.Default
  private Integer currentPage = 1;

  /** Page size; 1<=pageSize<=50; default is 50 */
  @JsonProperty("pageSize")
  @Builder.Default
  private Integer pageSize = 50;

  public enum StatusEnum {
    /** completed */
    DONE("DONE"),
    /** settling */
    PENDING("PENDING");

    private final String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
