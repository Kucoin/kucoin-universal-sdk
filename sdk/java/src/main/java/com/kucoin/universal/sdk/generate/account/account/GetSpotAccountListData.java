// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.account.account;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetSpotAccountListData {
  /** Account ID */
  @JsonProperty("id")
  private String id;

  /** Currency */
  @JsonProperty("currency")
  private String currency;

  /** Account type: main, trade, isolated (abandon), margin (abandon) */
  @JsonProperty("type")
  private TypeEnum type;

  /** Total funds in the account */
  @JsonProperty("balance")
  private String balance;

  /** Funds available to withdraw or trade */
  @JsonProperty("available")
  private String available;

  /** Funds on hold (not available for use) */
  @JsonProperty("holds")
  private String holds;

  public enum TypeEnum {
    /** Funding account */
    MAIN("main"),
    /** Spot account */
    TRADE("trade");

    private final String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
