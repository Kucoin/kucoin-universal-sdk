// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.spot.order;

import com.kucoin.universal.sdk.internal.interfaces.Transport;

public class OrderApiImpl implements OrderApi {
  private final Transport transport;

  public OrderApiImpl(Transport transport) {
    this.transport = transport;
  }

  public AddOrderResp addOrder(AddOrderReq req) {
    return this.transport.call(
        "spot", false, "POST", "/api/v1/hf/orders", req, AddOrderResp.class, false);
  }

  public AddOrderSyncResp addOrderSync(AddOrderSyncReq req) {
    return this.transport.call(
        "spot", false, "POST", "/api/v1/hf/orders/sync", req, AddOrderSyncResp.class, false);
  }

  public AddOrderTestResp addOrderTest(AddOrderTestReq req) {
    return this.transport.call(
        "spot", false, "POST", "/api/v1/hf/orders/test", req, AddOrderTestResp.class, false);
  }

  public BatchAddOrdersResp batchAddOrders(BatchAddOrdersReq req) {
    return this.transport.call(
        "spot", false, "POST", "/api/v1/hf/orders/multi", req, BatchAddOrdersResp.class, false);
  }

  public BatchAddOrdersSyncResp batchAddOrdersSync(BatchAddOrdersSyncReq req) {
    return this.transport.call(
        "spot",
        false,
        "POST",
        "/api/v1/hf/orders/multi/sync",
        req,
        BatchAddOrdersSyncResp.class,
        false);
  }

  public CancelOrderByOrderIdResp cancelOrderByOrderId(CancelOrderByOrderIdReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/hf/orders/{orderId}",
        req,
        CancelOrderByOrderIdResp.class,
        false);
  }

  public CancelOrderByOrderIdSyncResp cancelOrderByOrderIdSync(CancelOrderByOrderIdSyncReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/hf/orders/sync/{orderId}",
        req,
        CancelOrderByOrderIdSyncResp.class,
        false);
  }

  public CancelOrderByClientOidResp cancelOrderByClientOid(CancelOrderByClientOidReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/hf/orders/client-order/{clientOid}",
        req,
        CancelOrderByClientOidResp.class,
        false);
  }

  public CancelOrderByClientOidSyncResp cancelOrderByClientOidSync(
      CancelOrderByClientOidSyncReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/hf/orders/sync/client-order/{clientOid}",
        req,
        CancelOrderByClientOidSyncResp.class,
        false);
  }

  public CancelPartialOrderResp cancelPartialOrder(CancelPartialOrderReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/hf/orders/cancel/{orderId}",
        req,
        CancelPartialOrderResp.class,
        false);
  }

  public CancelAllOrdersBySymbolResp cancelAllOrdersBySymbol(CancelAllOrdersBySymbolReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/hf/orders",
        req,
        CancelAllOrdersBySymbolResp.class,
        false);
  }

  public CancelAllOrdersResp cancelAllOrders() {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/hf/orders/cancelAll",
        null,
        CancelAllOrdersResp.class,
        false);
  }

  public ModifyOrderResp modifyOrder(ModifyOrderReq req) {
    return this.transport.call(
        "spot", false, "POST", "/api/v1/hf/orders/alter", req, ModifyOrderResp.class, false);
  }

  public GetOrderByOrderIdResp getOrderByOrderId(GetOrderByOrderIdReq req) {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v1/hf/orders/{orderId}",
        req,
        GetOrderByOrderIdResp.class,
        false);
  }

  public GetOrderByClientOidResp getOrderByClientOid(GetOrderByClientOidReq req) {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v1/hf/orders/client-order/{clientOid}",
        req,
        GetOrderByClientOidResp.class,
        false);
  }

  public GetSymbolsWithOpenOrderResp getSymbolsWithOpenOrder() {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v1/hf/orders/active/symbols",
        null,
        GetSymbolsWithOpenOrderResp.class,
        false);
  }

  public GetOpenOrdersResp getOpenOrders(GetOpenOrdersReq req) {
    return this.transport.call(
        "spot", false, "GET", "/api/v1/hf/orders/active", req, GetOpenOrdersResp.class, false);
  }

  public GetOpenOrdersByPageResp getOpenOrdersByPage(GetOpenOrdersByPageReq req) {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v1/hf/orders/active/page",
        req,
        GetOpenOrdersByPageResp.class,
        false);
  }

  public GetClosedOrdersResp getClosedOrders(GetClosedOrdersReq req) {
    return this.transport.call(
        "spot", false, "GET", "/api/v1/hf/orders/done", req, GetClosedOrdersResp.class, false);
  }

  public GetTradeHistoryResp getTradeHistory(GetTradeHistoryReq req) {
    return this.transport.call(
        "spot", false, "GET", "/api/v1/hf/fills", req, GetTradeHistoryResp.class, false);
  }

  public GetDCPResp getDCP() {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v1/hf/orders/dead-cancel-all/query",
        null,
        GetDCPResp.class,
        false);
  }

  public SetDCPResp setDCP(SetDCPReq req) {
    return this.transport.call(
        "spot", false, "POST", "/api/v1/hf/orders/dead-cancel-all", req, SetDCPResp.class, false);
  }

  public AddStopOrderResp addStopOrder(AddStopOrderReq req) {
    return this.transport.call(
        "spot", false, "POST", "/api/v1/stop-order", req, AddStopOrderResp.class, false);
  }

  public CancelStopOrderByClientOidResp cancelStopOrderByClientOid(
      CancelStopOrderByClientOidReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/stop-order/cancelOrderByClientOid",
        req,
        CancelStopOrderByClientOidResp.class,
        false);
  }

  public CancelStopOrderByOrderIdResp cancelStopOrderByOrderId(CancelStopOrderByOrderIdReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/stop-order/{orderId}",
        req,
        CancelStopOrderByOrderIdResp.class,
        false);
  }

  public BatchCancelStopOrderResp batchCancelStopOrder(BatchCancelStopOrderReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/stop-order/cancel",
        req,
        BatchCancelStopOrderResp.class,
        false);
  }

  public GetStopOrdersListResp getStopOrdersList(GetStopOrdersListReq req) {
    return this.transport.call(
        "spot", false, "GET", "/api/v1/stop-order", req, GetStopOrdersListResp.class, false);
  }

  public GetStopOrderByOrderIdResp getStopOrderByOrderId(GetStopOrderByOrderIdReq req) {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v1/stop-order/{orderId}",
        req,
        GetStopOrderByOrderIdResp.class,
        false);
  }

  public GetStopOrderByClientOidResp getStopOrderByClientOid(GetStopOrderByClientOidReq req) {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v1/stop-order/queryOrderByClientOid",
        req,
        GetStopOrderByClientOidResp.class,
        false);
  }

  public AddOcoOrderResp addOcoOrder(AddOcoOrderReq req) {
    return this.transport.call(
        "spot", false, "POST", "/api/v3/oco/order", req, AddOcoOrderResp.class, false);
  }

  public CancelOcoOrderByOrderIdResp cancelOcoOrderByOrderId(CancelOcoOrderByOrderIdReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v3/oco/order/{orderId}",
        req,
        CancelOcoOrderByOrderIdResp.class,
        false);
  }

  public CancelOcoOrderByClientOidResp cancelOcoOrderByClientOid(CancelOcoOrderByClientOidReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v3/oco/client-order/{clientOid}",
        req,
        CancelOcoOrderByClientOidResp.class,
        false);
  }

  public BatchCancelOcoOrdersResp batchCancelOcoOrders(BatchCancelOcoOrdersReq req) {
    return this.transport.call(
        "spot", false, "DELETE", "/api/v3/oco/orders", req, BatchCancelOcoOrdersResp.class, false);
  }

  public GetOcoOrderByOrderIdResp getOcoOrderByOrderId(GetOcoOrderByOrderIdReq req) {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v3/oco/order/{orderId}",
        req,
        GetOcoOrderByOrderIdResp.class,
        false);
  }

  public GetOcoOrderByClientOidResp getOcoOrderByClientOid(GetOcoOrderByClientOidReq req) {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v3/oco/client-order/{clientOid}",
        req,
        GetOcoOrderByClientOidResp.class,
        false);
  }

  public GetOcoOrderDetailByOrderIdResp getOcoOrderDetailByOrderId(
      GetOcoOrderDetailByOrderIdReq req) {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v3/oco/order/details/{orderId}",
        req,
        GetOcoOrderDetailByOrderIdResp.class,
        false);
  }

  public GetOcoOrderListResp getOcoOrderList(GetOcoOrderListReq req) {
    return this.transport.call(
        "spot", false, "GET", "/api/v3/oco/orders", req, GetOcoOrderListResp.class, false);
  }

  public AddOrderOldResp addOrderOld(AddOrderOldReq req) {
    return this.transport.call(
        "spot", false, "POST", "/api/v1/orders", req, AddOrderOldResp.class, false);
  }

  public AddOrderTestOldResp addOrderTestOld(AddOrderTestOldReq req) {
    return this.transport.call(
        "spot", false, "POST", "/api/v1/orders/test", req, AddOrderTestOldResp.class, false);
  }

  public BatchAddOrdersOldResp batchAddOrdersOld(BatchAddOrdersOldReq req) {
    return this.transport.call(
        "spot", false, "POST", "/api/v1/orders/multi", req, BatchAddOrdersOldResp.class, false);
  }

  public CancelOrderByOrderIdOldResp cancelOrderByOrderIdOld(CancelOrderByOrderIdOldReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/orders/{orderId}",
        req,
        CancelOrderByOrderIdOldResp.class,
        false);
  }

  public CancelOrderByClientOidOldResp cancelOrderByClientOidOld(CancelOrderByClientOidOldReq req) {
    return this.transport.call(
        "spot",
        false,
        "DELETE",
        "/api/v1/order/client-order/{clientOid}",
        req,
        CancelOrderByClientOidOldResp.class,
        false);
  }

  public BatchCancelOrderOldResp batchCancelOrderOld(BatchCancelOrderOldReq req) {
    return this.transport.call(
        "spot", false, "DELETE", "/api/v1/orders", req, BatchCancelOrderOldResp.class, false);
  }

  public GetOrdersListOldResp getOrdersListOld(GetOrdersListOldReq req) {
    return this.transport.call(
        "spot", false, "GET", "/api/v1/orders", req, GetOrdersListOldResp.class, false);
  }

  public GetRecentOrdersListOldResp getRecentOrdersListOld() {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v1/limit/orders",
        null,
        GetRecentOrdersListOldResp.class,
        false);
  }

  public GetOrderByOrderIdOldResp getOrderByOrderIdOld(GetOrderByOrderIdOldReq req) {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v1/orders/{orderId}",
        req,
        GetOrderByOrderIdOldResp.class,
        false);
  }

  public GetOrderByClientOidOldResp getOrderByClientOidOld(GetOrderByClientOidOldReq req) {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v1/order/client-order/{clientOid}",
        req,
        GetOrderByClientOidOldResp.class,
        false);
  }

  public GetTradeHistoryOldResp getTradeHistoryOld(GetTradeHistoryOldReq req) {
    return this.transport.call(
        "spot", false, "GET", "/api/v1/fills", req, GetTradeHistoryOldResp.class, false);
  }

  public GetRecentTradeHistoryOldResp getRecentTradeHistoryOld() {
    return this.transport.call(
        "spot",
        false,
        "GET",
        "/api/v1/limit/fills",
        null,
        GetRecentTradeHistoryOldResp.class,
        false);
  }
}
