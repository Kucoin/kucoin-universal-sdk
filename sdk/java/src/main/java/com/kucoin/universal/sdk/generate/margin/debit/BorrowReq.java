// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.margin.debit;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class BorrowReq implements Request {
  /** currency */
  @JsonProperty("currency")
  private String currency;

  /** Borrow amount */
  @JsonProperty("size")
  private Double size;

  /** timeInForce: IOC, FOK */
  @JsonProperty("timeInForce")
  private TimeInForceEnum timeInForce;

  /** symbol, mandatory for isolated margin account */
  @JsonProperty("symbol")
  private String symbol;

  /** true-isolated, false-cross; default is false */
  @JsonProperty("isIsolated")
  @Builder.Default
  private Boolean isIsolated = false;

  /** true: high frequency borrowing, false: low frequency borrowing; default false */
  @JsonProperty("isHf")
  @Builder.Default
  private Boolean isHf = false;

  public enum TimeInForceEnum {
    /** */
    IOC("IOC"),
    /** */
    FOK("FOK");

    private final String value;

    TimeInForceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TimeInForceEnum fromValue(String value) {
      for (TimeInForceEnum b : TimeInForceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
