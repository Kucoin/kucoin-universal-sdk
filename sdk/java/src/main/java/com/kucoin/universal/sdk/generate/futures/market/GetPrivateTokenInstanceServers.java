// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.futures.market;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetPrivateTokenInstanceServers {
  /** Websocket domain URL. It is recommended to use a dynamic URL, as the URL may change. */
  @JsonProperty("endpoint")
  private String endpoint;

  /** Whether to encrypt. Currently only supports wss, not ws */
  @JsonProperty("encrypt")
  private Boolean encrypt;

  /** Network Protocol */
  @JsonProperty("protocol")
  private ProtocolEnum protocol;

  /** Recommended ping interval (milliseconds) */
  @JsonProperty("pingInterval")
  private Integer pingInterval;

  /** Heartbeat timeout (milliseconds) */
  @JsonProperty("pingTimeout")
  private Integer pingTimeout;

  public enum ProtocolEnum {
    /** Websocket */
    WEBSOCKET("websocket");

    private final String value;

    ProtocolEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ProtocolEnum fromValue(String value) {
      for (ProtocolEnum b : ProtocolEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
