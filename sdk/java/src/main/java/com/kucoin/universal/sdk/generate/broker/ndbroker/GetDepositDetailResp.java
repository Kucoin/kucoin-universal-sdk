// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.broker.ndbroker;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Response;
import com.kucoin.universal.sdk.model.RestResponse;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetDepositDetailResp
    implements Response<GetDepositDetailResp, RestResponse<GetDepositDetailResp>> {
  /** Chain ID of currency */
  @JsonProperty("chain")
  private String chain;

  /** Hash */
  @JsonProperty("hash")
  private String hash;

  /** Wallet Transaction ID */
  @JsonProperty("walletTxId")
  private String walletTxId;

  /** UID */
  @JsonProperty("uid")
  private Integer uid;

  /** Update Time (milliseconds) */
  @JsonProperty("updatedAt")
  private Long updatedAt;

  /** Amount */
  @JsonProperty("amount")
  private String amount;

  /** Memo */
  @JsonProperty("memo")
  private String memo;

  /** Fee */
  @JsonProperty("fee")
  private String fee;

  /** Address */
  @JsonProperty("address")
  private String address;

  /** Remark */
  @JsonProperty("remark")
  private String remark;

  /** Is Internal (true or false) */
  @JsonProperty("isInner")
  private Boolean isInner;

  /** Currency */
  @JsonProperty("currency")
  private String currency;

  /** Status (PROCESSING, SUCCESS, FAILURE) */
  @JsonProperty("status")
  private StatusEnum status;

  /** Creation Time (milliseconds) */
  @JsonProperty("createdAt")
  private Long createdAt;

  /** common response */
  @JsonIgnore private RestResponse<GetDepositDetailResp> commonResponse;

  @Override
  public void setCommonResponse(RestResponse<GetDepositDetailResp> response) {
    this.commonResponse = response;
  }

  public enum StatusEnum {
    /** */
    SUCCESS("SUCCESS"),
    /** */
    FAILURE("FAILURE"),
    /** */
    PROCESSING("PROCESSING");

    private final String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
