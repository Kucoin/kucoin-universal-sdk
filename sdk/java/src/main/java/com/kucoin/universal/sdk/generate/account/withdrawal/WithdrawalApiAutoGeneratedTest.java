package com.kucoin.universal.sdk.generate.account.withdrawal;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.kucoin.universal.sdk.model.RestResponse;
import java.util.ArrayList;
import java.util.List;

class WithdrawalApiAutoGeneratedTest {
  public static ObjectMapper mapper = new ObjectMapper();

  private static final List<String> failedTests = new ArrayList<>();

  /** getWithdrawalQuotas Request Get Withdrawal Quotas /api/v1/withdrawals/quotas */
  public static void testGetWithdrawalQuotasRequest() throws Exception {
    String data = "{\\\"currency\\\": \\\"BTC\\\", \\\"chain\\\": \\\"eth\\\"}";
    GetWithdrawalQuotasReq obj = mapper.readValue(data, GetWithdrawalQuotasReq.class);
  }

  /** getWithdrawalQuotas Response Get Withdrawal Quotas /api/v1/withdrawals/quotas */
  public static void testGetWithdrawalQuotasResponse() throws Exception {
    String data =
        "{\\\"code\\\":\\\"200000\\\",\\\"data\\\":{\\\"currency\\\":\\\"BTC\\\",\\\"limitBTCAmount\\\":\\\"15.79590095\\\",\\\"usedBTCAmount\\\":\\\"0.00000000\\\",\\\"quotaCurrency\\\":\\\"USDT\\\",\\\"limitQuotaCurrencyAmount\\\":\\\"999999.00000000\\\",\\\"usedQuotaCurrencyAmount\\\":\\\"0\\\",\\\"remainAmount\\\":\\\"15.79590095\\\",\\\"availableAmount\\\":\\\"0\\\",\\\"withdrawMinFee\\\":\\\"0.0005\\\",\\\"innerWithdrawMinFee\\\":\\\"0\\\",\\\"withdrawMinSize\\\":\\\"0.001\\\",\\\"isWithdrawEnabled\\\":true,\\\"precision\\\":8,\\\"chain\\\":\\\"BTC\\\",\\\"reason\\\":null,\\\"lockedAmount\\\":\\\"0\\\"}}";
    RestResponse<GetWithdrawalQuotasResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetWithdrawalQuotasResp>>() {});
  }

  /** withdrawalV3 Request Withdraw (V3) /api/v3/withdrawals */
  public static void testWithdrawalV3Request() throws Exception {
    String data =
        "{\\\"currency\\\": \\\"USDT\\\", \\\"toAddress\\\": \\\"TKFRQXSDcY****GmLrjJggwX8\\\","
            + " \\\"amount\\\": \\\"3\\\", \\\"withdrawType\\\": \\\"ADDRESS\\\", \\\"chain\\\":"
            + " \\\"trx\\\", \\\"isInner\\\": true, \\\"remark\\\": \\\"this is Remark\\\"}";
    WithdrawalV3Req obj = mapper.readValue(data, WithdrawalV3Req.class);
  }

  /** withdrawalV3 Response Withdraw (V3) /api/v3/withdrawals */
  public static void testWithdrawalV3Response() throws Exception {
    String data =
        "{\\\"code\\\":\\\"200000\\\",\\\"data\\\":{\\\"withdrawalId\\\":\\\"670deec84d64da0007d7c946\\\"}}";
    RestResponse<WithdrawalV3Resp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<WithdrawalV3Resp>>() {});
  }

  /** cancelWithdrawal Request Cancel Withdrawal /api/v1/withdrawals/{withdrawalId} */
  public static void testCancelWithdrawalRequest() throws Exception {
    String data = "{\\\"withdrawalId\\\": \\\"670b891f7e0f440007730692\\\"}";
    CancelWithdrawalReq obj = mapper.readValue(data, CancelWithdrawalReq.class);
  }

  /** cancelWithdrawal Response Cancel Withdrawal /api/v1/withdrawals/{withdrawalId} */
  public static void testCancelWithdrawalResponse() throws Exception {
    String data = "{\\\"code\\\":\\\"200000\\\",\\\"data\\\":null}";
    RestResponse<CancelWithdrawalResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelWithdrawalResp>>() {});
  }

  /** getWithdrawalHistory Request Get Withdrawal History /api/v1/withdrawals */
  public static void testGetWithdrawalHistoryRequest() throws Exception {
    String data =
        "{\\\"currency\\\": \\\"BTC\\\", \\\"status\\\": \\\"SUCCESS\\\", \\\"startAt\\\":"
            + " 1728663338000, \\\"endAt\\\": 1728692138000, \\\"currentPage\\\": 1,"
            + " \\\"pageSize\\\": 50}";
    GetWithdrawalHistoryReq obj = mapper.readValue(data, GetWithdrawalHistoryReq.class);
  }

  /** getWithdrawalHistory Response Get Withdrawal History /api/v1/withdrawals */
  public static void testGetWithdrawalHistoryResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"currentPage\\\": 1,\\n"
            + "        \\\"pageSize\\\": 50,\\n"
            + "        \\\"totalNum\\\": 5,\\n"
            + "        \\\"totalPage\\\": 1,\\n"
            + "        \\\"items\\\": [\\n"
            + "            {\\n"
            + "                \\\"currency\\\": \\\"USDT\\\",\\n"
            + "                \\\"chain\\\": \\\"\\\",\\n"
            + "                \\\"status\\\": \\\"SUCCESS\\\",\\n"
            + "                \\\"address\\\": \\\"a435*****@gmail.com\\\",\\n"
            + "                \\\"memo\\\": \\\"\\\",\\n"
            + "                \\\"isInner\\\": true,\\n"
            + "                \\\"amount\\\": \\\"1.00000000\\\",\\n"
            + "                \\\"fee\\\": \\\"0.00000000\\\",\\n"
            + "                \\\"walletTxId\\\": null,\\n"
            + "                \\\"createdAt\\\": 1728555875000,\\n"
            + "                \\\"updatedAt\\\": 1728555875000,\\n"
            + "                \\\"remark\\\": \\\"\\\",\\n"
            + "                \\\"arrears\\\": false\\n"
            + "            },\\n"
            + "            {\\n"
            + "                \\\"currency\\\": \\\"USDT\\\",\\n"
            + "                \\\"chain\\\": \\\"trx\\\",\\n"
            + "                \\\"status\\\": \\\"SUCCESS\\\",\\n"
            + "                \\\"address\\\": \\\"TSv3L1fS7******X4nLP6rqNxYz\\\",\\n"
            + "                \\\"memo\\\": \\\"\\\",\\n"
            + "                \\\"isInner\\\": true,\\n"
            + "                \\\"amount\\\": \\\"6.00000000\\\",\\n"
            + "                \\\"fee\\\": \\\"0.00000000\\\",\\n"
            + "                \\\"walletTxId\\\": null,\\n"
            + "                \\\"createdAt\\\": 1721730920000,\\n"
            + "                \\\"updatedAt\\\": 1721730920000,\\n"
            + "                \\\"remark\\\": \\\"\\\",\\n"
            + "                \\\"arrears\\\": false\\n"
            + "            }\\n"
            + "        ]\\n"
            + "    }\\n"
            + "}";
    RestResponse<GetWithdrawalHistoryResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetWithdrawalHistoryResp>>() {});
  }

  /**
   * getWithdrawalHistoryById Request Get Withdrawal History By ID
   * /api/v1/withdrawals/{withdrawalId}
   */
  public static void testGetWithdrawalHistoryByIdRequest() throws Exception {
    String data = "{\\\"withdrawalId\\\": \\\"67e6515f7960ba0007b42025\\\"}";
    GetWithdrawalHistoryByIdReq obj = mapper.readValue(data, GetWithdrawalHistoryByIdReq.class);
  }

  /**
   * getWithdrawalHistoryById Response Get Withdrawal History By ID
   * /api/v1/withdrawals/{withdrawalId}
   */
  public static void testGetWithdrawalHistoryByIdResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"id\\\": \\\"67e6515f7960ba0007b42025\\\",\\n"
            + "        \\\"uid\\\": 165111215,\\n"
            + "        \\\"currency\\\": \\\"USDT\\\",\\n"
            + "        \\\"chainId\\\": \\\"trx\\\",\\n"
            + "        \\\"chainName\\\": \\\"TRC20\\\",\\n"
            + "        \\\"currencyName\\\": \\\"USDT\\\",\\n"
            + "        \\\"status\\\": \\\"SUCCESS\\\",\\n"
            + "        \\\"failureReason\\\": \\\"\\\",\\n"
            + "        \\\"failureReasonMsg\\\": null,\\n"
            + "        \\\"address\\\": \\\"TKFRQXSDcY4kd3QLzw7uK16GmLrjJggwX8\\\",\\n"
            + "        \\\"memo\\\": \\\"\\\",\\n"
            + "        \\\"isInner\\\": true,\\n"
            + "        \\\"amount\\\": \\\"3.00000000\\\",\\n"
            + "        \\\"fee\\\": \\\"0.00000000\\\",\\n"
            + "        \\\"walletTxId\\\": null,\\n"
            + "        \\\"addressRemark\\\": null,\\n"
            + "        \\\"remark\\\": \\\"this is Remark\\\",\\n"
            + "        \\\"createdAt\\\": 1743147359000,\\n"
            + "        \\\"cancelType\\\": \\\"NON_CANCELABLE\\\",\\n"
            + "        \\\"taxes\\\": null,\\n"
            + "        \\\"taxDescription\\\": null,\\n"
            + "        \\\"returnStatus\\\": \\\"NOT_RETURN\\\",\\n"
            + "        \\\"returnAmount\\\": null,\\n"
            + "        \\\"returnCurrency\\\": \\\"KCS\\\"\\n"
            + "    }\\n"
            + "}";
    RestResponse<GetWithdrawalHistoryByIdResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetWithdrawalHistoryByIdResp>>() {});
  }

  /** getWithdrawalHistoryOld Request Get Withdrawal History - Old /api/v1/hist-withdrawals */
  public static void testGetWithdrawalHistoryOldRequest() throws Exception {
    String data =
        "{\\\"currency\\\": \\\"BTC\\\", \\\"status\\\": \\\"SUCCESS\\\", \\\"startAt\\\":"
            + " 1728663338000, \\\"endAt\\\": 1728692138000, \\\"currentPage\\\": 1,"
            + " \\\"pageSize\\\": 50}";
    GetWithdrawalHistoryOldReq obj = mapper.readValue(data, GetWithdrawalHistoryOldReq.class);
  }

  /** getWithdrawalHistoryOld Response Get Withdrawal History - Old /api/v1/hist-withdrawals */
  public static void testGetWithdrawalHistoryOldResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"currentPage\\\": 1,\\n"
            + "        \\\"pageSize\\\": 50,\\n"
            + "        \\\"totalNum\\\": 1,\\n"
            + "        \\\"totalPage\\\": 1,\\n"
            + "        \\\"items\\\": [\\n"
            + "            {\\n"
            + "                \\\"currency\\\": \\\"BTC\\\",\\n"
            + "                \\\"createAt\\\": 1526723468,\\n"
            + "                \\\"amount\\\": \\\"0.534\\\",\\n"
            + "                \\\"address\\\": \\\"33xW37ZSW4tQvg443Pc7NLCAs167Yc2XUV\\\",\\n"
            + "                \\\"walletTxId\\\":"
            + " \\\"aeacea864c020acf58e51606169240e96774838dcd4f7ce48acf38e3651323f4\\\",\\n"
            + "                \\\"isInner\\\": false,\\n"
            + "                \\\"status\\\": \\\"SUCCESS\\\"\\n"
            + "            }\\n"
            + "        ]\\n"
            + "    }\\n"
            + "}";
    RestResponse<GetWithdrawalHistoryOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetWithdrawalHistoryOldResp>>() {});
  }

  /** withdrawalV1 Request Withdraw - V1 /api/v1/withdrawals */
  public static void testWithdrawalV1Request() throws Exception {
    String data =
        "{\\\"currency\\\": \\\"USDT\\\", \\\"address\\\": \\\"TKFRQXSDc****16GmLrjJggwX8\\\","
            + " \\\"amount\\\": 3, \\\"chain\\\": \\\"trx\\\", \\\"isInner\\\": true}";
    WithdrawalV1Req obj = mapper.readValue(data, WithdrawalV1Req.class);
  }

  /** withdrawalV1 Response Withdraw - V1 /api/v1/withdrawals */
  public static void testWithdrawalV1Response() throws Exception {
    String data =
        "{\\\"code\\\":\\\"200000\\\",\\\"data\\\":{\\\"withdrawalId\\\":\\\"670a973cf07b3800070e216c\\\"}}";
    RestResponse<WithdrawalV1Resp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<WithdrawalV1Resp>>() {});
  }

  public static void runAllTests() {
    run(
        WithdrawalApiAutoGeneratedTest::testGetWithdrawalQuotasRequest,
        "testGetWithdrawalQuotasRequest");
    run(
        WithdrawalApiAutoGeneratedTest::testGetWithdrawalQuotasResponse,
        "testGetWithdrawalQuotasResponse");
    run(WithdrawalApiAutoGeneratedTest::testWithdrawalV3Request, "testWithdrawalV3Request");
    run(WithdrawalApiAutoGeneratedTest::testWithdrawalV3Response, "testWithdrawalV3Response");
    run(WithdrawalApiAutoGeneratedTest::testCancelWithdrawalRequest, "testCancelWithdrawalRequest");
    run(
        WithdrawalApiAutoGeneratedTest::testCancelWithdrawalResponse,
        "testCancelWithdrawalResponse");
    run(
        WithdrawalApiAutoGeneratedTest::testGetWithdrawalHistoryRequest,
        "testGetWithdrawalHistoryRequest");
    run(
        WithdrawalApiAutoGeneratedTest::testGetWithdrawalHistoryResponse,
        "testGetWithdrawalHistoryResponse");
    run(
        WithdrawalApiAutoGeneratedTest::testGetWithdrawalHistoryByIdRequest,
        "testGetWithdrawalHistoryByIdRequest");
    run(
        WithdrawalApiAutoGeneratedTest::testGetWithdrawalHistoryByIdResponse,
        "testGetWithdrawalHistoryByIdResponse");
    run(
        WithdrawalApiAutoGeneratedTest::testGetWithdrawalHistoryOldRequest,
        "testGetWithdrawalHistoryOldRequest");
    run(
        WithdrawalApiAutoGeneratedTest::testGetWithdrawalHistoryOldResponse,
        "testGetWithdrawalHistoryOldResponse");
    run(WithdrawalApiAutoGeneratedTest::testWithdrawalV1Request, "testWithdrawalV1Request");
    run(WithdrawalApiAutoGeneratedTest::testWithdrawalV1Response, "testWithdrawalV1Response");
  }

  private static void run(TestCase test, String name) {
    System.out.println("Running test: " + name);
    try {
      test.execute();
      System.out.println("PASSED: " + name);
    } catch (Exception e) {
      System.err.println("FAILED: " + name + " - " + e.getMessage());
      e.printStackTrace(System.err);
      failedTests.add(name);
    }
  }

  @FunctionalInterface
  interface TestCase {
    void execute() throws Exception;
  }

  public static void main(String[] args) {
    runAllTests();
    finish();
  }

  public static void finish() {
    if (!failedTests.isEmpty()) {
      System.err.println("\n=== TEST SUMMARY ===");
      System.err.println("Failed tests:");
      for (String name : failedTests) {
        System.err.println(" - " + name);
      }
      System.exit(1);
    } else {
      System.out.println("\nAll tests passed.");
    }
  }
}
