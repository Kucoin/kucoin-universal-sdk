package com.kucoin.universal.sdk.generate.margin.order;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.kucoin.universal.sdk.model.RestResponse;
import java.util.ArrayList;
import java.util.List;

class OrderApiAutoGeneratedTest {
  public static ObjectMapper mapper = new ObjectMapper();

  private static final List<String> failedTests = new ArrayList<>();

  /** addOrder Request Add Order /api/v3/hf/margin/order */
  public static void testAddOrderRequest() throws Exception {
    String data =
        "{\\\"type\\\": \\\"limit\\\", \\\"symbol\\\": \\\"BTC-USDT\\\", \\\"side\\\": \\\"buy\\\","
            + " \\\"price\\\": \\\"50000\\\", \\\"size\\\": \\\"0.00001\\\", \\\"clientOid\\\":"
            + " \\\"5c52e11203aa677f33e493fb\\\", \\\"remark\\\": \\\"order remarks\\\"}";
    AddOrderReq obj = mapper.readValue(data, AddOrderReq.class);
  }

  /** addOrder Response Add Order /api/v3/hf/margin/order */
  public static void testAddOrderResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"success\\\": true,\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"orderId\\\": \\\"671663e02188630007e21c9c\\\",\\n"
            + "        \\\"clientOid\\\": \\\"5c52e11203aa677f33e1493fb\\\",\\n"
            + "        \\\"borrowSize\\\": \\\"10.2\\\",\\n"
            + "        \\\"loanApplyId\\\": \\\"600656d9a33ac90009de4f6f\\\"\\n"
            + "    }\\n"
            + "}";
    RestResponse<AddOrderResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOrderResp>>() {});
  }

  /** addOrderTest Request Add Order Test /api/v3/hf/margin/order/test */
  public static void testAddOrderTestRequest() throws Exception {
    String data =
        "{\\\"type\\\": \\\"limit\\\", \\\"symbol\\\": \\\"BTC-USDT\\\", \\\"side\\\": \\\"buy\\\","
            + " \\\"price\\\": \\\"50000\\\", \\\"size\\\": \\\"0.00001\\\", \\\"clientOid\\\":"
            + " \\\"5c52e11203aa677f33e493fb\\\", \\\"remark\\\": \\\"order remarks\\\"}";
    AddOrderTestReq obj = mapper.readValue(data, AddOrderTestReq.class);
  }

  /** addOrderTest Response Add Order Test /api/v3/hf/margin/order/test */
  public static void testAddOrderTestResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"success\\\": true,\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"orderId\\\": \\\"5bd6e9286d99522a52e458de\\\",\\n"
            + "        \\\"clientOid\\\": \\\"5c52e11203aa677f33e493fb\\\",\\n"
            + "        \\\"borrowSize\\\": 10.2,\\n"
            + "        \\\"loanApplyId\\\": \\\"600656d9a33ac90009de4f6f\\\"\\n"
            + "    }\\n"
            + "}";
    RestResponse<AddOrderTestResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOrderTestResp>>() {});
  }

  /** cancelOrderByOrderId Request Cancel Order By OrderId /api/v3/hf/margin/orders/{orderId} */
  public static void testCancelOrderByOrderIdRequest() throws Exception {
    String data =
        "{\\\"symbol\\\": \\\"BTC-USDT\\\", \\\"orderId\\\": \\\"671663e02188630007e21c9c\\\"}";
    CancelOrderByOrderIdReq obj = mapper.readValue(data, CancelOrderByOrderIdReq.class);
  }

  /** cancelOrderByOrderId Response Cancel Order By OrderId /api/v3/hf/margin/orders/{orderId} */
  public static void testCancelOrderByOrderIdResponse() throws Exception {
    String data =
        "{\\\"code\\\":\\\"200000\\\",\\\"data\\\":{\\\"orderId\\\":\\\"671663e02188630007e21c9c\\\"}}";
    RestResponse<CancelOrderByOrderIdResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelOrderByOrderIdResp>>() {});
  }

  /**
   * cancelOrderByClientOid Request Cancel Order By ClientOid
   * /api/v3/hf/margin/orders/client-order/{clientOid}
   */
  public static void testCancelOrderByClientOidRequest() throws Exception {
    String data =
        "{\\\"symbol\\\": \\\"BTC-USDT\\\", \\\"clientOid\\\": \\\"5c52e11203aa677f33e1493fb\\\"}";
    CancelOrderByClientOidReq obj = mapper.readValue(data, CancelOrderByClientOidReq.class);
  }

  /**
   * cancelOrderByClientOid Response Cancel Order By ClientOid
   * /api/v3/hf/margin/orders/client-order/{clientOid}
   */
  public static void testCancelOrderByClientOidResponse() throws Exception {
    String data =
        "{\\\"code\\\":\\\"200000\\\",\\\"data\\\":{\\\"clientOid\\\":\\\"5c52e11203aa677f33e1493fb\\\"}}";
    RestResponse<CancelOrderByClientOidResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelOrderByClientOidResp>>() {});
  }

  /** cancelAllOrdersBySymbol Request Cancel All Orders By Symbol /api/v3/hf/margin/orders */
  public static void testCancelAllOrdersBySymbolRequest() throws Exception {
    String data = "{\\\"symbol\\\": \\\"BTC-USDT\\\", \\\"tradeType\\\": \\\"MARGIN_TRADE\\\"}";
    CancelAllOrdersBySymbolReq obj = mapper.readValue(data, CancelAllOrdersBySymbolReq.class);
  }

  /** cancelAllOrdersBySymbol Response Cancel All Orders By Symbol /api/v3/hf/margin/orders */
  public static void testCancelAllOrdersBySymbolResponse() throws Exception {
    String data = "{\\\"code\\\":\\\"200000\\\",\\\"data\\\":\\\"success\\\"}";
    RestResponse<CancelAllOrdersBySymbolResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelAllOrdersBySymbolResp>>() {});
  }

  /**
   * getSymbolsWithOpenOrder Request Get Symbols With Open Order
   * /api/v3/hf/margin/order/active/symbols
   */
  public static void testGetSymbolsWithOpenOrderRequest() throws Exception {
    String data = "{\\\"tradeType\\\": \\\"MARGIN_TRADE\\\"}";
    GetSymbolsWithOpenOrderReq obj = mapper.readValue(data, GetSymbolsWithOpenOrderReq.class);
  }

  /**
   * getSymbolsWithOpenOrder Response Get Symbols With Open Order
   * /api/v3/hf/margin/order/active/symbols
   */
  public static void testGetSymbolsWithOpenOrderResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"symbolSize\\\": 1,\\n"
            + "        \\\"symbols\\\": [\\n"
            + "            \\\"BTC-USDT\\\"\\n"
            + "        ]\\n"
            + "    }\\n"
            + "}";
    RestResponse<GetSymbolsWithOpenOrderResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetSymbolsWithOpenOrderResp>>() {});
  }

  /** getOpenOrders Request Get Open Orders /api/v3/hf/margin/orders/active */
  public static void testGetOpenOrdersRequest() throws Exception {
    String data = "{\\\"symbol\\\": \\\"BTC-USDT\\\", \\\"tradeType\\\": \\\"MARGIN_TRADE\\\"}";
    GetOpenOrdersReq obj = mapper.readValue(data, GetOpenOrdersReq.class);
  }

  /** getOpenOrders Response Get Open Orders /api/v3/hf/margin/orders/active */
  public static void testGetOpenOrdersResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": [\\n"
            + "        {\\n"
            + "            \\\"id\\\": \\\"671667306afcdb000723107f\\\",\\n"
            + "            \\\"clientOid\\\": \\\"5c52e11203aa677f33e493fb\\\",\\n"
            + "            \\\"symbol\\\": \\\"BTC-USDT\\\",\\n"
            + "            \\\"opType\\\": \\\"DEAL\\\",\\n"
            + "            \\\"type\\\": \\\"limit\\\",\\n"
            + "            \\\"side\\\": \\\"buy\\\",\\n"
            + "            \\\"price\\\": \\\"50000\\\",\\n"
            + "            \\\"size\\\": \\\"0.00001\\\",\\n"
            + "            \\\"funds\\\": \\\"0.5\\\",\\n"
            + "            \\\"dealSize\\\": \\\"0\\\",\\n"
            + "            \\\"dealFunds\\\": \\\"0\\\",\\n"
            + "            \\\"remainSize\\\": \\\"0.00001\\\",\\n"
            + "            \\\"remainFunds\\\": \\\"0.5\\\",\\n"
            + "            \\\"cancelledSize\\\": \\\"0\\\",\\n"
            + "            \\\"cancelledFunds\\\": \\\"0\\\",\\n"
            + "            \\\"fee\\\": \\\"0\\\",\\n"
            + "            \\\"feeCurrency\\\": \\\"USDT\\\",\\n"
            + "            \\\"stp\\\": null,\\n"
            + "            \\\"stop\\\": null,\\n"
            + "            \\\"stopTriggered\\\": false,\\n"
            + "            \\\"stopPrice\\\": \\\"0\\\",\\n"
            + "            \\\"timeInForce\\\": \\\"GTC\\\",\\n"
            + "            \\\"postOnly\\\": false,\\n"
            + "            \\\"hidden\\\": false,\\n"
            + "            \\\"iceberg\\\": false,\\n"
            + "            \\\"visibleSize\\\": \\\"0\\\",\\n"
            + "            \\\"cancelAfter\\\": 0,\\n"
            + "            \\\"channel\\\": \\\"API\\\",\\n"
            + "            \\\"remark\\\": null,\\n"
            + "            \\\"tags\\\": null,\\n"
            + "            \\\"cancelExist\\\": false,\\n"
            + "            \\\"tradeType\\\": \\\"MARGIN_TRADE\\\",\\n"
            + "            \\\"inOrderBook\\\": true,\\n"
            + "            \\\"active\\\": true,\\n"
            + "            \\\"tax\\\": \\\"0\\\",\\n"
            + "            \\\"createdAt\\\": 1729521456248,\\n"
            + "            \\\"lastUpdatedAt\\\": 1729521460940\\n"
            + "        }\\n"
            + "    ]\\n"
            + "}";
    RestResponse<GetOpenOrdersResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOpenOrdersResp>>() {});
  }

  /** getClosedOrders Request Get Closed Orders /api/v3/hf/margin/orders/done */
  public static void testGetClosedOrdersRequest() throws Exception {
    String data =
        "{\\\"symbol\\\": \\\"BTC-USDT\\\", \\\"tradeType\\\": \\\"MARGIN_TRADE\\\", \\\"side\\\":"
            + " \\\"buy\\\", \\\"type\\\": \\\"limit\\\", \\\"lastId\\\": 254062248624417,"
            + " \\\"limit\\\": 20, \\\"startAt\\\": 1728663338000, \\\"endAt\\\": 1728692138000}";
    GetClosedOrdersReq obj = mapper.readValue(data, GetClosedOrdersReq.class);
  }

  /** getClosedOrders Response Get Closed Orders /api/v3/hf/margin/orders/done */
  public static void testGetClosedOrdersResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"lastId\\\": 136112949351,\\n"
            + "        \\\"items\\\": [\\n"
            + "            {\\n"
            + "                \\\"id\\\": \\\"6716491f6afcdb00078365c8\\\",\\n"
            + "                \\\"clientOid\\\": \\\"5c52e11203aa677f33e493fb\\\",\\n"
            + "                \\\"symbol\\\": \\\"BTC-USDT\\\",\\n"
            + "                \\\"opType\\\": \\\"DEAL\\\",\\n"
            + "                \\\"type\\\": \\\"limit\\\",\\n"
            + "                \\\"side\\\": \\\"buy\\\",\\n"
            + "                \\\"price\\\": \\\"50000\\\",\\n"
            + "                \\\"size\\\": \\\"0.00001\\\",\\n"
            + "                \\\"funds\\\": \\\"0.5\\\",\\n"
            + "                \\\"dealSize\\\": \\\"0\\\",\\n"
            + "                \\\"dealFunds\\\": \\\"0\\\",\\n"
            + "                \\\"remainSize\\\": \\\"0\\\",\\n"
            + "                \\\"remainFunds\\\": \\\"0\\\",\\n"
            + "                \\\"cancelledSize\\\": \\\"0.00001\\\",\\n"
            + "                \\\"cancelledFunds\\\": \\\"0.5\\\",\\n"
            + "                \\\"fee\\\": \\\"0\\\",\\n"
            + "                \\\"feeCurrency\\\": \\\"USDT\\\",\\n"
            + "                \\\"stp\\\": null,\\n"
            + "                \\\"stop\\\": null,\\n"
            + "                \\\"stopTriggered\\\": false,\\n"
            + "                \\\"stopPrice\\\": \\\"0\\\",\\n"
            + "                \\\"timeInForce\\\": \\\"GTC\\\",\\n"
            + "                \\\"postOnly\\\": false,\\n"
            + "                \\\"hidden\\\": false,\\n"
            + "                \\\"iceberg\\\": false,\\n"
            + "                \\\"visibleSize\\\": \\\"0\\\",\\n"
            + "                \\\"cancelAfter\\\": 0,\\n"
            + "                \\\"channel\\\": \\\"API\\\",\\n"
            + "                \\\"remark\\\": null,\\n"
            + "                \\\"tags\\\": null,\\n"
            + "                \\\"cancelExist\\\": true,\\n"
            + "                \\\"tradeType\\\": \\\"MARGIN_TRADE\\\",\\n"
            + "                \\\"inOrderBook\\\": false,\\n"
            + "                \\\"active\\\": false,\\n"
            + "                \\\"tax\\\": \\\"0\\\",\\n"
            + "                \\\"createdAt\\\": 1729513759162,\\n"
            + "                \\\"lastUpdatedAt\\\": 1729521126597\\n"
            + "            }\\n"
            + "        ]\\n"
            + "    }\\n"
            + "}";
    RestResponse<GetClosedOrdersResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetClosedOrdersResp>>() {});
  }

  /** getTradeHistory Request Get Trade History /api/v3/hf/margin/fills */
  public static void testGetTradeHistoryRequest() throws Exception {
    String data =
        "{\\\"symbol\\\": \\\"BTC-USDT\\\", \\\"tradeType\\\": \\\"MARGIN_TRADE\\\","
            + " \\\"orderId\\\": \\\"example_string_default_value\\\", \\\"side\\\": \\\"buy\\\","
            + " \\\"type\\\": \\\"limit\\\", \\\"lastId\\\": 254062248624417, \\\"limit\\\": 100,"
            + " \\\"startAt\\\": 1728663338000, \\\"endAt\\\": 1728692138000}";
    GetTradeHistoryReq obj = mapper.readValue(data, GetTradeHistoryReq.class);
  }

  /** getTradeHistory Response Get Trade History /api/v3/hf/margin/fills */
  public static void testGetTradeHistoryResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"items\\\": [\\n"
            + "            {\\n"
            + "                \\\"id\\\": 137891621991,\\n"
            + "                \\\"symbol\\\": \\\"BTC-USDT\\\",\\n"
            + "                \\\"tradeId\\\": 11040911994273793,\\n"
            + "                \\\"orderId\\\": \\\"671868085584bc0007d85f46\\\",\\n"
            + "                \\\"counterOrderId\\\": \\\"67186805b7cbdf00071621f9\\\",\\n"
            + "                \\\"side\\\": \\\"buy\\\",\\n"
            + "                \\\"liquidity\\\": \\\"taker\\\",\\n"
            + "                \\\"forceTaker\\\": false,\\n"
            + "                \\\"price\\\": \\\"67141.6\\\",\\n"
            + "                \\\"size\\\": \\\"0.00001\\\",\\n"
            + "                \\\"funds\\\": \\\"0.671416\\\",\\n"
            + "                \\\"fee\\\": \\\"0.000671416\\\",\\n"
            + "                \\\"feeRate\\\": \\\"0.001\\\",\\n"
            + "                \\\"feeCurrency\\\": \\\"USDT\\\",\\n"
            + "                \\\"stop\\\": \\\"\\\",\\n"
            + "                \\\"tradeType\\\": \\\"MARGIN_TRADE\\\",\\n"
            + "                \\\"tax\\\": \\\"0\\\",\\n"
            + "                \\\"taxRate\\\": \\\"0\\\",\\n"
            + "                \\\"type\\\": \\\"limit\\\",\\n"
            + "                \\\"createdAt\\\": 1729652744998\\n"
            + "            }\\n"
            + "        ],\\n"
            + "        \\\"lastId\\\": 137891621991\\n"
            + "    }\\n"
            + "}";
    RestResponse<GetTradeHistoryResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetTradeHistoryResp>>() {});
  }

  /** getOrderByOrderId Request Get Order By OrderId /api/v3/hf/margin/orders/{orderId} */
  public static void testGetOrderByOrderIdRequest() throws Exception {
    String data =
        "{\\\"symbol\\\": \\\"BTC-USDT\\\", \\\"orderId\\\": \\\"671667306afcdb000723107f\\\"}";
    GetOrderByOrderIdReq obj = mapper.readValue(data, GetOrderByOrderIdReq.class);
  }

  /** getOrderByOrderId Response Get Order By OrderId /api/v3/hf/margin/orders/{orderId} */
  public static void testGetOrderByOrderIdResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"id\\\": \\\"671667306afcdb000723107f\\\",\\n"
            + "        \\\"symbol\\\": \\\"BTC-USDT\\\",\\n"
            + "        \\\"opType\\\": \\\"DEAL\\\",\\n"
            + "        \\\"type\\\": \\\"limit\\\",\\n"
            + "        \\\"side\\\": \\\"buy\\\",\\n"
            + "        \\\"price\\\": \\\"50000\\\",\\n"
            + "        \\\"size\\\": \\\"0.00001\\\",\\n"
            + "        \\\"funds\\\": \\\"0.5\\\",\\n"
            + "        \\\"dealSize\\\": \\\"0\\\",\\n"
            + "        \\\"dealFunds\\\": \\\"0\\\",\\n"
            + "        \\\"fee\\\": \\\"0\\\",\\n"
            + "        \\\"feeCurrency\\\": \\\"USDT\\\",\\n"
            + "        \\\"stp\\\": null,\\n"
            + "        \\\"stop\\\": null,\\n"
            + "        \\\"stopTriggered\\\": false,\\n"
            + "        \\\"stopPrice\\\": \\\"0\\\",\\n"
            + "        \\\"timeInForce\\\": \\\"GTC\\\",\\n"
            + "        \\\"postOnly\\\": false,\\n"
            + "        \\\"hidden\\\": false,\\n"
            + "        \\\"iceberg\\\": false,\\n"
            + "        \\\"visibleSize\\\": \\\"0\\\",\\n"
            + "        \\\"cancelAfter\\\": 0,\\n"
            + "        \\\"channel\\\": \\\"API\\\",\\n"
            + "        \\\"clientOid\\\": \\\"5c52e11203aa677f33e493fb\\\",\\n"
            + "        \\\"remark\\\": null,\\n"
            + "        \\\"tags\\\": null,\\n"
            + "        \\\"cancelExist\\\": false,\\n"
            + "        \\\"createdAt\\\": 1729521456248,\\n"
            + "        \\\"lastUpdatedAt\\\": 1729651011877,\\n"
            + "        \\\"tradeType\\\": \\\"MARGIN_TRADE\\\",\\n"
            + "        \\\"inOrderBook\\\": true,\\n"
            + "        \\\"cancelledSize\\\": \\\"0\\\",\\n"
            + "        \\\"cancelledFunds\\\": \\\"0\\\",\\n"
            + "        \\\"remainSize\\\": \\\"0.00001\\\",\\n"
            + "        \\\"remainFunds\\\": \\\"0.5\\\",\\n"
            + "        \\\"tax\\\": \\\"0\\\",\\n"
            + "        \\\"active\\\": true\\n"
            + "    }\\n"
            + "}";
    RestResponse<GetOrderByOrderIdResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOrderByOrderIdResp>>() {});
  }

  /**
   * getOrderByClientOid Request Get Order By ClientOid
   * /api/v3/hf/margin/orders/client-order/{clientOid}
   */
  public static void testGetOrderByClientOidRequest() throws Exception {
    String data =
        "{\\\"symbol\\\": \\\"BTC-USDT\\\", \\\"clientOid\\\": \\\"5c52e11203aa677f33e493fb\\\"}";
    GetOrderByClientOidReq obj = mapper.readValue(data, GetOrderByClientOidReq.class);
  }

  /**
   * getOrderByClientOid Response Get Order By ClientOid
   * /api/v3/hf/margin/orders/client-order/{clientOid}
   */
  public static void testGetOrderByClientOidResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"id\\\": \\\"671667306afcdb000723107f\\\",\\n"
            + "        \\\"symbol\\\": \\\"BTC-USDT\\\",\\n"
            + "        \\\"opType\\\": \\\"DEAL\\\",\\n"
            + "        \\\"type\\\": \\\"limit\\\",\\n"
            + "        \\\"side\\\": \\\"buy\\\",\\n"
            + "        \\\"price\\\": \\\"50000\\\",\\n"
            + "        \\\"size\\\": \\\"0.00001\\\",\\n"
            + "        \\\"funds\\\": \\\"0.5\\\",\\n"
            + "        \\\"dealSize\\\": \\\"0\\\",\\n"
            + "        \\\"dealFunds\\\": \\\"0\\\",\\n"
            + "        \\\"fee\\\": \\\"0\\\",\\n"
            + "        \\\"feeCurrency\\\": \\\"USDT\\\",\\n"
            + "        \\\"stp\\\": null,\\n"
            + "        \\\"stop\\\": null,\\n"
            + "        \\\"stopTriggered\\\": false,\\n"
            + "        \\\"stopPrice\\\": \\\"0\\\",\\n"
            + "        \\\"timeInForce\\\": \\\"GTC\\\",\\n"
            + "        \\\"postOnly\\\": false,\\n"
            + "        \\\"hidden\\\": false,\\n"
            + "        \\\"iceberg\\\": false,\\n"
            + "        \\\"visibleSize\\\": \\\"0\\\",\\n"
            + "        \\\"cancelAfter\\\": 0,\\n"
            + "        \\\"channel\\\": \\\"API\\\",\\n"
            + "        \\\"clientOid\\\": \\\"5c52e11203aa677f33e493fb\\\",\\n"
            + "        \\\"remark\\\": null,\\n"
            + "        \\\"tags\\\": null,\\n"
            + "        \\\"cancelExist\\\": false,\\n"
            + "        \\\"createdAt\\\": 1729521456248,\\n"
            + "        \\\"lastUpdatedAt\\\": 1729651011877,\\n"
            + "        \\\"tradeType\\\": \\\"MARGIN_TRADE\\\",\\n"
            + "        \\\"inOrderBook\\\": true,\\n"
            + "        \\\"cancelledSize\\\": \\\"0\\\",\\n"
            + "        \\\"cancelledFunds\\\": \\\"0\\\",\\n"
            + "        \\\"remainSize\\\": \\\"0.00001\\\",\\n"
            + "        \\\"remainFunds\\\": \\\"0.5\\\",\\n"
            + "        \\\"tax\\\": \\\"0\\\",\\n"
            + "        \\\"active\\\": true\\n"
            + "    }\\n"
            + "}";
    RestResponse<GetOrderByClientOidResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOrderByClientOidResp>>() {});
  }

  /** addOrderV1 Request Add Order - V1 /api/v1/margin/order */
  public static void testAddOrderV1Request() throws Exception {
    String data =
        "{\\\"type\\\": \\\"limit\\\", \\\"symbol\\\": \\\"BTC-USDT\\\", \\\"side\\\": \\\"buy\\\","
            + " \\\"price\\\": \\\"50000\\\", \\\"size\\\": \\\"0.00001\\\", \\\"clientOid\\\":"
            + " \\\"5c52e11203aa677f33e4193fb\\\", \\\"remark\\\": \\\"order remarks\\\"}";
    AddOrderV1Req obj = mapper.readValue(data, AddOrderV1Req.class);
  }

  /** addOrderV1 Response Add Order - V1 /api/v1/margin/order */
  public static void testAddOrderV1Response() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"orderId\\\": \\\"671bb90194422f00073ff4f0\\\",\\n"
            + "        \\\"loanApplyId\\\": null,\\n"
            + "        \\\"borrowSize\\\": null,\\n"
            + "        \\\"clientOid\\\": null\\n"
            + "    }\\n"
            + "}";
    RestResponse<AddOrderV1Resp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOrderV1Resp>>() {});
  }

  /** addOrderTestV1 Request Add Order Test - V1 /api/v1/margin/order/test */
  public static void testAddOrderTestV1Request() throws Exception {
    String data =
        "{\\\"type\\\": \\\"limit\\\", \\\"symbol\\\": \\\"BTC-USDT\\\", \\\"side\\\": \\\"buy\\\","
            + " \\\"price\\\": \\\"50000\\\", \\\"size\\\": \\\"0.00001\\\", \\\"clientOid\\\":"
            + " \\\"5c52e11203aa677f33e4193fb\\\", \\\"remark\\\": \\\"order remarks\\\"}";
    AddOrderTestV1Req obj = mapper.readValue(data, AddOrderTestV1Req.class);
  }

  /** addOrderTestV1 Response Add Order Test - V1 /api/v1/margin/order/test */
  public static void testAddOrderTestV1Response() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"orderId\\\": \\\"671bb90194422f00073ff4f0\\\",\\n"
            + "        \\\"loanApplyId\\\": null,\\n"
            + "        \\\"borrowSize\\\": null,\\n"
            + "        \\\"clientOid\\\": null\\n"
            + "    }\\n"
            + "}";
    RestResponse<AddOrderTestV1Resp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOrderTestV1Resp>>() {});
  }

  public static void runAllTests() {
    run(OrderApiAutoGeneratedTest::testAddOrderRequest, "testAddOrderRequest");
    run(OrderApiAutoGeneratedTest::testAddOrderResponse, "testAddOrderResponse");
    run(OrderApiAutoGeneratedTest::testAddOrderTestRequest, "testAddOrderTestRequest");
    run(OrderApiAutoGeneratedTest::testAddOrderTestResponse, "testAddOrderTestResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByOrderIdRequest,
        "testCancelOrderByOrderIdRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByOrderIdResponse,
        "testCancelOrderByOrderIdResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByClientOidRequest,
        "testCancelOrderByClientOidRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByClientOidResponse,
        "testCancelOrderByClientOidResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelAllOrdersBySymbolRequest,
        "testCancelAllOrdersBySymbolRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelAllOrdersBySymbolResponse,
        "testCancelAllOrdersBySymbolResponse");
    run(
        OrderApiAutoGeneratedTest::testGetSymbolsWithOpenOrderRequest,
        "testGetSymbolsWithOpenOrderRequest");
    run(
        OrderApiAutoGeneratedTest::testGetSymbolsWithOpenOrderResponse,
        "testGetSymbolsWithOpenOrderResponse");
    run(OrderApiAutoGeneratedTest::testGetOpenOrdersRequest, "testGetOpenOrdersRequest");
    run(OrderApiAutoGeneratedTest::testGetOpenOrdersResponse, "testGetOpenOrdersResponse");
    run(OrderApiAutoGeneratedTest::testGetClosedOrdersRequest, "testGetClosedOrdersRequest");
    run(OrderApiAutoGeneratedTest::testGetClosedOrdersResponse, "testGetClosedOrdersResponse");
    run(OrderApiAutoGeneratedTest::testGetTradeHistoryRequest, "testGetTradeHistoryRequest");
    run(OrderApiAutoGeneratedTest::testGetTradeHistoryResponse, "testGetTradeHistoryResponse");
    run(OrderApiAutoGeneratedTest::testGetOrderByOrderIdRequest, "testGetOrderByOrderIdRequest");
    run(OrderApiAutoGeneratedTest::testGetOrderByOrderIdResponse, "testGetOrderByOrderIdResponse");
    run(
        OrderApiAutoGeneratedTest::testGetOrderByClientOidRequest,
        "testGetOrderByClientOidRequest");
    run(
        OrderApiAutoGeneratedTest::testGetOrderByClientOidResponse,
        "testGetOrderByClientOidResponse");
    run(OrderApiAutoGeneratedTest::testAddOrderV1Request, "testAddOrderV1Request");
    run(OrderApiAutoGeneratedTest::testAddOrderV1Response, "testAddOrderV1Response");
    run(OrderApiAutoGeneratedTest::testAddOrderTestV1Request, "testAddOrderTestV1Request");
    run(OrderApiAutoGeneratedTest::testAddOrderTestV1Response, "testAddOrderTestV1Response");
  }

  private static void run(TestCase test, String name) {
    System.out.println("Running test: " + name);
    try {
      test.execute();
      System.out.println("PASSED: " + name);
    } catch (Exception e) {
      System.err.println("FAILED: " + name + " - " + e.getMessage());
      e.printStackTrace(System.err);
      failedTests.add(name);
    }
  }

  @FunctionalInterface
  interface TestCase {
    void execute() throws Exception;
  }

  public static void main(String[] args) {
    runAllTests();
    finish();
  }

  public static void finish() {
    if (!failedTests.isEmpty()) {
      System.err.println("\n=== TEST SUMMARY ===");
      System.err.println("Failed tests:");
      for (String name : failedTests) {
        System.err.println(" - " + name);
      }
      System.exit(1);
    } else {
      System.out.println("\nAll tests passed.");
    }
  }
}
