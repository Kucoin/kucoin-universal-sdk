package com.kucoin.universal.sdk.generate.futures.futurespublic;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.kucoin.universal.sdk.model.WsMessage;
import java.util.ArrayList;
import java.util.List;

class FuturesPublicWsAutoGeneratedTest {
  public static ObjectMapper mapper = new ObjectMapper();

  private static final List<String> failedTests = new ArrayList<>();

  /** announcement announcement /announcement/contract/announcement:_symbol_ */
  public static void testAnnouncementResponse() throws Exception {
    String data =
        "{\\\"topic\\\":\\\"/contract/announcement\\\",\\\"subject\\\":\\\"funding.begin\\\",\\\"data\\\":{\\\"symbol\\\":\\\"XBTUSDTM\\\",\\\"fundingTime\\\":1551770400000,\\\"fundingRate\\\":-0.002966,\\\"timestamp\\\":1551770400000}}";
    WsMessage<AnnouncementEvent> resp =
        mapper.readValue(data, new TypeReference<WsMessage<AnnouncementEvent>>() {});
  }

  /** execution Match execution data. /execution/contractMarket/execution:_symbol_ */
  public static void testExecutionResponse() throws Exception {
    String data =
        "{\\\"topic\\\":\\\"/contractMarket/execution:XBTUSDTM\\\",\\\"type\\\":\\\"message\\\",\\\"subject\\\":\\\"match\\\",\\\"sn\\\":1794100537695,\\\"data\\\":{\\\"symbol\\\":\\\"XBTUSDTM\\\",\\\"sequence\\\":1794100537695,\\\"side\\\":\\\"buy\\\",\\\"size\\\":2,\\\"price\\\":\\\"90503.9\\\",\\\"takerOrderId\\\":\\\"247822202957807616\\\",\\\"makerOrderId\\\":\\\"247822167163555840\\\",\\\"tradeId\\\":\\\"1794100537695\\\",\\\"ts\\\":1731898619520000000}}";
    WsMessage<ExecutionEvent> resp =
        mapper.readValue(data, new TypeReference<WsMessage<ExecutionEvent>>() {});
  }

  /** instrument instrument /instrument/contract/instrument:_symbol_ */
  public static void testInstrumentResponse() throws Exception {
    String data =
        "{\\\"topic\\\":\\\"/contract/instrument:XBTUSDTM\\\",\\\"type\\\":\\\"message\\\",\\\"subject\\\":\\\"mark.index.price\\\",\\\"data\\\":{\\\"markPrice\\\":90445.02,\\\"indexPrice\\\":90445.02,\\\"granularity\\\":1000,\\\"timestamp\\\":1731899129000}}";
    WsMessage<InstrumentEvent> resp =
        mapper.readValue(data, new TypeReference<WsMessage<InstrumentEvent>>() {});
  }

  /** klines Klines /klines/contractMarket/limitCandle:_symbol___type_ */
  public static void testKlinesResponse() throws Exception {
    String data =
        "{\\\"topic\\\":\\\"/contractMarket/limitCandle:XBTUSDTM_1min\\\",\\\"type\\\":\\\"message\\\",\\\"data\\\":{\\\"symbol\\\":\\\"XBTUSDTM\\\",\\\"candles\\\":[\\\"1731898200\\\",\\\"90638.6\\\",\\\"90638.6\\\",\\\"90638.6\\\",\\\"90638.6\\\",\\\"21.0\\\",\\\"21\\\"],\\\"time\\\":1731898208357},\\\"subject\\\":\\\"candle.stick\\\"}";
    WsMessage<KlinesEvent> resp =
        mapper.readValue(data, new TypeReference<WsMessage<KlinesEvent>>() {});
  }

  /** orderbookIncrement Orderbook - Increment /orderbookIncrement/contractMarket/level2:_symbol_ */
  public static void testOrderbookIncrementResponse() throws Exception {
    String data =
        "{\\\"topic\\\":\\\"/contractMarket/level2:XBTUSDTM\\\",\\\"type\\\":\\\"message\\\",\\\"subject\\\":\\\"level2\\\",\\\"sn\\\":1709400450243,\\\"data\\\":{\\\"sequence\\\":1709400450243,\\\"change\\\":\\\"90631.2,sell,2\\\",\\\"timestamp\\\":1731897467182}}";
    WsMessage<OrderbookIncrementEvent> resp =
        mapper.readValue(data, new TypeReference<WsMessage<OrderbookIncrementEvent>>() {});
  }

  /**
   * orderbookLevel50 Orderbook - Level50 /orderbookLevel50/contractMarket/level2Depth50:_symbol_
   */
  public static void testOrderbookLevel50Response() throws Exception {
    String data =
        "{\\\"topic\\\":\\\"/contractMarket/level2Depth50:XBTUSDTM\\\",\\\"type\\\":\\\"message\\\",\\\"subject\\\":\\\"level2\\\",\\\"sn\\\":1731680249700,\\\"data\\\":{\\\"bids\\\":[[\\\"89778.6\\\",1534],[\\\"89778.2\\\",54]],\\\"sequence\\\":1709294490099,\\\"timestamp\\\":1731680249700,\\\"ts\\\":1731680249700,\\\"asks\\\":[[\\\"89778.7\\\",854],[\\\"89779.2\\\",4]]}}";
    WsMessage<OrderbookLevel50Event> resp =
        mapper.readValue(data, new TypeReference<WsMessage<OrderbookLevel50Event>>() {});
  }

  /** orderbookLevel5 Orderbook - Level5 /orderbookLevel5/contractMarket/level2Depth5:_symbol_ */
  public static void testOrderbookLevel5Response() throws Exception {
    String data =
        "{\\\"topic\\\":\\\"/contractMarket/level2Depth5:XBTUSDTM\\\",\\\"type\\\":\\\"message\\\",\\\"subject\\\":\\\"level2\\\",\\\"sn\\\":1731680019100,\\\"data\\\":{\\\"bids\\\":[[\\\"89720.9\\\",513],[\\\"89720.8\\\",12],[\\\"89718.6\\\",113],[\\\"89718.4\\\",19],[\\\"89718.3\\\",7]],\\\"sequence\\\":1709294294670,\\\"timestamp\\\":1731680019100,\\\"ts\\\":1731680019100,\\\"asks\\\":[[\\\"89721\\\",906],[\\\"89721.1\\\",203],[\\\"89721.4\\\",113],[\\\"89723.2\\\",113],[\\\"89725.4\\\",113]]}}";
    WsMessage<OrderbookLevel5Event> resp =
        mapper.readValue(data, new TypeReference<WsMessage<OrderbookLevel5Event>>() {});
  }

  /** symbolSnapshot Symbol Snapshot /symbolSnapshot/contractMarket/snapshot:_symbol_ */
  public static void testSymbolSnapshotResponse() throws Exception {
    String data =
        "{\\\"topic\\\":\\\"/contractMarket/snapshot:XBTUSDTM\\\",\\\"type\\\":\\\"message\\\",\\\"subject\\\":\\\"snapshot.24h\\\",\\\"id\\\":\\\"673ab3fff4088b0001664f41\\\",\\\"data\\\":{\\\"highPrice\\\":91512.8,\\\"lastPrice\\\":90326.7,\\\"lowPrice\\\":88747.8,\\\"price24HoursBefore\\\":89880.4,\\\"priceChg\\\":446.3,\\\"priceChgPct\\\":0.0049,\\\"symbol\\\":\\\"XBTUSDTM\\\",\\\"ts\\\":1731900415023929239,\\\"turnover\\\":526928331.0482177734,\\\"volume\\\":5834.46}}";
    WsMessage<SymbolSnapshotEvent> resp =
        mapper.readValue(data, new TypeReference<WsMessage<SymbolSnapshotEvent>>() {});
  }

  /** tickerV1 Get Ticker(not recommended) /tickerV1/contractMarket/ticker:_symbol_ */
  public static void testTickerV1Response() throws Exception {
    String data =
        "{\\\"topic\\\":\\\"/contractMarket/ticker:XBTUSDTM\\\",\\\"type\\\":\\\"message\\\",\\\"subject\\\":\\\"ticker\\\",\\\"sn\\\":1793133570931,\\\"data\\\":{\\\"symbol\\\":\\\"XBTUSDTM\\\",\\\"sequence\\\":1793133570931,\\\"side\\\":\\\"sell\\\",\\\"size\\\":1,\\\"price\\\":\\\"90147.7\\\",\\\"bestBidSize\\\":2186,\\\"bestBidPrice\\\":\\\"90147.7\\\",\\\"bestAskPrice\\\":\\\"90147.8\\\",\\\"tradeId\\\":\\\"1793133570931\\\",\\\"bestAskSize\\\":275,\\\"ts\\\":1731679215637000000}}";
    WsMessage<TickerV1Event> resp =
        mapper.readValue(data, new TypeReference<WsMessage<TickerV1Event>>() {});
  }

  /** tickerV2 Get Ticker V2 /tickerV2/contractMarket/tickerV2:_symbol_ */
  public static void testTickerV2Response() throws Exception {
    String data =
        "{\\\"topic\\\":\\\"/contractMarket/tickerV2:XBTUSDTM\\\",\\\"type\\\":\\\"message\\\",\\\"subject\\\":\\\"tickerV2\\\",\\\"sn\\\":1709284589209,\\\"data\\\":{\\\"symbol\\\":\\\"XBTUSDTM\\\",\\\"sequence\\\":1709284589209,\\\"bestBidSize\\\":713,\\\"bestBidPrice\\\":\\\"88987.4\\\",\\\"bestAskPrice\\\":\\\"88987.5\\\",\\\"bestAskSize\\\":1037,\\\"ts\\\":1731665526461000000}}";
    WsMessage<TickerV2Event> resp =
        mapper.readValue(data, new TypeReference<WsMessage<TickerV2Event>>() {});
  }

  public static void runAllTests() {
    run(FuturesPublicWsAutoGeneratedTest::testAnnouncementResponse, "testAnnouncementResponse");
    run(FuturesPublicWsAutoGeneratedTest::testExecutionResponse, "testExecutionResponse");
    run(FuturesPublicWsAutoGeneratedTest::testInstrumentResponse, "testInstrumentResponse");
    run(FuturesPublicWsAutoGeneratedTest::testKlinesResponse, "testKlinesResponse");
    run(
        FuturesPublicWsAutoGeneratedTest::testOrderbookIncrementResponse,
        "testOrderbookIncrementResponse");
    run(
        FuturesPublicWsAutoGeneratedTest::testOrderbookLevel50Response,
        "testOrderbookLevel50Response");
    run(
        FuturesPublicWsAutoGeneratedTest::testOrderbookLevel5Response,
        "testOrderbookLevel5Response");
    run(FuturesPublicWsAutoGeneratedTest::testSymbolSnapshotResponse, "testSymbolSnapshotResponse");
    run(FuturesPublicWsAutoGeneratedTest::testTickerV1Response, "testTickerV1Response");
    run(FuturesPublicWsAutoGeneratedTest::testTickerV2Response, "testTickerV2Response");
  }

  private static void run(TestCase test, String name) {
    System.out.println("Running test: " + name);
    try {
      test.execute();
      System.out.println("PASSED: " + name);
    } catch (Exception e) {
      System.err.println("FAILED: " + name + " - " + e.getMessage());
      e.printStackTrace(System.err);
      failedTests.add(name);
    }
  }

  @FunctionalInterface
  interface TestCase {
    void execute() throws Exception;
  }

  public static void main(String[] args) {
    runAllTests();
    finish();
  }

  public static void finish() {
    if (!failedTests.isEmpty()) {
      System.err.println("\n=== TEST SUMMARY ===");
      System.err.println("Failed tests:");
      for (String name : failedTests) {
        System.err.println(" - " + name);
      }
      System.exit(1);
    } else {
      System.out.println("\nAll tests passed.");
    }
  }
}
