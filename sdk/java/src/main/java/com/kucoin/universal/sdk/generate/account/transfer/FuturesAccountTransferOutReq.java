// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.account.transfer;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class FuturesAccountTransferOutReq implements Request {
  /** Currency, including XBT, USDT... */
  @JsonProperty("currency")
  private String currency;

  /** Amount to be transferred out; cannot exceed 1000000000 */
  @JsonProperty("amount")
  private Double amount;

  /** Receive account type, including MAIN, TRADE */
  @JsonProperty("recAccountType")
  private RecAccountTypeEnum recAccountType;

  public enum RecAccountTypeEnum {
    /** */
    MAIN("MAIN"),
    /** */
    TRADE("TRADE");

    private final String value;

    RecAccountTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RecAccountTypeEnum fromValue(String value) {
      for (RecAccountTypeEnum b : RecAccountTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
