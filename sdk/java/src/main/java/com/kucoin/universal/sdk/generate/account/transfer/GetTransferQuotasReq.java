// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.account.transfer;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetTransferQuotasReq implements Request {
  /** currency */
  @JsonProperty("currency")
  private String currency;

  /** The account type:MAIN, TRADE, MARGIN, ISOLATED, MARGIN_V2, ISOLATED_V2 */
  @JsonProperty("type")
  private TypeEnum type;

  /**
   * Trading pair required when the account type is ISOLATED; other types do not pass, e.g.:
   * BTC-USDT
   */
  @JsonProperty("tag")
  @Builder.Default
  private String tag = "BTC-USDT";

  public enum TypeEnum {
    /** Funding account */
    MAIN("MAIN"),
    /** Spot account */
    TRADE("TRADE"),
    /** Spot cross margin account */
    MARGIN("MARGIN"),
    /** Spot isolated margin account */
    ISOLATED("ISOLATED"),
    /** Option account */
    OPTION("OPTION"),
    /** Spot cross margin HF account */
    MARGIN_V2("MARGIN_V2"),
    /** Spot isolated margin HF account */
    ISOLATED_V2("ISOLATED_V2");

    private final String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
