// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.earn.earn;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetRedeemPreviewReq implements Request {
  /** Holding ID */
  @JsonProperty("orderId")
  private String orderId;

  /**
   * Account type: MAIN (funding account), TRADE (spot trading account). This parameter is valid
   * only when orderId=ETH2
   */
  @JsonProperty("fromAccountType")
  private FromAccountTypeEnum fromAccountType;

  public enum FromAccountTypeEnum {
    /** */
    MAIN("MAIN"),
    /** */
    TRADE("TRADE");

    private final String value;

    FromAccountTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FromAccountTypeEnum fromValue(String value) {
      for (FromAccountTypeEnum b : FromAccountTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
