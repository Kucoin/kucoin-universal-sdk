// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.futures.positions;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Response;
import com.kucoin.universal.sdk.model.RestResponse;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetMarginModeResp
    implements Response<GetMarginModeResp, RestResponse<GetMarginModeResp>> {
  /**
   * Symbol of the contract, Please refer to [Get Symbol endpoint:
   * symbol](https://www.kucoin.com/docs-new/api-3470220)
   */
  @JsonProperty("symbol")
  private String symbol;

  /** Margin mode: ISOLATED (isolated), CROSS (cross margin). */
  @JsonProperty("marginMode")
  private MarginModeEnum marginMode;

  /** common response */
  @JsonIgnore private RestResponse<GetMarginModeResp> commonResponse;

  @Override
  public void setCommonResponse(RestResponse<GetMarginModeResp> response) {
    this.commonResponse = response;
  }

  public enum MarginModeEnum {
    /** isolated margin */
    ISOLATED("ISOLATED"),
    /** cross margin */
    CROSS("CROSS");

    private final String value;

    MarginModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MarginModeEnum fromValue(String value) {
      for (MarginModeEnum b : MarginModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
