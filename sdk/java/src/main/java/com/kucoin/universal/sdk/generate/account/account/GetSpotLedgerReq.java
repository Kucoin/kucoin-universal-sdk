// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.account.account;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetSpotLedgerReq implements Request {
  /**
   * Currency (you can choose more than one currency). You can specify a max. of 10 currencies in
   * one go. If not specified, all currencies will be queried by default.
   */
  @JsonProperty("currency")
  private String currency;

  /** direction: in, out */
  @JsonProperty("direction")
  private DirectionEnum direction;

  /**
   * Type: DEPOSIT-deposit, WITHDRAW-withdraw, TRANSFER-transfer, SUB_TRANSFER-sub-account transfer,
   * TRADE_EXCHANGE-trade, MARGIN_EXCHANGE-margin trade, KUCOIN_BONUS-bonus, BROKER_TRANSFER-Broker
   * transfer record
   */
  @JsonProperty("bizType")
  private String bizType;

  /** Start time (milliseconds) */
  @JsonProperty("startAt")
  private Long startAt;

  /** End time (milliseconds) */
  @JsonProperty("endAt")
  private Long endAt;

  /** Current request page. */
  @JsonProperty("currentPage")
  @Builder.Default
  private Integer currentPage = 1;

  /** Number of results per request. Minimum is 10, maximum is 500. */
  @JsonProperty("pageSize")
  @Builder.Default
  private Integer pageSize = 50;

  public enum DirectionEnum {
    /** Funds in */
    IN("in"),
    /** Funds out */
    OUT("out");

    private final String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DirectionEnum fromValue(String value) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
