// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.service;

import com.kucoin.universal.sdk.generate.account.account.AccountApi;
import com.kucoin.universal.sdk.generate.account.account.AccountApiImpl;
import com.kucoin.universal.sdk.generate.account.deposit.DepositApi;
import com.kucoin.universal.sdk.generate.account.deposit.DepositApiImpl;
import com.kucoin.universal.sdk.generate.account.fee.FeeApi;
import com.kucoin.universal.sdk.generate.account.fee.FeeApiImpl;
import com.kucoin.universal.sdk.generate.account.subaccount.SubAccountApi;
import com.kucoin.universal.sdk.generate.account.subaccount.SubAccountApiImpl;
import com.kucoin.universal.sdk.generate.account.transfer.TransferApi;
import com.kucoin.universal.sdk.generate.account.transfer.TransferApiImpl;
import com.kucoin.universal.sdk.generate.account.withdrawal.WithdrawalApi;
import com.kucoin.universal.sdk.generate.account.withdrawal.WithdrawalApiImpl;
import com.kucoin.universal.sdk.internal.interfaces.Transport;

public class AccountServiceImpl implements AccountService {
  private Transport transport;
  private AccountApi account;
  private DepositApi deposit;
  private WithdrawalApi withdrawal;
  private FeeApi fee;
  private SubAccountApi subAccount;
  private TransferApi transfer;

  public AccountServiceImpl(Transport transport) {
    this.transport = transport;
    this.account = new AccountApiImpl(transport);
    this.deposit = new DepositApiImpl(transport);
    this.withdrawal = new WithdrawalApiImpl(transport);
    this.fee = new FeeApiImpl(transport);
    this.subAccount = new SubAccountApiImpl(transport);
    this.transfer = new TransferApiImpl(transport);
  }

  public AccountApi getAccountApi() {
    return this.account;
  }

  public DepositApi getDepositApi() {
    return this.deposit;
  }

  public WithdrawalApi getWithdrawalApi() {
    return this.withdrawal;
  }

  public FeeApi getFeeApi() {
    return this.fee;
  }

  public SubAccountApi getSubAccountApi() {
    return this.subAccount;
  }

  public TransferApi getTransferApi() {
    return this.transfer;
  }
}
