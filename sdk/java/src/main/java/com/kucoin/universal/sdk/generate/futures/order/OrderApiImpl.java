// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.futures.order;

import com.kucoin.universal.sdk.internal.interfaces.Transport;

public class OrderApiImpl implements OrderApi {
  private final Transport transport;

  public OrderApiImpl(Transport transport) {
    this.transport = transport;
  }

  public AddOrderResp addOrder(AddOrderReq req) {
    return this.transport.call(
        "futures", false, "POST", "/api/v1/orders", req, AddOrderResp.class, false);
  }

  public AddOrderTestResp addOrderTest(AddOrderTestReq req) {
    return this.transport.call(
        "futures", false, "POST", "/api/v1/orders/test", req, AddOrderTestResp.class, false);
  }

  public BatchAddOrdersResp batchAddOrders(BatchAddOrdersReq req) {
    return this.transport.call(
        "futures", false, "POST", "/api/v1/orders/multi", req, BatchAddOrdersResp.class, false);
  }

  public AddTPSLOrderResp addTPSLOrder(AddTPSLOrderReq req) {
    return this.transport.call(
        "futures", false, "POST", "/api/v1/st-orders", req, AddTPSLOrderResp.class, false);
  }

  public CancelOrderByIdResp cancelOrderById(CancelOrderByIdReq req) {
    return this.transport.call(
        "futures",
        false,
        "DELETE",
        "/api/v1/orders/{orderId}",
        req,
        CancelOrderByIdResp.class,
        false);
  }

  public CancelOrderByClientOidResp cancelOrderByClientOid(CancelOrderByClientOidReq req) {
    return this.transport.call(
        "futures",
        false,
        "DELETE",
        "/api/v1/orders/client-order/{clientOid}",
        req,
        CancelOrderByClientOidResp.class,
        false);
  }

  public BatchCancelOrdersResp batchCancelOrders(BatchCancelOrdersReq req) {
    return this.transport.call(
        "futures",
        false,
        "DELETE",
        "/api/v1/orders/multi-cancel",
        req,
        BatchCancelOrdersResp.class,
        true);
  }

  public CancelAllOrdersV3Resp cancelAllOrdersV3(CancelAllOrdersV3Req req) {
    return this.transport.call(
        "futures", false, "DELETE", "/api/v3/orders", req, CancelAllOrdersV3Resp.class, false);
  }

  public CancelAllStopOrdersResp cancelAllStopOrders(CancelAllStopOrdersReq req) {
    return this.transport.call(
        "futures",
        false,
        "DELETE",
        "/api/v1/stopOrders",
        req,
        CancelAllStopOrdersResp.class,
        false);
  }

  public GetOrderByOrderIdResp getOrderByOrderId(GetOrderByOrderIdReq req) {
    return this.transport.call(
        "futures",
        false,
        "GET",
        "/api/v1/orders/{order-id}",
        req,
        GetOrderByOrderIdResp.class,
        false);
  }

  public GetOrderByClientOidResp getOrderByClientOid(GetOrderByClientOidReq req) {
    return this.transport.call(
        "futures",
        false,
        "GET",
        "/api/v1/orders/byClientOid",
        req,
        GetOrderByClientOidResp.class,
        false);
  }

  public GetOrderListResp getOrderList(GetOrderListReq req) {
    return this.transport.call(
        "futures", false, "GET", "/api/v1/orders", req, GetOrderListResp.class, false);
  }

  public GetRecentClosedOrdersResp getRecentClosedOrders(GetRecentClosedOrdersReq req) {
    return this.transport.call(
        "futures",
        false,
        "GET",
        "/api/v1/recentDoneOrders",
        req,
        GetRecentClosedOrdersResp.class,
        false);
  }

  public GetStopOrderListResp getStopOrderList(GetStopOrderListReq req) {
    return this.transport.call(
        "futures", false, "GET", "/api/v1/stopOrders", req, GetStopOrderListResp.class, false);
  }

  public GetOpenOrderValueResp getOpenOrderValue(GetOpenOrderValueReq req) {
    return this.transport.call(
        "futures",
        false,
        "GET",
        "/api/v1/openOrderStatistics",
        req,
        GetOpenOrderValueResp.class,
        false);
  }

  public GetRecentTradeHistoryResp getRecentTradeHistory(GetRecentTradeHistoryReq req) {
    return this.transport.call(
        "futures",
        false,
        "GET",
        "/api/v1/recentFills",
        req,
        GetRecentTradeHistoryResp.class,
        false);
  }

  public GetTradeHistoryResp getTradeHistory(GetTradeHistoryReq req) {
    return this.transport.call(
        "futures", false, "GET", "/api/v1/fills", req, GetTradeHistoryResp.class, false);
  }

  public CancelAllOrdersV1Resp cancelAllOrdersV1(CancelAllOrdersV1Req req) {
    return this.transport.call(
        "futures", false, "DELETE", "/api/v1/orders", req, CancelAllOrdersV1Resp.class, false);
  }
}
