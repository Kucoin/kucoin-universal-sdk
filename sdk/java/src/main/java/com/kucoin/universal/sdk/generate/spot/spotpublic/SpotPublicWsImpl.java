// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.spot.spotpublic;

import com.kucoin.universal.sdk.internal.interfaces.WebSocketService;

public class SpotPublicWsImpl implements SpotPublicWs {

  private final WebSocketService wsService;

  public SpotPublicWsImpl(WebSocketService wsService) {
    this.wsService = wsService;
  }

  public String allTickers(AllTickersEvent.Callback callback) {
    String topicPrefix = "/market/ticker:all";

    String[] args = {};

    return this.wsService.subscribe(
        topicPrefix, args, AllTickersEvent.CallbackAdapters.of(callback));
  }

  public String callAuctionInfo(String symbol, CallAuctionInfoEvent.Callback callback) {
    String topicPrefix = "/callauction/callauctionData";

    String[] args = {symbol};

    return this.wsService.subscribe(
        topicPrefix, args, CallAuctionInfoEvent.CallbackAdapters.of(callback));
  }

  public String callAuctionOrderbookLevel50(
      String symbol, CallAuctionOrderbookLevel50Event.Callback callback) {
    String topicPrefix = "/callauction/level2Depth50";

    String[] args = {symbol};

    return this.wsService.subscribe(
        topicPrefix, args, CallAuctionOrderbookLevel50Event.CallbackAdapters.of(callback));
  }

  public String klines(String symbol, String type, KlinesEvent.Callback callback) {
    String topicPrefix = "/market/candles";

    String[] args = {String.join("_", symbol, type)};

    return this.wsService.subscribe(topicPrefix, args, KlinesEvent.CallbackAdapters.of(callback));
  }

  public String marketSnapshot(String market, MarketSnapshotEvent.Callback callback) {
    String topicPrefix = "/market/snapshot";

    String[] args = {market};

    return this.wsService.subscribe(
        topicPrefix, args, MarketSnapshotEvent.CallbackAdapters.of(callback));
  }

  public String orderbookIncrement(String[] symbol, OrderbookIncrementEvent.Callback callback) {
    String topicPrefix = "/market/level2";

    String[] args = symbol;

    return this.wsService.subscribe(
        topicPrefix, args, OrderbookIncrementEvent.CallbackAdapters.of(callback));
  }

  public String orderbookLevel1(String[] symbol, OrderbookLevel1Event.Callback callback) {
    String topicPrefix = "/spotMarket/level1";

    String[] args = symbol;

    return this.wsService.subscribe(
        topicPrefix, args, OrderbookLevel1Event.CallbackAdapters.of(callback));
  }

  public String orderbookLevel50(String[] symbol, OrderbookLevel50Event.Callback callback) {
    String topicPrefix = "/spotMarket/level2Depth50";

    String[] args = symbol;

    return this.wsService.subscribe(
        topicPrefix, args, OrderbookLevel50Event.CallbackAdapters.of(callback));
  }

  public String orderbookLevel5(String[] symbol, OrderbookLevel5Event.Callback callback) {
    String topicPrefix = "/spotMarket/level2Depth5";

    String[] args = symbol;

    return this.wsService.subscribe(
        topicPrefix, args, OrderbookLevel5Event.CallbackAdapters.of(callback));
  }

  public String symbolSnapshot(String symbol, SymbolSnapshotEvent.Callback callback) {
    String topicPrefix = "/market/snapshot";

    String[] args = {symbol};

    return this.wsService.subscribe(
        topicPrefix, args, SymbolSnapshotEvent.CallbackAdapters.of(callback));
  }

  public String ticker(String[] symbol, TickerEvent.Callback callback) {
    String topicPrefix = "/market/ticker";

    String[] args = symbol;

    return this.wsService.subscribe(topicPrefix, args, TickerEvent.CallbackAdapters.of(callback));
  }

  public String trade(String[] symbol, TradeEvent.Callback callback) {
    String topicPrefix = "/market/match";

    String[] args = symbol;

    return this.wsService.subscribe(topicPrefix, args, TradeEvent.CallbackAdapters.of(callback));
  }

  public void unSubscribe(String id) {
    this.wsService.unsubscribe(id);
  }

  public void start() {
    this.wsService.start();
  }

  public void stop() {
    this.wsService.stop();
  }
}
