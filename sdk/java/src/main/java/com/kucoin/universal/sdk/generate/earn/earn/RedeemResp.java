// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.earn.earn;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Response;
import com.kucoin.universal.sdk.model.RestResponse;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class RedeemResp implements Response<RedeemResp, RestResponse<RedeemResp>> {
  /** Redemption order ID */
  @JsonProperty("orderTxId")
  private String orderTxId;

  /** Expected deliver time (milliseconds) */
  @JsonProperty("deliverTime")
  private Long deliverTime;

  /** Redemption status: SUCCESS (successful), PENDING (redemption pending) */
  @JsonProperty("status")
  private StatusEnum status;

  /** Redemption amount */
  @JsonProperty("amount")
  private String amount;

  /** common response */
  @JsonIgnore private RestResponse<RedeemResp> commonResponse;

  @Override
  public void setCommonResponse(RestResponse<RedeemResp> response) {
    this.commonResponse = response;
  }

  public enum StatusEnum {
    /** */
    SUCCESS("SUCCESS"),
    /** */
    PENDING("PENDING");

    private final String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
