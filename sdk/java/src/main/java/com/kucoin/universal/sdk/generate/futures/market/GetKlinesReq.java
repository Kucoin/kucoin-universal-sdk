// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.futures.market;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetKlinesReq implements Request {
  /**
   * Symbol of the contract. Please refer to [Get Symbol endpoint: symbol, indexSymbol,
   * premiumsSymbol1M, premiumsSymbol8H](https://www.kucoin.com/docs-new/api-3470220)
   */
  @JsonProperty("symbol")
  private String symbol;

  /** Type of candlestick patterns (minutes) */
  @JsonProperty("granularity")
  private GranularityEnum granularity;

  /** Start time (milliseconds) */
  @JsonProperty("from")
  private Long from;

  /** End time (milliseconds) */
  @JsonProperty("to")
  private Long to;

  public enum GranularityEnum {
    /** 1min */
    _1(1),
    /** 5min */
    _5(5),
    /** 15min */
    _15(15),
    /** 30min */
    _30(30),
    /** 1hour */
    _60(60),
    /** 2hour */
    _120(120),
    /** 4hour */
    _240(240),
    /** 8hour */
    _480(480),
    /** 12hour */
    _720(720),
    /** 1day */
    _1440(1440),
    /** 1week */
    _10080(10080);

    private final Long value;

    GranularityEnum(Long value) {
      this.value = value;
    }

    @JsonValue
    public Long getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GranularityEnum fromValue(Long value) {
      for (GranularityEnum b : GranularityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
