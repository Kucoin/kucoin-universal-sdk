// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.broker.ndbroker;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class SubmitKYCReq implements Request {
  /** client uid */
  @JsonProperty("clientUid")
  private String clientUid;

  /** first Name */
  @JsonProperty("firstName")
  private String firstName;

  /** last Name */
  @JsonProperty("lastName")
  private String lastName;

  /** ISO country code */
  @JsonProperty("issueCountry")
  private String issueCountry;

  /** Birth Date */
  @JsonProperty("birthDate")
  private String birthDate;

  /** Identity type */
  @JsonProperty("identityType")
  private IdentityTypeEnum identityType;

  /** Identity Number */
  @JsonProperty("identityNumber")
  private String identityNumber;

  /** expire Date. If there is no expiration date, please fill in: 2099-01-01 */
  @JsonProperty("expireDate")
  private String expireDate;

  /**
   * **Optional when identityType=bvn,** Front photo of the ID card, in base64 format, PNG or JPG is
   * recommended, and the size cannot exceed 2MB. If it exceeds 2MB, it is recommended to adjust the
   * resolution and compress it to less than 2MB
   */
  @JsonProperty("frontPhoto")
  private String frontPhoto;

  /** **Optional when identityType=passport/bvn,** Back photo of ID, same as above */
  @JsonProperty("backendPhoto")
  private String backendPhoto;

  /**
   * Selfie photo, in base64 format, PNG or JPG is recommended, and the size cannot exceed 2MB. If
   * it exceeds 2MB, it is recommended to adjust the resolution and compress it to less than 2MB
   */
  @JsonProperty("facePhoto")
  private String facePhoto;

  public enum IdentityTypeEnum {
    /** id card */
    IDCARD("idcard"),
    /** driving license */
    DRIVINGLICENSE("drivinglicense"),
    /** passport */
    PASSPORT("passport"),
    /** bvn */
    BVN("bvn");

    private final String value;

    IdentityTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IdentityTypeEnum fromValue(String value) {
      for (IdentityTypeEnum b : IdentityTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
