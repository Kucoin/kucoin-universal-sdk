package com.kucoin.universal.sdk.generate.copytrading.futures;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.kucoin.universal.sdk.model.RestResponse;
import java.util.ArrayList;
import java.util.List;

class FuturesApiAutoGeneratedTest {
  public static ObjectMapper mapper = new ObjectMapper();

  private static final List<String> failedTests = new ArrayList<>();

  /** addOrder Request Add Order /api/v1/copy-trade/futures/orders */
  public static void testAddOrderRequest() throws Exception {
    String data =
        "{\\\"clientOid\\\": \\\"5c52e11203aa677f33e493fb\\\", \\\"side\\\": \\\"buy\\\","
            + " \\\"symbol\\\": \\\"XBTUSDTM\\\", \\\"leverage\\\": 3, \\\"type\\\": \\\"limit\\\","
            + " \\\"remark\\\": \\\"order remarks\\\", \\\"reduceOnly\\\": false,"
            + " \\\"marginMode\\\": \\\"ISOLATED\\\", \\\"price\\\": \\\"0.1\\\", \\\"size\\\": 1,"
            + " \\\"timeInForce\\\": \\\"GTC\\\"}";
    AddOrderReq obj = mapper.readValue(data, AddOrderReq.class);
  }

  /** addOrder Response Add Order /api/v1/copy-trade/futures/orders */
  public static void testAddOrderResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"orderId\\\": \\\"263485113055133696\\\",\\n"
            + "        \\\"clientOid\\\": \\\"5c52e11203aa677f331e493fb\\\"\\n"
            + "    }\\n"
            + "}";
    RestResponse<AddOrderResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOrderResp>>() {});
  }

  /** addOrderTest Request Add Order Test /api/v1/copy-trade/futures/orders/test */
  public static void testAddOrderTestRequest() throws Exception {
    String data =
        "{\\\"clientOid\\\": \\\"5c52e11203aa677f33e493fb\\\", \\\"side\\\": \\\"buy\\\","
            + " \\\"symbol\\\": \\\"XBTUSDTM\\\", \\\"leverage\\\": 3, \\\"type\\\": \\\"limit\\\","
            + " \\\"remark\\\": \\\"order remarks\\\", \\\"reduceOnly\\\": false,"
            + " \\\"marginMode\\\": \\\"ISOLATED\\\", \\\"price\\\": \\\"0.1\\\", \\\"size\\\": 1,"
            + " \\\"timeInForce\\\": \\\"GTC\\\"}";
    AddOrderTestReq obj = mapper.readValue(data, AddOrderTestReq.class);
  }

  /** addOrderTest Response Add Order Test /api/v1/copy-trade/futures/orders/test */
  public static void testAddOrderTestResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"orderId\\\": \\\"234125150956625920\\\",\\n"
            + "        \\\"clientOid\\\": \\\"5c52e11203aa677f33e493fb\\\"\\n"
            + "    }\\n"
            + "}";
    RestResponse<AddOrderTestResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOrderTestResp>>() {});
  }

  /**
   * addTPSLOrder Request Add Take Profit And Stop Loss Order /api/v1/copy-trade/futures/st-orders
   */
  public static void testAddTPSLOrderRequest() throws Exception {
    String data =
        "{\\\"clientOid\\\": \\\"5c52e11203aa677f33e493fb\\\", \\\"side\\\": \\\"buy\\\","
            + " \\\"symbol\\\": \\\"XBTUSDTM\\\", \\\"leverage\\\": 3, \\\"type\\\": \\\"limit\\\","
            + " \\\"remark\\\": \\\"order remarks\\\", \\\"reduceOnly\\\": false,"
            + " \\\"marginMode\\\": \\\"ISOLATED\\\", \\\"price\\\": \\\"0.2\\\", \\\"size\\\": 1,"
            + " \\\"timeInForce\\\": \\\"GTC\\\", \\\"triggerStopUpPrice\\\": \\\"0.3\\\","
            + " \\\"triggerStopDownPrice\\\": \\\"0.1\\\", \\\"stopPriceType\\\": \\\"TP\\\"}";
    AddTPSLOrderReq obj = mapper.readValue(data, AddTPSLOrderReq.class);
  }

  /**
   * addTPSLOrder Response Add Take Profit And Stop Loss Order /api/v1/copy-trade/futures/st-orders
   */
  public static void testAddTPSLOrderResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"orderId\\\": \\\"234125150956625920\\\",\\n"
            + "        \\\"clientOid\\\": \\\"5c52e11203aa677f33e493fb\\\"\\n"
            + "    }\\n"
            + "}";
    RestResponse<AddTPSLOrderResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddTPSLOrderResp>>() {});
  }

  /** cancelOrderById Request Cancel Order By OrderId /api/v1/copy-trade/futures/orders */
  public static void testCancelOrderByIdRequest() throws Exception {
    String data = "{\\\"orderId\\\": \\\"263485113055133696\\\"}";
    CancelOrderByIdReq obj = mapper.readValue(data, CancelOrderByIdReq.class);
  }

  /** cancelOrderById Response Cancel Order By OrderId /api/v1/copy-trade/futures/orders */
  public static void testCancelOrderByIdResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"cancelledOrderIds\\\": [\\n"
            + "            \\\"263485113055133696\\\"\\n"
            + "        ]\\n"
            + "    }\\n"
            + "}";
    RestResponse<CancelOrderByIdResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelOrderByIdResp>>() {});
  }

  /**
   * cancelOrderByClientOid Request Cancel Order By ClientOid
   * /api/v1/copy-trade/futures/orders/client-order
   */
  public static void testCancelOrderByClientOidRequest() throws Exception {
    String data =
        "{\\\"symbol\\\": \\\"XBTUSDTM\\\", \\\"clientOid\\\": \\\"5c52e11203aa677f331e493fb\\\"}";
    CancelOrderByClientOidReq obj = mapper.readValue(data, CancelOrderByClientOidReq.class);
  }

  /**
   * cancelOrderByClientOid Response Cancel Order By ClientOid
   * /api/v1/copy-trade/futures/orders/client-order
   */
  public static void testCancelOrderByClientOidResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"clientOid\\\": \\\"5c52e11203aa677f331e4913fb\\\"\\n"
            + "    }\\n"
            + "}";
    RestResponse<CancelOrderByClientOidResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelOrderByClientOidResp>>() {});
  }

  /** getMaxOpenSize Request Get Max Open Size /api/v1/copy-trade/futures/get-max-open-size */
  public static void testGetMaxOpenSizeRequest() throws Exception {
    String data =
        "{\\\"symbol\\\": \\\"XBTUSDTM\\\", \\\"price\\\": 123456.0, \\\"leverage\\\": 123456}";
    GetMaxOpenSizeReq obj = mapper.readValue(data, GetMaxOpenSizeReq.class);
  }

  /** getMaxOpenSize Response Get Max Open Size /api/v1/copy-trade/futures/get-max-open-size */
  public static void testGetMaxOpenSizeResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"symbol\\\": \\\"XBTUSDTM\\\",\\n"
            + "        \\\"maxBuyOpenSize\\\": \\\"1000000\\\",\\n"
            + "        \\\"maxSellOpenSize\\\": \\\"51\\\"\\n"
            + "    }\\n"
            + "}";
    RestResponse<GetMaxOpenSizeResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetMaxOpenSizeResp>>() {});
  }

  /**
   * getMaxWithdrawMargin Request Get Max Withdraw Margin
   * /api/v1/copy-trade/futures/position/margin/max-withdraw-margin
   */
  public static void testGetMaxWithdrawMarginRequest() throws Exception {
    String data = "{\\\"symbol\\\": \\\"example_string_default_value\\\"}";
    GetMaxWithdrawMarginReq obj = mapper.readValue(data, GetMaxWithdrawMarginReq.class);
  }

  /**
   * getMaxWithdrawMargin Response Get Max Withdraw Margin
   * /api/v1/copy-trade/futures/position/margin/max-withdraw-margin
   */
  public static void testGetMaxWithdrawMarginResponse() throws Exception {
    String data =
        "{\\n    \\\"code\\\": \\\"200000\\\",\\n    \\\"data\\\": \\\"21.1135719252\\\"\\n}";
    RestResponse<GetMaxWithdrawMarginResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetMaxWithdrawMarginResp>>() {});
  }

  /**
   * addIsolatedMargin Request Add Isolated Margin
   * /api/v1/copy-trade/futures/position/margin/deposit-margin
   */
  public static void testAddIsolatedMarginRequest() throws Exception {
    String data =
        "{\\\"symbol\\\": \\\"XBTUSDTM\\\", \\\"margin\\\": 3, \\\"bizNo\\\": \\\"112233\\\"}";
    AddIsolatedMarginReq obj = mapper.readValue(data, AddIsolatedMarginReq.class);
  }

  /**
   * addIsolatedMargin Response Add Isolated Margin
   * /api/v1/copy-trade/futures/position/margin/deposit-margin
   */
  public static void testAddIsolatedMarginResponse() throws Exception {
    String data =
        "{\\n"
            + "    \\\"code\\\": \\\"200000\\\",\\n"
            + "    \\\"data\\\": {\\n"
            + "        \\\"id\\\": \\\"400000000000974886\\\",\\n"
            + "        \\\"symbol\\\": \\\"XBTUSDTM\\\",\\n"
            + "        \\\"autoDeposit\\\": true,\\n"
            + "        \\\"maintMarginReq\\\": \\\"0.004\\\",\\n"
            + "        \\\"riskLimit\\\": 100000,\\n"
            + "        \\\"realLeverage\\\": \\\"1.83\\\",\\n"
            + "        \\\"crossMode\\\": false,\\n"
            + "        \\\"marginMode\\\": \\\"\\\",\\n"
            + "        \\\"positionSide\\\": \\\"\\\",\\n"
            + "        \\\"leverage\\\": \\\"1.83\\\",\\n"
            + "        \\\"delevPercentage\\\": 0.2,\\n"
            + "        \\\"openingTimestamp\\\": 1736932881164,\\n"
            + "        \\\"currentTimestamp\\\": 1736933530230,\\n"
            + "        \\\"currentQty\\\": 1,\\n"
            + "        \\\"currentCost\\\": \\\"97.302\\\",\\n"
            + "        \\\"currentComm\\\": \\\"0.0583812\\\",\\n"
            + "        \\\"unrealisedCost\\\": \\\"97.302\\\",\\n"
            + "        \\\"realisedGrossCost\\\": \\\"0.0000000000\\\",\\n"
            + "        \\\"realisedCost\\\": \\\"0.0583812000\\\",\\n"
            + "        \\\"isOpen\\\": true,\\n"
            + "        \\\"markPrice\\\": \\\"96939.98\\\",\\n"
            + "        \\\"markValue\\\": \\\"96.9399800000\\\",\\n"
            + "        \\\"posCost\\\": \\\"97.302\\\",\\n"
            + "        \\\"posCross\\\": \\\"20.9874\\\",\\n"
            + "        \\\"posInit\\\": \\\"32.4339999967\\\",\\n"
            + "        \\\"posComm\\\": \\\"0.0904415999\\\",\\n"
            + "        \\\"posLoss\\\": \\\"0\\\",\\n"
            + "        \\\"posMargin\\\": \\\"53.5118415966\\\",\\n"
            + "        \\\"posMaint\\\": \\\"0.4796495999\\\",\\n"
            + "        \\\"maintMargin\\\": \\\"53.1498215966\\\",\\n"
            + "        \\\"realisedGrossPnl\\\": \\\"0.0000000000\\\",\\n"
            + "        \\\"realisedPnl\\\": \\\"-0.0583812000\\\",\\n"
            + "        \\\"unrealisedPnl\\\": \\\"-0.3620200000\\\",\\n"
            + "        \\\"unrealisedPnlPcnt\\\": \\\"-0.0037\\\",\\n"
            + "        \\\"unrealisedRoePcnt\\\": \\\"-0.0112\\\",\\n"
            + "        \\\"avgEntryPrice\\\": \\\"97302.00\\\",\\n"
            + "        \\\"liquidationPrice\\\": \\\"44269.81\\\",\\n"
            + "        \\\"bankruptPrice\\\": \\\"43880.61\\\",\\n"
            + "        \\\"settleCurrency\\\": \\\"USDT\\\"\\n"
            + "    }\\n"
            + "}";
    RestResponse<AddIsolatedMarginResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddIsolatedMarginResp>>() {});
  }

  /**
   * removeIsolatedMargin Request Remove Isolated Margin
   * /api/v1/copy-trade/futures/position/margin/withdraw-margin
   */
  public static void testRemoveIsolatedMarginRequest() throws Exception {
    String data = "{\\\"symbol\\\": \\\"XBTUSDTM\\\", \\\"withdrawAmount\\\": 1e-07}";
    RemoveIsolatedMarginReq obj = mapper.readValue(data, RemoveIsolatedMarginReq.class);
  }

  /**
   * removeIsolatedMargin Response Remove Isolated Margin
   * /api/v1/copy-trade/futures/position/margin/withdraw-margin
   */
  public static void testRemoveIsolatedMarginResponse() throws Exception {
    String data = "{\\n    \\\"code\\\": \\\"200000\\\",\\n    \\\"data\\\": \\\"0.1\\\"\\n}";
    RestResponse<RemoveIsolatedMarginResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<RemoveIsolatedMarginResp>>() {});
  }

  /**
   * modifyIsolatedMarginRiskLimt Request Modify Isolated Margin Risk Limit
   * /api/v1/copy-trade/futures/position/risk-limit-level/change
   */
  public static void testModifyIsolatedMarginRiskLimtRequest() throws Exception {
    String data = "{\\\"symbol\\\": \\\"XBTUSDTM\\\", \\\"level\\\": 1}";
    ModifyIsolatedMarginRiskLimtReq obj =
        mapper.readValue(data, ModifyIsolatedMarginRiskLimtReq.class);
  }

  /**
   * modifyIsolatedMarginRiskLimt Response Modify Isolated Margin Risk Limit
   * /api/v1/copy-trade/futures/position/risk-limit-level/change
   */
  public static void testModifyIsolatedMarginRiskLimtResponse() throws Exception {
    String data = "{\\n    \\\"code\\\": \\\"200000\\\",\\n    \\\"data\\\": true\\n}";
    RestResponse<ModifyIsolatedMarginRiskLimtResp> resp =
        mapper.readValue(
            data, new TypeReference<RestResponse<ModifyIsolatedMarginRiskLimtResp>>() {});
  }

  /**
   * modifyAutoDepositStatus Request Modify Isolated Margin Auto-Deposit Status
   * /api/v1/copy-trade/futures/position/margin/auto-deposit-status
   */
  public static void testModifyAutoDepositStatusRequest() throws Exception {
    String data = "{\\\"symbol\\\": \\\"XBTUSDTM\\\", \\\"status\\\": true}";
    ModifyAutoDepositStatusReq obj = mapper.readValue(data, ModifyAutoDepositStatusReq.class);
  }

  /**
   * modifyAutoDepositStatus Response Modify Isolated Margin Auto-Deposit Status
   * /api/v1/copy-trade/futures/position/margin/auto-deposit-status
   */
  public static void testModifyAutoDepositStatusResponse() throws Exception {
    String data = "{\\n    \\\"code\\\": \\\"200000\\\",\\n    \\\"data\\\": true\\n}";
    RestResponse<ModifyAutoDepositStatusResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<ModifyAutoDepositStatusResp>>() {});
  }

  public static void runAllTests() {
    run(FuturesApiAutoGeneratedTest::testAddOrderRequest, "testAddOrderRequest");
    run(FuturesApiAutoGeneratedTest::testAddOrderResponse, "testAddOrderResponse");
    run(FuturesApiAutoGeneratedTest::testAddOrderTestRequest, "testAddOrderTestRequest");
    run(FuturesApiAutoGeneratedTest::testAddOrderTestResponse, "testAddOrderTestResponse");
    run(FuturesApiAutoGeneratedTest::testAddTPSLOrderRequest, "testAddTPSLOrderRequest");
    run(FuturesApiAutoGeneratedTest::testAddTPSLOrderResponse, "testAddTPSLOrderResponse");
    run(FuturesApiAutoGeneratedTest::testCancelOrderByIdRequest, "testCancelOrderByIdRequest");
    run(FuturesApiAutoGeneratedTest::testCancelOrderByIdResponse, "testCancelOrderByIdResponse");
    run(
        FuturesApiAutoGeneratedTest::testCancelOrderByClientOidRequest,
        "testCancelOrderByClientOidRequest");
    run(
        FuturesApiAutoGeneratedTest::testCancelOrderByClientOidResponse,
        "testCancelOrderByClientOidResponse");
    run(FuturesApiAutoGeneratedTest::testGetMaxOpenSizeRequest, "testGetMaxOpenSizeRequest");
    run(FuturesApiAutoGeneratedTest::testGetMaxOpenSizeResponse, "testGetMaxOpenSizeResponse");
    run(
        FuturesApiAutoGeneratedTest::testGetMaxWithdrawMarginRequest,
        "testGetMaxWithdrawMarginRequest");
    run(
        FuturesApiAutoGeneratedTest::testGetMaxWithdrawMarginResponse,
        "testGetMaxWithdrawMarginResponse");
    run(FuturesApiAutoGeneratedTest::testAddIsolatedMarginRequest, "testAddIsolatedMarginRequest");
    run(
        FuturesApiAutoGeneratedTest::testAddIsolatedMarginResponse,
        "testAddIsolatedMarginResponse");
    run(
        FuturesApiAutoGeneratedTest::testRemoveIsolatedMarginRequest,
        "testRemoveIsolatedMarginRequest");
    run(
        FuturesApiAutoGeneratedTest::testRemoveIsolatedMarginResponse,
        "testRemoveIsolatedMarginResponse");
    run(
        FuturesApiAutoGeneratedTest::testModifyIsolatedMarginRiskLimtRequest,
        "testModifyIsolatedMarginRiskLimtRequest");
    run(
        FuturesApiAutoGeneratedTest::testModifyIsolatedMarginRiskLimtResponse,
        "testModifyIsolatedMarginRiskLimtResponse");
    run(
        FuturesApiAutoGeneratedTest::testModifyAutoDepositStatusRequest,
        "testModifyAutoDepositStatusRequest");
    run(
        FuturesApiAutoGeneratedTest::testModifyAutoDepositStatusResponse,
        "testModifyAutoDepositStatusResponse");
  }

  private static void run(TestCase test, String name) {
    System.out.println("Running test: " + name);
    try {
      test.execute();
      System.out.println("PASSED: " + name);
    } catch (Exception e) {
      System.err.println("FAILED: " + name + " - " + e.getMessage());
      e.printStackTrace(System.err);
      failedTests.add(name);
    }
  }

  @FunctionalInterface
  interface TestCase {
    void execute() throws Exception;
  }

  public static void main(String[] args) {
    runAllTests();
    finish();
  }

  public static void finish() {
    if (!failedTests.isEmpty()) {
      System.err.println("\n=== TEST SUMMARY ===");
      System.err.println("Failed tests:");
      for (String name : failedTests) {
        System.err.println(" - " + name);
      }
      System.exit(1);
    } else {
      System.out.println("\nAll tests passed.");
    }
  }
}
