package com.kucoin.universal.sdk.generate.account.subaccount;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.kucoin.universal.sdk.model.RestResponse;
import java.util.ArrayList;
import java.util.List;

class SubAccountApiAutoGeneratedTest {
  public static ObjectMapper mapper = new ObjectMapper();

  private static final List<String> failedTests = new ArrayList<>();

  /** addSubAccount Request Add sub-account /api/v2/sub/user/created */
  public static void testAddSubAccountRequest() throws Exception {
    String data =
        "{\"password\": \"q1234567\", \"access\": \"Spot\", \"subName\": \"subNameTest1\","
            + " \"remarks\": \"TheRemark\"}";
    AddSubAccountReq obj = mapper.readValue(data, AddSubAccountReq.class);
  }

  /** addSubAccount Response Add sub-account /api/v2/sub/user/created */
  public static void testAddSubAccountResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"uid\": 245730746,\n"
            + "        \"subName\": \"subNameTest1\",\n"
            + "        \"remarks\": \"TheRemark\",\n"
            + "        \"access\": \"Spot\"\n"
            + "    }\n"
            + "}";
    RestResponse<AddSubAccountResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddSubAccountResp>>() {});
  }

  /**
   * addSubAccountMarginPermission Request Add sub-account Margin Permission
   * /api/v3/sub/user/margin/enable
   */
  public static void testAddSubAccountMarginPermissionRequest() throws Exception {
    String data = "{\"uid\": \"169579801\"}";
    AddSubAccountMarginPermissionReq obj =
        mapper.readValue(data, AddSubAccountMarginPermissionReq.class);
  }

  /**
   * addSubAccountMarginPermission Response Add sub-account Margin Permission
   * /api/v3/sub/user/margin/enable
   */
  public static void testAddSubAccountMarginPermissionResponse() throws Exception {
    String data = "{\n    \"code\": \"200000\",\n    \"data\": null\n}";
    RestResponse<AddSubAccountMarginPermissionResp> resp =
        mapper.readValue(
            data, new TypeReference<RestResponse<AddSubAccountMarginPermissionResp>>() {});
  }

  /**
   * addSubAccountFuturesPermission Request Add sub-account Futures Permission
   * /api/v3/sub/user/futures/enable
   */
  public static void testAddSubAccountFuturesPermissionRequest() throws Exception {
    String data = "{\"uid\": \"169579801\"}";
    AddSubAccountFuturesPermissionReq obj =
        mapper.readValue(data, AddSubAccountFuturesPermissionReq.class);
  }

  /**
   * addSubAccountFuturesPermission Response Add sub-account Futures Permission
   * /api/v3/sub/user/futures/enable
   */
  public static void testAddSubAccountFuturesPermissionResponse() throws Exception {
    String data = "{\n    \"code\": \"200000\",\n    \"data\": null\n}";
    RestResponse<AddSubAccountFuturesPermissionResp> resp =
        mapper.readValue(
            data, new TypeReference<RestResponse<AddSubAccountFuturesPermissionResp>>() {});
  }

  /** getSpotSubAccountsSummaryV2 Request Get sub-account List - Summary Info /api/v2/sub/user */
  public static void testGetSpotSubAccountsSummaryV2Request() throws Exception {
    String data = "{\"currentPage\": 1, \"pageSize\": 10}";
    GetSpotSubAccountsSummaryV2Req obj =
        mapper.readValue(data, GetSpotSubAccountsSummaryV2Req.class);
  }

  /** getSpotSubAccountsSummaryV2 Response Get sub-account List - Summary Info /api/v2/sub/user */
  public static void testGetSpotSubAccountsSummaryV2Response() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"currentPage\": 1,\n"
            + "        \"pageSize\": 10,\n"
            + "        \"totalNum\": 1,\n"
            + "        \"totalPage\": 1,\n"
            + "        \"items\": [\n"
            + "            {\n"
            + "                \"userId\": \"63743f07e0c5230001761d08\",\n"
            + "                \"uid\": 169579801,\n"
            + "                \"subName\": \"testapi6\",\n"
            + "                \"status\": 2,\n"
            + "                \"type\": 0,\n"
            + "                \"access\": \"All\",\n"
            + "                \"createdAt\": 1668562696000,\n"
            + "                \"remarks\": \"remarks\",\n"
            + "                \"tradeTypes\": [\n"
            + "                    \"Spot\",\n"
            + "                    \"Futures\",\n"
            + "                    \"Margin\"\n"
            + "                ],\n"
            + "                \"openedTradeTypes\": [\n"
            + "                    \"Spot\"\n"
            + "                ],\n"
            + "                \"hostedStatus\": null\n"
            + "            }\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<GetSpotSubAccountsSummaryV2Resp> resp =
        mapper.readValue(
            data, new TypeReference<RestResponse<GetSpotSubAccountsSummaryV2Resp>>() {});
  }

  /**
   * getSpotSubAccountDetail Request Get sub-account Detail - Balance
   * /api/v1/sub-accounts/{subUserId}
   */
  public static void testGetSpotSubAccountDetailRequest() throws Exception {
    String data =
        "{\"subUserId\": \"63743f07e0c5230001761d08\", \"includeBaseAmount\": true,"
            + " \"baseCurrency\": \"example_string_default_value\", \"baseAmount\":"
            + " \"example_string_default_value\"}";
    GetSpotSubAccountDetailReq obj = mapper.readValue(data, GetSpotSubAccountDetailReq.class);
  }

  /**
   * getSpotSubAccountDetail Response Get sub-account Detail - Balance
   * /api/v1/sub-accounts/{subUserId}
   */
  public static void testGetSpotSubAccountDetailResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"subUserId\": \"63743f07e0c5230001761d08\",\n"
            + "        \"subName\": \"testapi6\",\n"
            + "        \"mainAccounts\": [\n"
            + "            {\n"
            + "                \"currency\": \"USDT\",\n"
            + "                \"balance\": \"0.01\",\n"
            + "                \"available\": \"0.01\",\n"
            + "                \"holds\": \"0\",\n"
            + "                \"baseCurrency\": \"BTC\",\n"
            + "                \"baseCurrencyPrice\": \"62384.3\",\n"
            + "                \"baseAmount\": \"0.00000016\",\n"
            + "                \"tag\": \"DEFAULT\"\n"
            + "            }\n"
            + "        ],\n"
            + "        \"tradeAccounts\": [\n"
            + "            {\n"
            + "                \"currency\": \"USDT\",\n"
            + "                \"balance\": \"0.01\",\n"
            + "                \"available\": \"0.01\",\n"
            + "                \"holds\": \"0\",\n"
            + "                \"baseCurrency\": \"BTC\",\n"
            + "                \"baseCurrencyPrice\": \"62384.3\",\n"
            + "                \"baseAmount\": \"0.00000016\",\n"
            + "                \"tag\": \"DEFAULT\"\n"
            + "            }\n"
            + "        ],\n"
            + "        \"marginAccounts\": [\n"
            + "            {\n"
            + "                \"currency\": \"USDT\",\n"
            + "                \"balance\": \"0.01\",\n"
            + "                \"available\": \"0.01\",\n"
            + "                \"holds\": \"0\",\n"
            + "                \"baseCurrency\": \"BTC\",\n"
            + "                \"baseCurrencyPrice\": \"62384.3\",\n"
            + "                \"baseAmount\": \"0.00000016\",\n"
            + "                \"tag\": \"DEFAULT\"\n"
            + "            }\n"
            + "        ],\n"
            + "        \"tradeHFAccounts\": []\n"
            + "    }\n"
            + "}";
    RestResponse<GetSpotSubAccountDetailResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetSpotSubAccountDetailResp>>() {});
  }

  /**
   * getSpotSubAccountListV2 Request Get sub-account List - Spot Balance (V2) /api/v2/sub-accounts
   */
  public static void testGetSpotSubAccountListV2Request() throws Exception {
    String data = "{\"currentPage\": 1, \"pageSize\": 10}";
    GetSpotSubAccountListV2Req obj = mapper.readValue(data, GetSpotSubAccountListV2Req.class);
  }

  /**
   * getSpotSubAccountListV2 Response Get sub-account List - Spot Balance (V2) /api/v2/sub-accounts
   */
  public static void testGetSpotSubAccountListV2Response() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"currentPage\": 1,\n"
            + "        \"pageSize\": 10,\n"
            + "        \"totalNum\": 3,\n"
            + "        \"totalPage\": 1,\n"
            + "        \"items\": [\n"
            + "            {\n"
            + "                \"subUserId\": \"63743f07e0c5230001761d08\",\n"
            + "                \"subName\": \"testapi6\",\n"
            + "                \"mainAccounts\": [\n"
            + "                    {\n"
            + "                        \"currency\": \"USDT\",\n"
            + "                        \"balance\": \"0.01\",\n"
            + "                        \"available\": \"0.01\",\n"
            + "                        \"holds\": \"0\",\n"
            + "                        \"baseCurrency\": \"BTC\",\n"
            + "                        \"baseCurrencyPrice\": \"62514.5\",\n"
            + "                        \"baseAmount\": \"0.00000015\",\n"
            + "                        \"tag\": \"DEFAULT\"\n"
            + "                    }\n"
            + "                ],\n"
            + "                \"tradeAccounts\": [\n"
            + "                    {\n"
            + "                        \"currency\": \"USDT\",\n"
            + "                        \"balance\": \"0.01\",\n"
            + "                        \"available\": \"0.01\",\n"
            + "                        \"holds\": \"0\",\n"
            + "                        \"baseCurrency\": \"BTC\",\n"
            + "                        \"baseCurrencyPrice\": \"62514.5\",\n"
            + "                        \"baseAmount\": \"0.00000015\",\n"
            + "                        \"tag\": \"DEFAULT\"\n"
            + "                    }\n"
            + "                ],\n"
            + "                \"marginAccounts\": [\n"
            + "                    {\n"
            + "                        \"currency\": \"USDT\",\n"
            + "                        \"balance\": \"0.01\",\n"
            + "                        \"available\": \"0.01\",\n"
            + "                        \"holds\": \"0\",\n"
            + "                        \"baseCurrency\": \"BTC\",\n"
            + "                        \"baseCurrencyPrice\": \"62514.5\",\n"
            + "                        \"baseAmount\": \"0.00000015\",\n"
            + "                        \"tag\": \"DEFAULT\"\n"
            + "                    }\n"
            + "                ],\n"
            + "                \"tradeHFAccounts\": []\n"
            + "            },\n"
            + "            {\n"
            + "                \"subUserId\": \"670538a31037eb000115b076\",\n"
            + "                \"subName\": \"Name1234567\",\n"
            + "                \"mainAccounts\": [],\n"
            + "                \"tradeAccounts\": [],\n"
            + "                \"marginAccounts\": [],\n"
            + "                \"tradeHFAccounts\": []\n"
            + "            },\n"
            + "            {\n"
            + "                \"subUserId\": \"66b0c0905fc1480001c14c36\",\n"
            + "                \"subName\": \"LTkucoin1491\",\n"
            + "                \"mainAccounts\": [],\n"
            + "                \"tradeAccounts\": [],\n"
            + "                \"marginAccounts\": [],\n"
            + "                \"tradeHFAccounts\": []\n"
            + "            }\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<GetSpotSubAccountListV2Resp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetSpotSubAccountListV2Resp>>() {});
  }

  /**
   * getFuturesSubAccountListV2 Request Get sub-account List - Futures Balance (V2)
   * /api/v1/account-overview-all
   */
  public static void testGetFuturesSubAccountListV2Request() throws Exception {
    String data = "{\"currency\": \"USDT\"}";
    GetFuturesSubAccountListV2Req obj = mapper.readValue(data, GetFuturesSubAccountListV2Req.class);
  }

  /**
   * getFuturesSubAccountListV2 Response Get sub-account List - Futures Balance (V2)
   * /api/v1/account-overview-all
   */
  public static void testGetFuturesSubAccountListV2Response() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"summary\": {\n"
            + "            \"accountEquityTotal\": 103.899081508,\n"
            + "            \"unrealisedPNLTotal\": 38.81075,\n"
            + "            \"marginBalanceTotal\": 65.336985668,\n"
            + "            \"positionMarginTotal\": 68.9588320683,\n"
            + "            \"orderMarginTotal\": 0,\n"
            + "            \"frozenFundsTotal\": 0,\n"
            + "            \"availableBalanceTotal\": 67.2492494397,\n"
            + "            \"currency\": \"USDT\"\n"
            + "        },\n"
            + "        \"accounts\": [\n"
            + "            {\n"
            + "                \"accountName\": \"Name1234567\",\n"
            + "                \"accountEquity\": 0,\n"
            + "                \"unrealisedPNL\": 0,\n"
            + "                \"marginBalance\": 0,\n"
            + "                \"positionMargin\": 0,\n"
            + "                \"orderMargin\": 0,\n"
            + "                \"frozenFunds\": 0,\n"
            + "                \"availableBalance\": 0,\n"
            + "                \"currency\": \"USDT\"\n"
            + "            },\n"
            + "            {\n"
            + "                \"accountName\": \"LTkucoin1491\",\n"
            + "                \"accountEquity\": 0,\n"
            + "                \"unrealisedPNL\": 0,\n"
            + "                \"marginBalance\": 0,\n"
            + "                \"positionMargin\": 0,\n"
            + "                \"orderMargin\": 0,\n"
            + "                \"frozenFunds\": 0,\n"
            + "                \"availableBalance\": 0,\n"
            + "                \"currency\": \"USDT\"\n"
            + "            },\n"
            + "            {\n"
            + "                \"accountName\": \"manage112233\",\n"
            + "                \"accountEquity\": 0,\n"
            + "                \"unrealisedPNL\": 0,\n"
            + "                \"marginBalance\": 0,\n"
            + "                \"positionMargin\": 0,\n"
            + "                \"orderMargin\": 0,\n"
            + "                \"frozenFunds\": 0,\n"
            + "                \"availableBalance\": 0,\n"
            + "                \"currency\": \"USDT\"\n"
            + "            },\n"
            + "            {\n"
            + "                \"accountName\": \"testapi6\",\n"
            + "                \"accountEquity\": 27.30545128,\n"
            + "                \"unrealisedPNL\": 22.549,\n"
            + "                \"marginBalance\": 4.75645128,\n"
            + "                \"positionMargin\": 24.1223749975,\n"
            + "                \"orderMargin\": 0,\n"
            + "                \"frozenFunds\": 0,\n"
            + "                \"availableBalance\": 25.7320762825,\n"
            + "                \"currency\": \"USDT\"\n"
            + "            },\n"
            + "            {\n"
            + "                \"accountName\": \"main\",\n"
            + "                \"accountEquity\": 76.593630228,\n"
            + "                \"unrealisedPNL\": 16.26175,\n"
            + "                \"marginBalance\": 60.580534388,\n"
            + "                \"positionMargin\": 44.8364570708,\n"
            + "                \"orderMargin\": 0,\n"
            + "                \"frozenFunds\": 0,\n"
            + "                \"availableBalance\": 41.5171731572,\n"
            + "                \"currency\": \"USDT\"\n"
            + "            }\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<GetFuturesSubAccountListV2Resp> resp =
        mapper.readValue(
            data, new TypeReference<RestResponse<GetFuturesSubAccountListV2Resp>>() {});
  }

  /** addSubAccountApi Request Add sub-account API /api/v1/sub/api-key */
  public static void testAddSubAccountApiRequest() throws Exception {
    String data =
        "{\"subName\": \"testapi6\", \"passphrase\": \"11223344\", \"remark\": \"TheRemark\","
            + " \"permission\": \"General,Spot,Futures\"}";
    AddSubAccountApiReq obj = mapper.readValue(data, AddSubAccountApiReq.class);
  }

  /** addSubAccountApi Response Add sub-account API /api/v1/sub/api-key */
  public static void testAddSubAccountApiResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"subName\": \"testapi6\",\n"
            + "        \"remark\": \"TheRemark\",\n"
            + "        \"apiKey\": \"670621e3a25958000159c82f\",\n"
            + "        \"apiSecret\": \"46fd8974******896f005b2340\",\n"
            + "        \"apiVersion\": 3,\n"
            + "        \"passphrase\": \"11223344\",\n"
            + "        \"permission\": \"General,Futures\",\n"
            + "        \"createdAt\": 1728455139000\n"
            + "    }\n"
            + "}";
    RestResponse<AddSubAccountApiResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddSubAccountApiResp>>() {});
  }

  /** modifySubAccountApi Request Modify sub-account API /api/v1/sub/api-key/update */
  public static void testModifySubAccountApiRequest() throws Exception {
    String data =
        "{\"subName\": \"testapi6\", \"apiKey\": \"670621e3a25958000159c82f\", \"passphrase\":"
            + " \"11223344\", \"permission\": \"General,Spot,Futures\"}";
    ModifySubAccountApiReq obj = mapper.readValue(data, ModifySubAccountApiReq.class);
  }

  /** modifySubAccountApi Response Modify sub-account API /api/v1/sub/api-key/update */
  public static void testModifySubAccountApiResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"subName\": \"testapi6\",\n"
            + "        \"apiKey\": \"670621e3a25958000159c82f\",\n"
            + "        \"permission\": \"General,Futures,Spot\"\n"
            + "    }\n"
            + "}";
    RestResponse<ModifySubAccountApiResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<ModifySubAccountApiResp>>() {});
  }

  /** getSubAccountApiList Request Get sub-account API List /api/v1/sub/api-key */
  public static void testGetSubAccountApiListRequest() throws Exception {
    String data = "{\"apiKey\": \"example_string_default_value\", \"subName\": \"testapi6\"}";
    GetSubAccountApiListReq obj = mapper.readValue(data, GetSubAccountApiListReq.class);
  }

  /** getSubAccountApiList Response Get sub-account API List /api/v1/sub/api-key */
  public static void testGetSubAccountApiListResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": [\n"
            + "        {\n"
            + "            \"subName\": \"apiSdkTest\",\n"
            + "            \"remark\": \"sdk_test_integration\",\n"
            + "            \"apiKey\": \"673eab2a955ebf000195d7e4\",\n"
            + "            \"apiVersion\": 3,\n"
            + "            \"permission\": \"General\",\n"
            + "            \"ipWhitelist\": \"10.**.1\",\n"
            + "            \"createdAt\": 1732160298000,\n"
            + "            \"uid\": 215112467,\n"
            + "            \"isMaster\": false\n"
            + "        }\n"
            + "    ]\n"
            + "}";
    RestResponse<GetSubAccountApiListResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetSubAccountApiListResp>>() {});
  }

  /** deleteSubAccountApi Request Delete sub-account API /api/v1/sub/api-key */
  public static void testDeleteSubAccountApiRequest() throws Exception {
    String data =
        "{\"apiKey\": \"670621e3a25958000159c82f\", \"subName\": \"testapi6\", \"passphrase\":"
            + " \"11223344\"}";
    DeleteSubAccountApiReq obj = mapper.readValue(data, DeleteSubAccountApiReq.class);
  }

  /** deleteSubAccountApi Response Delete sub-account API /api/v1/sub/api-key */
  public static void testDeleteSubAccountApiResponse() throws Exception {
    String data =
        "{\"code\":\"200000\",\"data\":{\"subName\":\"testapi6\",\"apiKey\":\"670621e3a25958000159c82f\"}}";
    RestResponse<DeleteSubAccountApiResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<DeleteSubAccountApiResp>>() {});
  }

  /**
   * getSpotSubAccountsSummaryV1 Request Get sub-account List - Summary Info (V1) /api/v1/sub/user
   */
  public static void testGetSpotSubAccountsSummaryV1Request() throws Exception {
    // $this->assertTrue(true);
  }

  /**
   * getSpotSubAccountsSummaryV1 Response Get sub-account List - Summary Info (V1) /api/v1/sub/user
   */
  public static void testGetSpotSubAccountsSummaryV1Response() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": [\n"
            + "        {\n"
            + "            \"userId\": \"63743f07e0c5230001761d08\",\n"
            + "            \"uid\": 169579801,\n"
            + "            \"subName\": \"testapi6\",\n"
            + "            \"type\": 0,\n"
            + "            \"remarks\": \"remarks\",\n"
            + "            \"access\": \"All\"\n"
            + "        },\n"
            + "        {\n"
            + "            \"userId\": \"670538a31037eb000115b076\",\n"
            + "            \"uid\": 225139445,\n"
            + "            \"subName\": \"Name1234567\",\n"
            + "            \"type\": 0,\n"
            + "            \"remarks\": \"TheRemark\",\n"
            + "            \"access\": \"All\"\n"
            + "        }\n"
            + "    ]\n"
            + "}";
    RestResponse<GetSpotSubAccountsSummaryV1Resp> resp =
        mapper.readValue(
            data, new TypeReference<RestResponse<GetSpotSubAccountsSummaryV1Resp>>() {});
  }

  /**
   * getSpotSubAccountListV1 Request Get sub-account List - Spot Balance (V1) /api/v1/sub-accounts
   */
  public static void testGetSpotSubAccountListV1Request() throws Exception {
    // $this->assertTrue(true);
  }

  /**
   * getSpotSubAccountListV1 Response Get sub-account List - Spot Balance (V1) /api/v1/sub-accounts
   */
  public static void testGetSpotSubAccountListV1Response() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": [\n"
            + "        {\n"
            + "            \"subUserId\": \"63743f07e0c5230001761d08\",\n"
            + "            \"subName\": \"testapi6\",\n"
            + "            \"mainAccounts\": [\n"
            + "                {\n"
            + "                    \"currency\": \"USDT\",\n"
            + "                    \"balance\": \"0.01\",\n"
            + "                    \"available\": \"0.01\",\n"
            + "                    \"holds\": \"0\",\n"
            + "                    \"baseCurrency\": \"BTC\",\n"
            + "                    \"baseCurrencyPrice\": \"62489.8\",\n"
            + "                    \"baseAmount\": \"0.00000016\",\n"
            + "                    \"tag\": \"DEFAULT\"\n"
            + "                }\n"
            + "            ],\n"
            + "            \"tradeAccounts\": [\n"
            + "                {\n"
            + "                    \"currency\": \"USDT\",\n"
            + "                    \"balance\": \"0.01\",\n"
            + "                    \"available\": \"0.01\",\n"
            + "                    \"holds\": \"0\",\n"
            + "                    \"baseCurrency\": \"BTC\",\n"
            + "                    \"baseCurrencyPrice\": \"62489.8\",\n"
            + "                    \"baseAmount\": \"0.00000016\",\n"
            + "                    \"tag\": \"DEFAULT\"\n"
            + "                }\n"
            + "            ],\n"
            + "            \"marginAccounts\": [\n"
            + "                {\n"
            + "                    \"currency\": \"USDT\",\n"
            + "                    \"balance\": \"0.01\",\n"
            + "                    \"available\": \"0.01\",\n"
            + "                    \"holds\": \"0\",\n"
            + "                    \"baseCurrency\": \"BTC\",\n"
            + "                    \"baseCurrencyPrice\": \"62489.8\",\n"
            + "                    \"baseAmount\": \"0.00000016\",\n"
            + "                    \"tag\": \"DEFAULT\"\n"
            + "                }\n"
            + "            ],\n"
            + "            \"tradeHFAccounts\": []\n"
            + "        },\n"
            + "        {\n"
            + "            \"subUserId\": \"670538a31037eb000115b076\",\n"
            + "            \"subName\": \"Name1234567\",\n"
            + "            \"mainAccounts\": [],\n"
            + "            \"tradeAccounts\": [],\n"
            + "            \"marginAccounts\": [],\n"
            + "            \"tradeHFAccounts\": []\n"
            + "        },\n"
            + "        {\n"
            + "            \"subUserId\": \"66b0c0905fc1480001c14c36\",\n"
            + "            \"subName\": \"LTkucoin1491\",\n"
            + "            \"mainAccounts\": [],\n"
            + "            \"tradeAccounts\": [],\n"
            + "            \"marginAccounts\": [],\n"
            + "            \"tradeHFAccounts\": []\n"
            + "        }\n"
            + "    ]\n"
            + "}";
    RestResponse<GetSpotSubAccountListV1Resp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetSpotSubAccountListV1Resp>>() {});
  }

  public static void runAllTests() {
    run(SubAccountApiAutoGeneratedTest::testAddSubAccountRequest, "testAddSubAccountRequest");
    run(SubAccountApiAutoGeneratedTest::testAddSubAccountResponse, "testAddSubAccountResponse");
    run(
        SubAccountApiAutoGeneratedTest::testAddSubAccountMarginPermissionRequest,
        "testAddSubAccountMarginPermissionRequest");
    run(
        SubAccountApiAutoGeneratedTest::testAddSubAccountMarginPermissionResponse,
        "testAddSubAccountMarginPermissionResponse");
    run(
        SubAccountApiAutoGeneratedTest::testAddSubAccountFuturesPermissionRequest,
        "testAddSubAccountFuturesPermissionRequest");
    run(
        SubAccountApiAutoGeneratedTest::testAddSubAccountFuturesPermissionResponse,
        "testAddSubAccountFuturesPermissionResponse");
    run(
        SubAccountApiAutoGeneratedTest::testGetSpotSubAccountsSummaryV2Request,
        "testGetSpotSubAccountsSummaryV2Request");
    run(
        SubAccountApiAutoGeneratedTest::testGetSpotSubAccountsSummaryV2Response,
        "testGetSpotSubAccountsSummaryV2Response");
    run(
        SubAccountApiAutoGeneratedTest::testGetSpotSubAccountDetailRequest,
        "testGetSpotSubAccountDetailRequest");
    run(
        SubAccountApiAutoGeneratedTest::testGetSpotSubAccountDetailResponse,
        "testGetSpotSubAccountDetailResponse");
    run(
        SubAccountApiAutoGeneratedTest::testGetSpotSubAccountListV2Request,
        "testGetSpotSubAccountListV2Request");
    run(
        SubAccountApiAutoGeneratedTest::testGetSpotSubAccountListV2Response,
        "testGetSpotSubAccountListV2Response");
    run(
        SubAccountApiAutoGeneratedTest::testGetFuturesSubAccountListV2Request,
        "testGetFuturesSubAccountListV2Request");
    run(
        SubAccountApiAutoGeneratedTest::testGetFuturesSubAccountListV2Response,
        "testGetFuturesSubAccountListV2Response");
    run(SubAccountApiAutoGeneratedTest::testAddSubAccountApiRequest, "testAddSubAccountApiRequest");
    run(
        SubAccountApiAutoGeneratedTest::testAddSubAccountApiResponse,
        "testAddSubAccountApiResponse");
    run(
        SubAccountApiAutoGeneratedTest::testModifySubAccountApiRequest,
        "testModifySubAccountApiRequest");
    run(
        SubAccountApiAutoGeneratedTest::testModifySubAccountApiResponse,
        "testModifySubAccountApiResponse");
    run(
        SubAccountApiAutoGeneratedTest::testGetSubAccountApiListRequest,
        "testGetSubAccountApiListRequest");
    run(
        SubAccountApiAutoGeneratedTest::testGetSubAccountApiListResponse,
        "testGetSubAccountApiListResponse");
    run(
        SubAccountApiAutoGeneratedTest::testDeleteSubAccountApiRequest,
        "testDeleteSubAccountApiRequest");
    run(
        SubAccountApiAutoGeneratedTest::testDeleteSubAccountApiResponse,
        "testDeleteSubAccountApiResponse");
    run(
        SubAccountApiAutoGeneratedTest::testGetSpotSubAccountsSummaryV1Request,
        "testGetSpotSubAccountsSummaryV1Request");
    run(
        SubAccountApiAutoGeneratedTest::testGetSpotSubAccountsSummaryV1Response,
        "testGetSpotSubAccountsSummaryV1Response");
    run(
        SubAccountApiAutoGeneratedTest::testGetSpotSubAccountListV1Request,
        "testGetSpotSubAccountListV1Request");
    run(
        SubAccountApiAutoGeneratedTest::testGetSpotSubAccountListV1Response,
        "testGetSpotSubAccountListV1Response");
  }

  private static void run(TestCase test, String name) {
    System.out.println("Running test: " + name);
    try {
      test.execute();
      System.out.println("PASSED: " + name);
    } catch (Exception e) {
      System.err.println("FAILED: " + name + " - " + e.getMessage());
      e.printStackTrace(System.err);
      failedTests.add(name);
    }
  }

  @FunctionalInterface
  interface TestCase {
    void execute() throws Exception;
  }

  public static void main(String[] args) {
    runAllTests();
    finish();
  }

  public static void finish() {
    if (!failedTests.isEmpty()) {
      System.err.println("\n=== TEST SUMMARY ===");
      System.err.println("Failed tests:");
      for (String name : failedTests) {
        System.err.println(" - " + name);
      }
      System.exit(1);
    } else {
      System.out.println("\nAll tests passed.");
    }
  }
}
