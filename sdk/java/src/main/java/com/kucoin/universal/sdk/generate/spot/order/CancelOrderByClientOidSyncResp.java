// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.spot.order;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Response;
import com.kucoin.universal.sdk.model.RestResponse;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class CancelOrderByClientOidSyncResp
    implements Response<
        CancelOrderByClientOidSyncResp, RestResponse<CancelOrderByClientOidSyncResp>> {
  /** Client Order Id，unique identifier created by the user */
  @JsonProperty("clientOid")
  private String clientOid;

  /** original order size */
  @JsonProperty("originSize")
  private String originSize;

  /** deal size */
  @JsonProperty("dealSize")
  private String dealSize;

  /** remain size */
  @JsonProperty("remainSize")
  private String remainSize;

  /** Cumulative canceled size */
  @JsonProperty("canceledSize")
  private String canceledSize;

  /** Order Status. open：order is active; done：order has been completed */
  @JsonProperty("status")
  private StatusEnum status;

  /** common response */
  @JsonIgnore private RestResponse<CancelOrderByClientOidSyncResp> commonResponse;

  @Override
  public void setCommonResponse(RestResponse<CancelOrderByClientOidSyncResp> response) {
    this.commonResponse = response;
  }

  public enum StatusEnum {
    /** order is active */
    OPEN("open"),
    /** order has been completed */
    DONE("done");

    private final String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
