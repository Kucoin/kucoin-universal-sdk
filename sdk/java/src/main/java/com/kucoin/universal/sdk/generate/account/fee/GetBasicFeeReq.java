// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package com.kucoin.universal.sdk.generate.account.fee;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kucoin.universal.sdk.internal.interfaces.Request;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Builder
@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class GetBasicFeeReq implements Request {
  /** Currency type: 0-crypto currency, 1-fiat currency. Default is 0-crypto currency */
  @JsonProperty("currencyType")
  @Builder.Default
  private CurrencyTypeEnum currencyType = CurrencyTypeEnum._0;

  public enum CurrencyTypeEnum {
    /** cryptocurrency */
    _0(0),
    /** fiat currency */
    _1(1);

    private final Integer value;

    CurrencyTypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CurrencyTypeEnum fromValue(Integer value) {
      for (CurrencyTypeEnum b : CurrencyTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
}
