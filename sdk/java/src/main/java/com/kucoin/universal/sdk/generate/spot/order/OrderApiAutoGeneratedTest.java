package com.kucoin.universal.sdk.generate.spot.order;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.kucoin.universal.sdk.model.RestResponse;
import java.util.ArrayList;
import java.util.List;

class OrderApiAutoGeneratedTest {
  public static ObjectMapper mapper = new ObjectMapper();

  private static final List<String> failedTests = new ArrayList<>();

  private static int totalTest = 0;

  /** addOrder Request Add Order /api/v1/hf/orders */
  public static void testAddOrderRequest() throws Exception {
    String data =
        "{\"type\": \"limit\", \"symbol\": \"BTC-USDT\", \"side\": \"buy\", \"price\": \"50000\","
            + " \"size\": \"0.00001\", \"clientOid\": \"5c52e11203aa677f33e493fb\", \"remark\":"
            + " \"order remarks\"}";
    AddOrderReq obj = mapper.readValue(data, AddOrderReq.class);
  }

  /** addOrder Response Add Order /api/v1/hf/orders */
  public static void testAddOrderResponse() throws Exception {
    String data =
        "{\"code\":\"200000\",\"data\":{\"orderId\":\"670fd33bf9406e0007ab3945\",\"clientOid\":\"5c52e11203aa677f33e493fb\"}}";
    RestResponse<AddOrderResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOrderResp>>() {});
  }

  /** addOrderSync Request Add Order Sync /api/v1/hf/orders/sync */
  public static void testAddOrderSyncRequest() throws Exception {
    String data =
        "{\"type\": \"limit\", \"symbol\": \"BTC-USDT\", \"side\": \"buy\", \"price\": \"50000\","
            + " \"size\": \"0.00001\", \"clientOid\": \"5c52e11203aa677f33e493f\", \"remark\":"
            + " \"order remarks\"}";
    AddOrderSyncReq obj = mapper.readValue(data, AddOrderSyncReq.class);
  }

  /** addOrderSync Response Add Order Sync /api/v1/hf/orders/sync */
  public static void testAddOrderSyncResponse() throws Exception {
    String data =
        "{\"code\":\"200000\",\"data\":{\"orderId\":\"67111a7cb7cbdf000703e1f6\",\"clientOid\":\"5c52e11203aa677f33e493f\",\"orderTime\":1729174140586,\"originSize\":\"0.00001\",\"dealSize\":\"0\",\"remainSize\":\"0.00001\",\"canceledSize\":\"0\",\"status\":\"open\",\"matchTime\":1729174140588}}";
    RestResponse<AddOrderSyncResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOrderSyncResp>>() {});
  }

  /** addOrderTest Request Add Order Test /api/v1/hf/orders/test */
  public static void testAddOrderTestRequest() throws Exception {
    String data =
        "{\"type\": \"limit\", \"symbol\": \"BTC-USDT\", \"side\": \"buy\", \"price\": \"50000\","
            + " \"size\": \"0.00001\", \"clientOid\": \"5c52e11203aa677f33e493f\", \"remark\":"
            + " \"order remarks\"}";
    AddOrderTestReq obj = mapper.readValue(data, AddOrderTestReq.class);
  }

  /** addOrderTest Response Add Order Test /api/v1/hf/orders/test */
  public static void testAddOrderTestResponse() throws Exception {
    String data =
        "{\"code\":\"200000\",\"data\":{\"orderId\":\"670fd33bf9406e0007ab3945\",\"clientOid\":\"5c52e11203aa677f33e493fb\"}}";
    RestResponse<AddOrderTestResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOrderTestResp>>() {});
  }

  /** batchAddOrders Request Batch Add Orders /api/v1/hf/orders/multi */
  public static void testBatchAddOrdersRequest() throws Exception {
    String data =
        "{\"orderList\": [{\"clientOid\": \"client order id 12\", \"symbol\": \"BTC-USDT\","
            + " \"type\": \"limit\", \"side\": \"buy\", \"price\": \"30000\", \"size\":"
            + " \"0.00001\"}, {\"clientOid\": \"client order id 13\", \"symbol\": \"ETH-USDT\","
            + " \"type\": \"limit\", \"side\": \"sell\", \"price\": \"2000\", \"size\":"
            + " \"0.00001\"}]}";
    BatchAddOrdersReq obj = mapper.readValue(data, BatchAddOrdersReq.class);
  }

  /** batchAddOrders Response Batch Add Orders /api/v1/hf/orders/multi */
  public static void testBatchAddOrdersResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": [\n"
            + "        {\n"
            + "            \"orderId\": \"6710d8336afcdb0007319c27\",\n"
            + "            \"clientOid\": \"client order id 12\",\n"
            + "            \"success\": true\n"
            + "        },\n"
            + "        {\n"
            + "            \"success\": false,\n"
            + "            \"failMsg\": \"The order funds should more then 0.1 USDT.\"\n"
            + "        }\n"
            + "    ]\n"
            + "}";
    RestResponse<BatchAddOrdersResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<BatchAddOrdersResp>>() {});
  }

  /** batchAddOrdersSync Request Batch Add Orders Sync /api/v1/hf/orders/multi/sync */
  public static void testBatchAddOrdersSyncRequest() throws Exception {
    String data =
        "{\"orderList\": [{\"clientOid\": \"client order id 13\", \"symbol\": \"BTC-USDT\","
            + " \"type\": \"limit\", \"side\": \"buy\", \"price\": \"30000\", \"size\":"
            + " \"0.00001\"}, {\"clientOid\": \"client order id 14\", \"symbol\": \"ETH-USDT\","
            + " \"type\": \"limit\", \"side\": \"sell\", \"price\": \"2000\", \"size\":"
            + " \"0.00001\"}]}";
    BatchAddOrdersSyncReq obj = mapper.readValue(data, BatchAddOrdersSyncReq.class);
  }

  /** batchAddOrdersSync Response Batch Add Orders Sync /api/v1/hf/orders/multi/sync */
  public static void testBatchAddOrdersSyncResponse() throws Exception {
    String data =
        "{\"code\":\"200000\",\"data\":[{\"orderId\":\"6711195e5584bc0007bd5aef\",\"clientOid\":\"client"
            + " order id"
            + " 13\",\"orderTime\":1729173854299,\"originSize\":\"0.00001\",\"dealSize\":\"0\",\"remainSize\":\"0.00001\",\"canceledSize\":\"0\",\"status\":\"open\",\"matchTime\":1729173854326,\"success\":true},{\"success\":false,\"failMsg\":\"The"
            + " order funds should more then 0.1 USDT.\"}]}";
    RestResponse<BatchAddOrdersSyncResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<BatchAddOrdersSyncResp>>() {});
  }

  /** cancelOrderByOrderId Request Cancel Order By OrderId /api/v1/hf/orders/{orderId} */
  public static void testCancelOrderByOrderIdRequest() throws Exception {
    String data = "{\"orderId\": \"671124f9365ccb00073debd4\", \"symbol\": \"BTC-USDT\"}";
    CancelOrderByOrderIdReq obj = mapper.readValue(data, CancelOrderByOrderIdReq.class);
  }

  /** cancelOrderByOrderId Response Cancel Order By OrderId /api/v1/hf/orders/{orderId} */
  public static void testCancelOrderByOrderIdResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"orderId\": \"671124f9365ccb00073debd4\"\n"
            + "    }\n"
            + "}";
    RestResponse<CancelOrderByOrderIdResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelOrderByOrderIdResp>>() {});
  }

  /**
   * cancelOrderByOrderIdSync Request Cancel Order By OrderId Sync /api/v1/hf/orders/sync/{orderId}
   */
  public static void testCancelOrderByOrderIdSyncRequest() throws Exception {
    String data = "{\"symbol\": \"BTC-USDT\", \"orderId\": \"671128ee365ccb0007534d45\"}";
    CancelOrderByOrderIdSyncReq obj = mapper.readValue(data, CancelOrderByOrderIdSyncReq.class);
  }

  /**
   * cancelOrderByOrderIdSync Response Cancel Order By OrderId Sync /api/v1/hf/orders/sync/{orderId}
   */
  public static void testCancelOrderByOrderIdSyncResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"orderId\": \"671128ee365ccb0007534d45\",\n"
            + "        \"originSize\": \"0.00001\",\n"
            + "        \"dealSize\": \"0\",\n"
            + "        \"remainSize\": \"0\",\n"
            + "        \"canceledSize\": \"0.00001\",\n"
            + "        \"status\": \"done\"\n"
            + "    }\n"
            + "}";
    RestResponse<CancelOrderByOrderIdSyncResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelOrderByOrderIdSyncResp>>() {});
  }

  /**
   * cancelOrderByClientOid Request Cancel Order By ClientOid
   * /api/v1/hf/orders/client-order/{clientOid}
   */
  public static void testCancelOrderByClientOidRequest() throws Exception {
    String data = "{\"clientOid\": \"5c52e11203aa677f33e493fb\", \"symbol\": \"BTC-USDT\"}";
    CancelOrderByClientOidReq obj = mapper.readValue(data, CancelOrderByClientOidReq.class);
  }

  /**
   * cancelOrderByClientOid Response Cancel Order By ClientOid
   * /api/v1/hf/orders/client-order/{clientOid}
   */
  public static void testCancelOrderByClientOidResponse() throws Exception {
    String data = "{\"code\":\"200000\",\"data\":{\"clientOid\":\"5c52e11203aa677f33e493fb\"}}";
    RestResponse<CancelOrderByClientOidResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelOrderByClientOidResp>>() {});
  }

  /**
   * cancelOrderByClientOidSync Request Cancel Order By ClientOid Sync
   * /api/v1/hf/orders/sync/client-order/{clientOid}
   */
  public static void testCancelOrderByClientOidSyncRequest() throws Exception {
    String data = "{\"symbol\": \"BTC-USDT\", \"clientOid\": \"5c52e11203aa677f33e493fb\"}";
    CancelOrderByClientOidSyncReq obj = mapper.readValue(data, CancelOrderByClientOidSyncReq.class);
  }

  /**
   * cancelOrderByClientOidSync Response Cancel Order By ClientOid Sync
   * /api/v1/hf/orders/sync/client-order/{clientOid}
   */
  public static void testCancelOrderByClientOidSyncResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"clientOid\": \"5c52e11203aa677f33e493fb\",\n"
            + "        \"originSize\": \"0.00001\",\n"
            + "        \"dealSize\": \"0\",\n"
            + "        \"remainSize\": \"0\",\n"
            + "        \"canceledSize\": \"0.00001\",\n"
            + "        \"status\": \"done\"\n"
            + "    }\n"
            + "}";
    RestResponse<CancelOrderByClientOidSyncResp> resp =
        mapper.readValue(
            data, new TypeReference<RestResponse<CancelOrderByClientOidSyncResp>>() {});
  }

  /** cancelPartialOrder Request Cancel Partial Order /api/v1/hf/orders/cancel/{orderId} */
  public static void testCancelPartialOrderRequest() throws Exception {
    String data =
        "{\"orderId\": \"6711f73c1ef16c000717bb31\", \"symbol\": \"BTC-USDT\", \"cancelSize\":"
            + " \"0.00001\"}";
    CancelPartialOrderReq obj = mapper.readValue(data, CancelPartialOrderReq.class);
  }

  /** cancelPartialOrder Response Cancel Partial Order /api/v1/hf/orders/cancel/{orderId} */
  public static void testCancelPartialOrderResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"orderId\": \"6711f73c1ef16c000717bb31\",\n"
            + "        \"cancelSize\": \"0.00001\"\n"
            + "    }\n"
            + "}";
    RestResponse<CancelPartialOrderResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelPartialOrderResp>>() {});
  }

  /** cancelAllOrdersBySymbol Request Cancel All Orders By Symbol /api/v1/hf/orders */
  public static void testCancelAllOrdersBySymbolRequest() throws Exception {
    String data = "{\"symbol\": \"BTC-USDT\"}";
    CancelAllOrdersBySymbolReq obj = mapper.readValue(data, CancelAllOrdersBySymbolReq.class);
  }

  /** cancelAllOrdersBySymbol Response Cancel All Orders By Symbol /api/v1/hf/orders */
  public static void testCancelAllOrdersBySymbolResponse() throws Exception {
    String data = "{\"code\":\"200000\",\"data\":\"success\"}";
    RestResponse<CancelAllOrdersBySymbolResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelAllOrdersBySymbolResp>>() {});
  }

  /** cancelAllOrders Request Cancel All Orders /api/v1/hf/orders/cancelAll */
  public static void testCancelAllOrdersRequest() throws Exception {
    // pass
  }

  /** cancelAllOrders Response Cancel All Orders /api/v1/hf/orders/cancelAll */
  public static void testCancelAllOrdersResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"succeedSymbols\": [\n"
            + "            \"ETH-USDT\",\n"
            + "            \"BTC-USDT\"\n"
            + "        ],\n"
            + "        \"failedSymbols\": []\n"
            + "    }\n"
            + "}";
    RestResponse<CancelAllOrdersResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelAllOrdersResp>>() {});
  }

  /** modifyOrder Request Modify Order /api/v1/hf/orders/alter */
  public static void testModifyOrderRequest() throws Exception {
    String data =
        "{\"symbol\": \"BTC-USDT\", \"orderId\": \"670fd33bf9406e0007ab3945\", \"newPrice\":"
            + " \"30000\", \"newSize\": \"0.0001\"}";
    ModifyOrderReq obj = mapper.readValue(data, ModifyOrderReq.class);
  }

  /** modifyOrder Response Modify Order /api/v1/hf/orders/alter */
  public static void testModifyOrderResponse() throws Exception {
    String data =
        "{\"code\":\"200000\",\"data\":{\"newOrderId\":\"67112258f9406e0007408827\",\"clientOid\":\"client"
            + " order id 12\"}}";
    RestResponse<ModifyOrderResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<ModifyOrderResp>>() {});
  }

  /** getOrderByOrderId Request Get Order By OrderId /api/v1/hf/orders/{orderId} */
  public static void testGetOrderByOrderIdRequest() throws Exception {
    String data = "{\"symbol\": \"BTC-USDT\", \"orderId\": \"6717422bd51c29000775ea03\"}";
    GetOrderByOrderIdReq obj = mapper.readValue(data, GetOrderByOrderIdReq.class);
  }

  /** getOrderByOrderId Response Get Order By OrderId /api/v1/hf/orders/{orderId} */
  public static void testGetOrderByOrderIdResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"id\": \"6717422bd51c29000775ea03\",\n"
            + "        \"clientOid\": \"5c52e11203aa677f33e493fb\",\n"
            + "        \"symbol\": \"BTC-USDT\",\n"
            + "        \"opType\": \"DEAL\",\n"
            + "        \"type\": \"limit\",\n"
            + "        \"side\": \"buy\",\n"
            + "        \"price\": \"70000\",\n"
            + "        \"size\": \"0.00001\",\n"
            + "        \"funds\": \"0.7\",\n"
            + "        \"dealSize\": \"0.00001\",\n"
            + "        \"dealFunds\": \"0.677176\",\n"
            + "        \"remainSize\": \"0\",\n"
            + "        \"remainFunds\": \"0.022824\",\n"
            + "        \"cancelledSize\": \"0\",\n"
            + "        \"cancelledFunds\": \"0\",\n"
            + "        \"fee\": \"0.000677176\",\n"
            + "        \"feeCurrency\": \"USDT\",\n"
            + "        \"stp\": null,\n"
            + "        \"timeInForce\": \"GTC\",\n"
            + "        \"postOnly\": false,\n"
            + "        \"hidden\": false,\n"
            + "        \"iceberg\": false,\n"
            + "        \"visibleSize\": \"0\",\n"
            + "        \"cancelAfter\": 0,\n"
            + "        \"channel\": \"API\",\n"
            + "        \"remark\": \"order remarks\",\n"
            + "        \"tags\": null,\n"
            + "        \"cancelExist\": false,\n"
            + "        \"tradeType\": \"TRADE\",\n"
            + "        \"inOrderBook\": false,\n"
            + "        \"active\": false,\n"
            + "        \"tax\": \"0\",\n"
            + "        \"createdAt\": 1729577515444,\n"
            + "        \"lastUpdatedAt\": 1729577515481\n"
            + "    }\n"
            + "}";
    RestResponse<GetOrderByOrderIdResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOrderByOrderIdResp>>() {});
  }

  /**
   * getOrderByClientOid Request Get Order By ClientOid /api/v1/hf/orders/client-order/{clientOid}
   */
  public static void testGetOrderByClientOidRequest() throws Exception {
    String data = "{\"symbol\": \"BTC-USDT\", \"clientOid\": \"5c52e11203aa677f33e493fb\"}";
    GetOrderByClientOidReq obj = mapper.readValue(data, GetOrderByClientOidReq.class);
  }

  /**
   * getOrderByClientOid Response Get Order By ClientOid /api/v1/hf/orders/client-order/{clientOid}
   */
  public static void testGetOrderByClientOidResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"id\": \"6717422bd51c29000775ea03\",\n"
            + "        \"clientOid\": \"5c52e11203aa677f33e493fb\",\n"
            + "        \"symbol\": \"BTC-USDT\",\n"
            + "        \"opType\": \"DEAL\",\n"
            + "        \"type\": \"limit\",\n"
            + "        \"side\": \"buy\",\n"
            + "        \"price\": \"70000\",\n"
            + "        \"size\": \"0.00001\",\n"
            + "        \"funds\": \"0.7\",\n"
            + "        \"dealSize\": \"0.00001\",\n"
            + "        \"dealFunds\": \"0.677176\",\n"
            + "        \"remainSize\": \"0\",\n"
            + "        \"remainFunds\": \"0.022824\",\n"
            + "        \"cancelledSize\": \"0\",\n"
            + "        \"cancelledFunds\": \"0\",\n"
            + "        \"fee\": \"0.000677176\",\n"
            + "        \"feeCurrency\": \"USDT\",\n"
            + "        \"stp\": null,\n"
            + "        \"timeInForce\": \"GTC\",\n"
            + "        \"postOnly\": false,\n"
            + "        \"hidden\": false,\n"
            + "        \"iceberg\": false,\n"
            + "        \"visibleSize\": \"0\",\n"
            + "        \"cancelAfter\": 0,\n"
            + "        \"channel\": \"API\",\n"
            + "        \"remark\": \"order remarks\",\n"
            + "        \"tags\": null,\n"
            + "        \"cancelExist\": false,\n"
            + "        \"tradeType\": \"TRADE\",\n"
            + "        \"inOrderBook\": false,\n"
            + "        \"active\": false,\n"
            + "        \"tax\": \"0\",\n"
            + "        \"createdAt\": 1729577515444,\n"
            + "        \"lastUpdatedAt\": 1729577515481\n"
            + "    }\n"
            + "}";
    RestResponse<GetOrderByClientOidResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOrderByClientOidResp>>() {});
  }

  /**
   * getSymbolsWithOpenOrder Request Get Symbols With Open Order /api/v1/hf/orders/active/symbols
   */
  public static void testGetSymbolsWithOpenOrderRequest() throws Exception {
    // pass
  }

  /**
   * getSymbolsWithOpenOrder Response Get Symbols With Open Order /api/v1/hf/orders/active/symbols
   */
  public static void testGetSymbolsWithOpenOrderResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"symbols\": [\n"
            + "            \"ETH-USDT\",\n"
            + "            \"BTC-USDT\"\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<GetSymbolsWithOpenOrderResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetSymbolsWithOpenOrderResp>>() {});
  }

  /** getOpenOrders Request Get Open Orders /api/v1/hf/orders/active */
  public static void testGetOpenOrdersRequest() throws Exception {
    String data = "{\"symbol\": \"BTC-USDT\"}";
    GetOpenOrdersReq obj = mapper.readValue(data, GetOpenOrdersReq.class);
  }

  /** getOpenOrders Response Get Open Orders /api/v1/hf/orders/active */
  public static void testGetOpenOrdersResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": [\n"
            + "        {\n"
            + "            \"id\": \"67120bbef094e200070976f6\",\n"
            + "            \"clientOid\": \"5c52e11203aa677f33e493fb\",\n"
            + "            \"symbol\": \"BTC-USDT\",\n"
            + "            \"opType\": \"DEAL\",\n"
            + "            \"type\": \"limit\",\n"
            + "            \"side\": \"buy\",\n"
            + "            \"price\": \"50000\",\n"
            + "            \"size\": \"0.00001\",\n"
            + "            \"funds\": \"0.5\",\n"
            + "            \"dealSize\": \"0\",\n"
            + "            \"dealFunds\": \"0\",\n"
            + "            \"fee\": \"0\",\n"
            + "            \"feeCurrency\": \"USDT\",\n"
            + "            \"stp\": null,\n"
            + "            \"timeInForce\": \"GTC\",\n"
            + "            \"postOnly\": false,\n"
            + "            \"hidden\": false,\n"
            + "            \"iceberg\": false,\n"
            + "            \"visibleSize\": \"0\",\n"
            + "            \"cancelAfter\": 0,\n"
            + "            \"channel\": \"API\",\n"
            + "            \"remark\": \"order remarks\",\n"
            + "            \"tags\": \"order tags\",\n"
            + "            \"cancelExist\": false,\n"
            + "            \"tradeType\": \"TRADE\",\n"
            + "            \"inOrderBook\": true,\n"
            + "            \"cancelledSize\": \"0\",\n"
            + "            \"cancelledFunds\": \"0\",\n"
            + "            \"remainSize\": \"0.00001\",\n"
            + "            \"remainFunds\": \"0.5\",\n"
            + "            \"tax\": \"0\",\n"
            + "            \"active\": true,\n"
            + "            \"createdAt\": 1729235902748,\n"
            + "            \"lastUpdatedAt\": 1729235909862\n"
            + "        }\n"
            + "    ]\n"
            + "}";
    RestResponse<GetOpenOrdersResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOpenOrdersResp>>() {});
  }

  /** getOpenOrdersByPage Request Get Open Orders By Page /api/v1/hf/orders/active/page */
  public static void testGetOpenOrdersByPageRequest() throws Exception {
    String data = "{\"symbol\": \"BTC-USDT\", \"pageNum\": 1, \"pageSize\": 20}";
    GetOpenOrdersByPageReq obj = mapper.readValue(data, GetOpenOrdersByPageReq.class);
  }

  /** getOpenOrdersByPage Response Get Open Orders By Page /api/v1/hf/orders/active/page */
  public static void testGetOpenOrdersByPageResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"currentPage\": 1,\n"
            + "        \"pageSize\": 20,\n"
            + "        \"totalNum\": 1,\n"
            + "        \"totalPage\": 1,\n"
            + "        \"items\": [\n"
            + "            {\n"
            + "                \"id\": \"67c1437ea5226600071cc080\",\n"
            + "                \"symbol\": \"BTC-USDT\",\n"
            + "                \"opType\": \"DEAL\",\n"
            + "                \"type\": \"limit\",\n"
            + "                \"side\": \"buy\",\n"
            + "                \"price\": \"50000\",\n"
            + "                \"size\": \"0.00001\",\n"
            + "                \"funds\": \"0.5\",\n"
            + "                \"dealSize\": \"0\",\n"
            + "                \"dealFunds\": \"0\",\n"
            + "                \"fee\": \"0\",\n"
            + "                \"feeCurrency\": \"USDT\",\n"
            + "                \"stp\": null,\n"
            + "                \"timeInForce\": \"GTC\",\n"
            + "                \"postOnly\": false,\n"
            + "                \"hidden\": false,\n"
            + "                \"iceberg\": false,\n"
            + "                \"visibleSize\": \"0\",\n"
            + "                \"cancelAfter\": 0,\n"
            + "                \"channel\": \"API\",\n"
            + "                \"clientOid\": \"5c52e11203aa677f33e493fb\",\n"
            + "                \"remark\": \"order remarks\",\n"
            + "                \"tags\": null,\n"
            + "                \"cancelExist\": false,\n"
            + "                \"createdAt\": 1740718974367,\n"
            + "                \"lastUpdatedAt\": 1741867658590,\n"
            + "                \"tradeType\": \"TRADE\",\n"
            + "                \"inOrderBook\": true,\n"
            + "                \"cancelledSize\": \"0\",\n"
            + "                \"cancelledFunds\": \"0\",\n"
            + "                \"remainSize\": \"0.00001\",\n"
            + "                \"remainFunds\": \"0.5\",\n"
            + "                \"tax\": \"0\",\n"
            + "                \"active\": true\n"
            + "            }\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<GetOpenOrdersByPageResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOpenOrdersByPageResp>>() {});
  }

  /** getClosedOrders Request Get Closed Orders /api/v1/hf/orders/done */
  public static void testGetClosedOrdersRequest() throws Exception {
    String data =
        "{\"symbol\": \"BTC-USDT\", \"side\": \"buy\", \"type\": \"limit\", \"lastId\":"
            + " 254062248624417, \"limit\": 20, \"startAt\": 1728663338000, \"endAt\":"
            + " 1728692138000}";
    GetClosedOrdersReq obj = mapper.readValue(data, GetClosedOrdersReq.class);
  }

  /** getClosedOrders Response Get Closed Orders /api/v1/hf/orders/done */
  public static void testGetClosedOrdersResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"lastId\": 19814995255305,\n"
            + "        \"items\": [\n"
            + "            {\n"
            + "                \"id\": \"6717422bd51c29000775ea03\",\n"
            + "                \"clientOid\": \"5c52e11203aa677f33e493fb\",\n"
            + "                \"symbol\": \"BTC-USDT\",\n"
            + "                \"opType\": \"DEAL\",\n"
            + "                \"type\": \"limit\",\n"
            + "                \"side\": \"buy\",\n"
            + "                \"price\": \"70000\",\n"
            + "                \"size\": \"0.00001\",\n"
            + "                \"funds\": \"0.7\",\n"
            + "                \"dealSize\": \"0.00001\",\n"
            + "                \"dealFunds\": \"0.677176\",\n"
            + "                \"remainSize\": \"0\",\n"
            + "                \"remainFunds\": \"0.022824\",\n"
            + "                \"cancelledSize\": \"0\",\n"
            + "                \"cancelledFunds\": \"0\",\n"
            + "                \"fee\": \"0.000677176\",\n"
            + "                \"feeCurrency\": \"USDT\",\n"
            + "                \"stp\": null,\n"
            + "                \"timeInForce\": \"GTC\",\n"
            + "                \"postOnly\": false,\n"
            + "                \"hidden\": false,\n"
            + "                \"iceberg\": false,\n"
            + "                \"visibleSize\": \"0\",\n"
            + "                \"cancelAfter\": 0,\n"
            + "                \"channel\": \"API\",\n"
            + "                \"remark\": \"order remarks\",\n"
            + "                \"tags\": null,\n"
            + "                \"cancelExist\": false,\n"
            + "                \"tradeType\": \"TRADE\",\n"
            + "                \"inOrderBook\": false,\n"
            + "                \"active\": false,\n"
            + "                \"tax\": \"0\",\n"
            + "                \"createdAt\": 1729577515444,\n"
            + "                \"lastUpdatedAt\": 1729577515481\n"
            + "            }\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<GetClosedOrdersResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetClosedOrdersResp>>() {});
  }

  /** getTradeHistory Request Get Trade History /api/v1/hf/fills */
  public static void testGetTradeHistoryRequest() throws Exception {
    String data =
        "{\"symbol\": \"BTC-USDT\", \"orderId\": \"example_string_default_value\", \"side\":"
            + " \"buy\", \"type\": \"limit\", \"lastId\": 254062248624417, \"limit\": 100,"
            + " \"startAt\": 1728663338000, \"endAt\": 1728692138000}";
    GetTradeHistoryReq obj = mapper.readValue(data, GetTradeHistoryReq.class);
  }

  /** getTradeHistory Response Get Trade History /api/v1/hf/fills */
  public static void testGetTradeHistoryResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"items\": [\n"
            + "            {\n"
            + "                \"id\": 19814995255305,\n"
            + "                \"orderId\": \"6717422bd51c29000775ea03\",\n"
            + "                \"counterOrderId\": \"67174228135f9e000709da8c\",\n"
            + "                \"tradeId\": 11029373945659392,\n"
            + "                \"symbol\": \"BTC-USDT\",\n"
            + "                \"side\": \"buy\",\n"
            + "                \"liquidity\": \"taker\",\n"
            + "                \"type\": \"limit\",\n"
            + "                \"forceTaker\": false,\n"
            + "                \"price\": \"67717.6\",\n"
            + "                \"size\": \"0.00001\",\n"
            + "                \"funds\": \"0.677176\",\n"
            + "                \"fee\": \"0.000677176\",\n"
            + "                \"feeRate\": \"0.001\",\n"
            + "                \"feeCurrency\": \"USDT\",\n"
            + "                \"stop\": \"\",\n"
            + "                \"tradeType\": \"TRADE\",\n"
            + "                \"taxRate\": \"0\",\n"
            + "                \"tax\": \"0\",\n"
            + "                \"createdAt\": 1729577515473\n"
            + "            }\n"
            + "        ],\n"
            + "        \"lastId\": 19814995255305\n"
            + "    }\n"
            + "}";
    RestResponse<GetTradeHistoryResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetTradeHistoryResp>>() {});
  }

  /** getDCP Request Get DCP /api/v1/hf/orders/dead-cancel-all/query */
  public static void testGetDCPRequest() throws Exception {
    // pass
  }

  /** getDCP Response Get DCP /api/v1/hf/orders/dead-cancel-all/query */
  public static void testGetDCPResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"timeout\": 5,\n"
            + "        \"symbols\": \"BTC-USDT,ETH-USDT\",\n"
            + "        \"currentTime\": 1729241305,\n"
            + "        \"triggerTime\": 1729241308\n"
            + "    }\n"
            + "}";
    RestResponse<GetDCPResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetDCPResp>>() {});
  }

  /** setDCP Request Set DCP /api/v1/hf/orders/dead-cancel-all */
  public static void testSetDCPRequest() throws Exception {
    String data = "{\"timeout\": 5, \"symbols\": \"BTC-USDT,ETH-USDT\"}";
    SetDCPReq obj = mapper.readValue(data, SetDCPReq.class);
  }

  /** setDCP Response Set DCP /api/v1/hf/orders/dead-cancel-all */
  public static void testSetDCPResponse() throws Exception {
    String data =
        "{\"code\":\"200000\",\"data\":{\"currentTime\":1729656588,\"triggerTime\":1729656593}}";
    RestResponse<SetDCPResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<SetDCPResp>>() {});
  }

  /** addStopOrder Request Add Stop Order /api/v1/stop-order */
  public static void testAddStopOrderRequest() throws Exception {
    String data =
        "{\"type\": \"limit\", \"symbol\": \"BTC-USDT\", \"side\": \"buy\", \"price\": \"50000\","
            + " \"stopPrice\": \"50000\", \"size\": \"0.00001\", \"clientOid\":"
            + " \"5c52e11203aa677f33e493fb\", \"remark\": \"order remarks\"}";
    AddStopOrderReq obj = mapper.readValue(data, AddStopOrderReq.class);
  }

  /** addStopOrder Response Add Stop Order /api/v1/stop-order */
  public static void testAddStopOrderResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"orderId\": \"670fd33bf9406e0007ab3945\"\n"
            + "    }\n"
            + "}";
    RestResponse<AddStopOrderResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddStopOrderResp>>() {});
  }

  /**
   * cancelStopOrderByClientOid Request Cancel Stop Order By ClientOid
   * /api/v1/stop-order/cancelOrderByClientOid
   */
  public static void testCancelStopOrderByClientOidRequest() throws Exception {
    String data = "{\"symbol\": \"BTC-USDT\", \"clientOid\": \"689ff597f4414061aa819cc414836abd\"}";
    CancelStopOrderByClientOidReq obj = mapper.readValue(data, CancelStopOrderByClientOidReq.class);
  }

  /**
   * cancelStopOrderByClientOid Response Cancel Stop Order By ClientOid
   * /api/v1/stop-order/cancelOrderByClientOid
   */
  public static void testCancelStopOrderByClientOidResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"cancelledOrderId\": \"vs8hoo8ksc8mario0035a74n\",\n"
            + "        \"clientOid\": \"689ff597f4414061aa819cc414836abd\"\n"
            + "    }\n"
            + "}";
    RestResponse<CancelStopOrderByClientOidResp> resp =
        mapper.readValue(
            data, new TypeReference<RestResponse<CancelStopOrderByClientOidResp>>() {});
  }

  /** cancelStopOrderByOrderId Request Cancel Stop Order By OrderId /api/v1/stop-order/{orderId} */
  public static void testCancelStopOrderByOrderIdRequest() throws Exception {
    String data = "{\"orderId\": \"671124f9365ccb00073debd4\"}";
    CancelStopOrderByOrderIdReq obj = mapper.readValue(data, CancelStopOrderByOrderIdReq.class);
  }

  /** cancelStopOrderByOrderId Response Cancel Stop Order By OrderId /api/v1/stop-order/{orderId} */
  public static void testCancelStopOrderByOrderIdResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"cancelledOrderIds\": [\n"
            + "            \"671124f9365ccb00073debd4\"\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<CancelStopOrderByOrderIdResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelStopOrderByOrderIdResp>>() {});
  }

  /** batchCancelStopOrder Request Batch Cancel Stop Orders /api/v1/stop-order/cancel */
  public static void testBatchCancelStopOrderRequest() throws Exception {
    String data =
        "{\"symbol\": \"example_string_default_value\", \"tradeType\":"
            + " \"example_string_default_value\", \"orderIds\": \"example_string_default_value\"}";
    BatchCancelStopOrderReq obj = mapper.readValue(data, BatchCancelStopOrderReq.class);
  }

  /** batchCancelStopOrder Response Batch Cancel Stop Orders /api/v1/stop-order/cancel */
  public static void testBatchCancelStopOrderResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"cancelledOrderIds\": [\n"
            + "            \"671124f9365ccb00073debd4\"\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<BatchCancelStopOrderResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<BatchCancelStopOrderResp>>() {});
  }

  /** getStopOrdersList Request Get Stop Orders List /api/v1/stop-order */
  public static void testGetStopOrdersListRequest() throws Exception {
    String data =
        "{\"symbol\": \"example_string_default_value\", \"side\": \"example_string_default_value\","
            + " \"type\": \"limit\", \"tradeType\": \"example_string_default_value\", \"startAt\":"
            + " 123456, \"endAt\": 123456, \"currentPage\": 1, \"orderIds\":"
            + " \"example_string_default_value\", \"pageSize\": 50, \"stop\":"
            + " \"example_string_default_value\"}";
    GetStopOrdersListReq obj = mapper.readValue(data, GetStopOrdersListReq.class);
  }

  /** getStopOrdersList Response Get Stop Orders List /api/v1/stop-order */
  public static void testGetStopOrdersListResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"currentPage\": 1,\n"
            + "        \"pageSize\": 50,\n"
            + "        \"totalNum\": 2,\n"
            + "        \"totalPage\": 1,\n"
            + "        \"items\": [\n"
            + "            {\n"
            + "                \"id\": \"vs93gptvr9t2fsql003l8k5p\",\n"
            + "                \"symbol\": \"BTC-USDT\",\n"
            + "                \"userId\": \"633559791e1cbc0001f319bc\",\n"
            + "                \"status\": \"NEW\",\n"
            + "                \"type\": \"limit\",\n"
            + "                \"side\": \"buy\",\n"
            + "                \"price\": \"50000.00000000000000000000\",\n"
            + "                \"size\": \"0.00001000000000000000\",\n"
            + "                \"funds\": null,\n"
            + "                \"stp\": null,\n"
            + "                \"timeInForce\": \"GTC\",\n"
            + "                \"cancelAfter\": -1,\n"
            + "                \"postOnly\": false,\n"
            + "                \"hidden\": false,\n"
            + "                \"iceberg\": false,\n"
            + "                \"visibleSize\": null,\n"
            + "                \"channel\": \"API\",\n"
            + "                \"clientOid\": \"5c52e11203aa677f222233e493fb\",\n"
            + "                \"remark\": \"order remarks\",\n"
            + "                \"tags\": null,\n"
            + "                \"relatedNo\": null,\n"
            + "                \"orderTime\": 1740626554883000024,\n"
            + "                \"domainId\": \"kucoin\",\n"
            + "                \"tradeSource\": \"USER\",\n"
            + "                \"tradeType\": \"TRADE\",\n"
            + "                \"feeCurrency\": \"USDT\",\n"
            + "                \"takerFeeRate\": \"0.00100000000000000000\",\n"
            + "                \"makerFeeRate\": \"0.00100000000000000000\",\n"
            + "                \"createdAt\": 1740626554884,\n"
            + "                \"stop\": \"loss\",\n"
            + "                \"stopTriggerTime\": null,\n"
            + "                \"stopPrice\": \"60000.00000000000000000000\",\n"
            + "                \"limitPrice\": null,\n"
            + "                \"pop\": null,\n"
            + "                \"activateCondition\": null\n"
            + "            }\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<GetStopOrdersListResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetStopOrdersListResp>>() {});
  }

  /** getStopOrderByOrderId Request Get Stop Order By OrderId /api/v1/stop-order/{orderId} */
  public static void testGetStopOrderByOrderIdRequest() throws Exception {
    String data = "{\"orderId\": \"example_string_default_value\"}";
    GetStopOrderByOrderIdReq obj = mapper.readValue(data, GetStopOrderByOrderIdReq.class);
  }

  /** getStopOrderByOrderId Response Get Stop Order By OrderId /api/v1/stop-order/{orderId} */
  public static void testGetStopOrderByOrderIdResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"id\": \"vs8hoo8q2ceshiue003b67c0\",\n"
            + "        \"symbol\": \"KCS-USDT\",\n"
            + "        \"userId\": \"60fe4956c43cbc0006562c2c\",\n"
            + "        \"status\": \"NEW\",\n"
            + "        \"type\": \"limit\",\n"
            + "        \"side\": \"buy\",\n"
            + "        \"price\": \"0.01000000000000000000\",\n"
            + "        \"size\": \"0.01000000000000000000\",\n"
            + "        \"funds\": null,\n"
            + "        \"stp\": null,\n"
            + "        \"timeInForce\": \"GTC\",\n"
            + "        \"cancelAfter\": -1,\n"
            + "        \"postOnly\": false,\n"
            + "        \"hidden\": false,\n"
            + "        \"iceberg\": false,\n"
            + "        \"visibleSize\": null,\n"
            + "        \"channel\": \"API\",\n"
            + "        \"clientOid\": \"40e0eb9efe6311eb8e58acde48001122\",\n"
            + "        \"remark\": null,\n"
            + "        \"tags\": null,\n"
            + "        \"orderTime\": 1629098781127530200,\n"
            + "        \"domainId\": \"kucoin\",\n"
            + "        \"tradeSource\": \"USER\",\n"
            + "        \"tradeType\": \"TRADE\",\n"
            + "        \"feeCurrency\": \"USDT\",\n"
            + "        \"takerFeeRate\": \"0.00200000000000000000\",\n"
            + "        \"makerFeeRate\": \"0.00200000000000000000\",\n"
            + "        \"createdAt\": 1629098781128,\n"
            + "        \"stop\": \"loss\",\n"
            + "        \"stopTriggerTime\": null,\n"
            + "        \"stopPrice\": \"10.00000000000000000000\"\n"
            + "    }\n"
            + "}";
    RestResponse<GetStopOrderByOrderIdResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetStopOrderByOrderIdResp>>() {});
  }

  /**
   * getStopOrderByClientOid Request Get Stop Order By ClientOid
   * /api/v1/stop-order/queryOrderByClientOid
   */
  public static void testGetStopOrderByClientOidRequest() throws Exception {
    String data =
        "{\"clientOid\": \"example_string_default_value\", \"symbol\":"
            + " \"example_string_default_value\"}";
    GetStopOrderByClientOidReq obj = mapper.readValue(data, GetStopOrderByClientOidReq.class);
  }

  /**
   * getStopOrderByClientOid Response Get Stop Order By ClientOid
   * /api/v1/stop-order/queryOrderByClientOid
   */
  public static void testGetStopOrderByClientOidResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": [\n"
            + "        {\n"
            + "            \"id\": \"vs8hoo8os561f5np0032vngj\",\n"
            + "            \"symbol\": \"KCS-USDT\",\n"
            + "            \"userId\": \"60fe4956c43cbc0006562c2c\",\n"
            + "            \"status\": \"NEW\",\n"
            + "            \"type\": \"limit\",\n"
            + "            \"side\": \"buy\",\n"
            + "            \"price\": \"0.01000000000000000000\",\n"
            + "            \"size\": \"0.01000000000000000000\",\n"
            + "            \"funds\": null,\n"
            + "            \"stp\": null,\n"
            + "            \"timeInForce\": \"GTC\",\n"
            + "            \"cancelAfter\": -1,\n"
            + "            \"postOnly\": false,\n"
            + "            \"hidden\": false,\n"
            + "            \"iceberg\": false,\n"
            + "            \"visibleSize\": null,\n"
            + "            \"channel\": \"API\",\n"
            + "            \"clientOid\": \"2b700942b5db41cebe578cff48960e09\",\n"
            + "            \"remark\": null,\n"
            + "            \"tags\": null,\n"
            + "            \"orderTime\": 1629020492834532600,\n"
            + "            \"domainId\": \"kucoin\",\n"
            + "            \"tradeSource\": \"USER\",\n"
            + "            \"tradeType\": \"TRADE\",\n"
            + "            \"feeCurrency\": \"USDT\",\n"
            + "            \"takerFeeRate\": \"0.00200000000000000000\",\n"
            + "            \"makerFeeRate\": \"0.00200000000000000000\",\n"
            + "            \"createdAt\": 1629020492837,\n"
            + "            \"stop\": \"loss\",\n"
            + "            \"stopTriggerTime\": null,\n"
            + "            \"stopPrice\": \"1.00000000000000000000\"\n"
            + "        }\n"
            + "    ]\n"
            + "}";
    RestResponse<GetStopOrderByClientOidResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetStopOrderByClientOidResp>>() {});
  }

  /** addOcoOrder Request Add OCO Order /api/v3/oco/order */
  public static void testAddOcoOrderRequest() throws Exception {
    String data =
        "{\"symbol\": \"BTC-USDT\", \"side\": \"buy\", \"price\": \"94000\", \"size\": \"0.1\","
            + " \"clientOid\": \"5c52e11203aa67f1e493fb\", \"stopPrice\": \"98000\","
            + " \"limitPrice\": \"96000\", \"remark\": \"this is remark\", \"tradeType\":"
            + " \"TRADE\"}";
    AddOcoOrderReq obj = mapper.readValue(data, AddOcoOrderReq.class);
  }

  /** addOcoOrder Response Add OCO Order /api/v3/oco/order */
  public static void testAddOcoOrderResponse() throws Exception {
    String data = "{\"code\":\"200000\",\"data\":{\"orderId\":\"674c316e688dea0007c7b986\"}}";
    RestResponse<AddOcoOrderResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOcoOrderResp>>() {});
  }

  /** cancelOcoOrderByOrderId Request Cancel OCO Order By OrderId /api/v3/oco/order/{orderId} */
  public static void testCancelOcoOrderByOrderIdRequest() throws Exception {
    String data = "{\"orderId\": \"674c316e688dea0007c7b986\"}";
    CancelOcoOrderByOrderIdReq obj = mapper.readValue(data, CancelOcoOrderByOrderIdReq.class);
  }

  /** cancelOcoOrderByOrderId Response Cancel OCO Order By OrderId /api/v3/oco/order/{orderId} */
  public static void testCancelOcoOrderByOrderIdResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"cancelledOrderIds\": [\n"
            + "            \"vs93gpqc6kkmkk57003gok16\",\n"
            + "            \"vs93gpqc6kkmkk57003gok17\"\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<CancelOcoOrderByOrderIdResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelOcoOrderByOrderIdResp>>() {});
  }

  /**
   * cancelOcoOrderByClientOid Request Cancel OCO Order By ClientOid
   * /api/v3/oco/client-order/{clientOid}
   */
  public static void testCancelOcoOrderByClientOidRequest() throws Exception {
    String data = "{\"clientOid\": \"5c52e11203aa67f1e493fb\"}";
    CancelOcoOrderByClientOidReq obj = mapper.readValue(data, CancelOcoOrderByClientOidReq.class);
  }

  /**
   * cancelOcoOrderByClientOid Response Cancel OCO Order By ClientOid
   * /api/v3/oco/client-order/{clientOid}
   */
  public static void testCancelOcoOrderByClientOidResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"cancelledOrderIds\": [\n"
            + "            \"vs93gpqc6r0mkk57003gok3h\",\n"
            + "            \"vs93gpqc6r0mkk57003gok3i\"\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<CancelOcoOrderByClientOidResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelOcoOrderByClientOidResp>>() {});
  }

  /** batchCancelOcoOrders Request Batch Cancel OCO Order /api/v3/oco/orders */
  public static void testBatchCancelOcoOrdersRequest() throws Exception {
    String data =
        "{\"orderIds\": \"674c388172cf2800072ee746,674c38bdfd8300000795167e\", \"symbol\":"
            + " \"BTC-USDT\"}";
    BatchCancelOcoOrdersReq obj = mapper.readValue(data, BatchCancelOcoOrdersReq.class);
  }

  /** batchCancelOcoOrders Response Batch Cancel OCO Order /api/v3/oco/orders */
  public static void testBatchCancelOcoOrdersResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"cancelledOrderIds\": [\n"
            + "            \"vs93gpqc750mkk57003gok6i\",\n"
            + "            \"vs93gpqc750mkk57003gok6j\",\n"
            + "            \"vs93gpqc75c39p83003tnriu\",\n"
            + "            \"vs93gpqc75c39p83003tnriv\"\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<BatchCancelOcoOrdersResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<BatchCancelOcoOrdersResp>>() {});
  }

  /** getOcoOrderByOrderId Request Get OCO Order By OrderId /api/v3/oco/order/{orderId} */
  public static void testGetOcoOrderByOrderIdRequest() throws Exception {
    String data = "{\"orderId\": \"674c3b6e688dea0007c7bab2\"}";
    GetOcoOrderByOrderIdReq obj = mapper.readValue(data, GetOcoOrderByOrderIdReq.class);
  }

  /** getOcoOrderByOrderId Response Get OCO Order By OrderId /api/v3/oco/order/{orderId} */
  public static void testGetOcoOrderByOrderIdResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"orderId\": \"674c3b6e688dea0007c7bab2\",\n"
            + "        \"symbol\": \"BTC-USDT\",\n"
            + "        \"clientOid\": \"5c52e1203aa6f37f1e493fb\",\n"
            + "        \"orderTime\": 1733049198863,\n"
            + "        \"status\": \"NEW\"\n"
            + "    }\n"
            + "}";
    RestResponse<GetOcoOrderByOrderIdResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOcoOrderByOrderIdResp>>() {});
  }

  /**
   * getOcoOrderByClientOid Request Get OCO Order By ClientOid /api/v3/oco/client-order/{clientOid}
   */
  public static void testGetOcoOrderByClientOidRequest() throws Exception {
    String data = "{\"clientOid\": \"5c52e1203aa6f3g7f1e493fb\"}";
    GetOcoOrderByClientOidReq obj = mapper.readValue(data, GetOcoOrderByClientOidReq.class);
  }

  /**
   * getOcoOrderByClientOid Response Get OCO Order By ClientOid /api/v3/oco/client-order/{clientOid}
   */
  public static void testGetOcoOrderByClientOidResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"orderId\": \"674c3cfa72cf2800072ee7ce\",\n"
            + "        \"symbol\": \"BTC-USDT\",\n"
            + "        \"clientOid\": \"5c52e1203aa6f3g7f1e493fb\",\n"
            + "        \"orderTime\": 1733049594803,\n"
            + "        \"status\": \"NEW\"\n"
            + "    }\n"
            + "}";
    RestResponse<GetOcoOrderByClientOidResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOcoOrderByClientOidResp>>() {});
  }

  /**
   * getOcoOrderDetailByOrderId Request Get OCO Order Detail By OrderId
   * /api/v3/oco/order/details/{orderId}
   */
  public static void testGetOcoOrderDetailByOrderIdRequest() throws Exception {
    String data = "{\"orderId\": \"674c3b6e688dea0007c7bab2\"}";
    GetOcoOrderDetailByOrderIdReq obj = mapper.readValue(data, GetOcoOrderDetailByOrderIdReq.class);
  }

  /**
   * getOcoOrderDetailByOrderId Response Get OCO Order Detail By OrderId
   * /api/v3/oco/order/details/{orderId}
   */
  public static void testGetOcoOrderDetailByOrderIdResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"orderId\": \"674c3b6e688dea0007c7bab2\",\n"
            + "        \"symbol\": \"BTC-USDT\",\n"
            + "        \"clientOid\": \"5c52e1203aa6f37f1e493fb\",\n"
            + "        \"orderTime\": 1733049198863,\n"
            + "        \"status\": \"NEW\",\n"
            + "        \"orders\": [\n"
            + "            {\n"
            + "                \"id\": \"vs93gpqc7dn6h3fa003sfelj\",\n"
            + "                \"symbol\": \"BTC-USDT\",\n"
            + "                \"side\": \"buy\",\n"
            + "                \"price\": \"94000.00000000000000000000\",\n"
            + "                \"stopPrice\": \"94000.00000000000000000000\",\n"
            + "                \"size\": \"0.10000000000000000000\",\n"
            + "                \"status\": \"NEW\"\n"
            + "            },\n"
            + "            {\n"
            + "                \"id\": \"vs93gpqc7dn6h3fa003sfelk\",\n"
            + "                \"symbol\": \"BTC-USDT\",\n"
            + "                \"side\": \"buy\",\n"
            + "                \"price\": \"96000.00000000000000000000\",\n"
            + "                \"stopPrice\": \"98000.00000000000000000000\",\n"
            + "                \"size\": \"0.10000000000000000000\",\n"
            + "                \"status\": \"NEW\"\n"
            + "            }\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<GetOcoOrderDetailByOrderIdResp> resp =
        mapper.readValue(
            data, new TypeReference<RestResponse<GetOcoOrderDetailByOrderIdResp>>() {});
  }

  /** getOcoOrderList Request Get OCO Order List /api/v3/oco/orders */
  public static void testGetOcoOrderListRequest() throws Exception {
    String data =
        "{\"symbol\": \"BTC-USDT\", \"startAt\": 123456, \"endAt\": 123456, \"orderIds\":"
            + " \"example_string_default_value\", \"pageSize\": 50, \"currentPage\": 1}";
    GetOcoOrderListReq obj = mapper.readValue(data, GetOcoOrderListReq.class);
  }

  /** getOcoOrderList Response Get OCO Order List /api/v3/oco/orders */
  public static void testGetOcoOrderListResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"currentPage\": 1,\n"
            + "        \"pageSize\": 50,\n"
            + "        \"totalNum\": 1,\n"
            + "        \"totalPage\": 1,\n"
            + "        \"items\": [\n"
            + "            {\n"
            + "                \"orderId\": \"674c3cfa72cf2800072ee7ce\",\n"
            + "                \"symbol\": \"BTC-USDT\",\n"
            + "                \"clientOid\": \"5c52e1203aa6f3g7f1e493fb\",\n"
            + "                \"orderTime\": 1733049594803,\n"
            + "                \"status\": \"NEW\"\n"
            + "            }\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<GetOcoOrderListResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOcoOrderListResp>>() {});
  }

  /** addOrderOld Request Add Order - Old /api/v1/orders */
  public static void testAddOrderOldRequest() throws Exception {
    String data =
        "{\"type\": \"limit\", \"symbol\": \"BTC-USDT\", \"side\": \"buy\", \"price\": \"50000\","
            + " \"size\": \"0.00001\", \"clientOid\": \"5c52e11203aa677f33e493fb\", \"remark\":"
            + " \"order remarks\"}";
    AddOrderOldReq obj = mapper.readValue(data, AddOrderOldReq.class);
  }

  /** addOrderOld Response Add Order - Old /api/v1/orders */
  public static void testAddOrderOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"orderId\": \"674a8635b38d120007709c0f\"\n"
            + "    }\n"
            + "}";
    RestResponse<AddOrderOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOrderOldResp>>() {});
  }

  /** addOrderTestOld Request Add Order Test - Old /api/v1/orders/test */
  public static void testAddOrderTestOldRequest() throws Exception {
    String data =
        "{\"type\": \"limit\", \"symbol\": \"BTC-USDT\", \"side\": \"buy\", \"price\": \"50000\","
            + " \"size\": \"0.00001\", \"clientOid\": \"5c52e11203aa677f33e493fb\", \"remark\":"
            + " \"order remarks\"}";
    AddOrderTestOldReq obj = mapper.readValue(data, AddOrderTestOldReq.class);
  }

  /** addOrderTestOld Response Add Order Test - Old /api/v1/orders/test */
  public static void testAddOrderTestOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"orderId\": \"674a8776291d9e00074f1edf\"\n"
            + "    }\n"
            + "}";
    RestResponse<AddOrderTestOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<AddOrderTestOldResp>>() {});
  }

  /** batchAddOrdersOld Request Batch Add Orders - Old /api/v1/orders/multi */
  public static void testBatchAddOrdersOldRequest() throws Exception {
    String data =
        "{\"symbol\": \"BTC-USDT\", \"orderList\": [{\"clientOid\":"
            + " \"3d07008668054da6b3cb12e432c2b13a\", \"side\": \"buy\", \"type\": \"limit\","
            + " \"price\": \"50000\", \"size\": \"0.0001\"}, {\"clientOid\":"
            + " \"37245dbe6e134b5c97732bfb36cd4a9d\", \"side\": \"buy\", \"type\": \"limit\","
            + " \"price\": \"49999\", \"size\": \"0.0001\"}]}";
    BatchAddOrdersOldReq obj = mapper.readValue(data, BatchAddOrdersOldReq.class);
  }

  /** batchAddOrdersOld Response Batch Add Orders - Old /api/v1/orders/multi */
  public static void testBatchAddOrdersOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"data\": [\n"
            + "            {\n"
            + "                \"symbol\": \"BTC-USDT\",\n"
            + "                \"type\": \"limit\",\n"
            + "                \"side\": \"buy\",\n"
            + "                \"price\": \"50000\",\n"
            + "                \"size\": \"0.0001\",\n"
            + "                \"funds\": null,\n"
            + "                \"stp\": \"\",\n"
            + "                \"stop\": \"\",\n"
            + "                \"stopPrice\": null,\n"
            + "                \"timeInForce\": \"GTC\",\n"
            + "                \"cancelAfter\": 0,\n"
            + "                \"postOnly\": false,\n"
            + "                \"hidden\": false,\n"
            + "                \"iceberge\": false,\n"
            + "                \"iceberg\": false,\n"
            + "                \"visibleSize\": null,\n"
            + "                \"channel\": \"API\",\n"
            + "                \"id\": \"674a97dfef434f0007efc431\",\n"
            + "                \"status\": \"success\",\n"
            + "                \"failMsg\": null,\n"
            + "                \"clientOid\": \"3d07008668054da6b3cb12e432c2b13a\"\n"
            + "            },\n"
            + "            {\n"
            + "                \"symbol\": \"BTC-USDT\",\n"
            + "                \"type\": \"limit\",\n"
            + "                \"side\": \"buy\",\n"
            + "                \"price\": \"49999\",\n"
            + "                \"size\": \"0.0001\",\n"
            + "                \"funds\": null,\n"
            + "                \"stp\": \"\",\n"
            + "                \"stop\": \"\",\n"
            + "                \"stopPrice\": null,\n"
            + "                \"timeInForce\": \"GTC\",\n"
            + "                \"cancelAfter\": 0,\n"
            + "                \"postOnly\": false,\n"
            + "                \"hidden\": false,\n"
            + "                \"iceberge\": false,\n"
            + "                \"iceberg\": false,\n"
            + "                \"visibleSize\": null,\n"
            + "                \"channel\": \"API\",\n"
            + "                \"id\": \"674a97dffb378b00077b9c20\",\n"
            + "                \"status\": \"fail\",\n"
            + "                \"failMsg\": \"Balance insufficient!\",\n"
            + "                \"clientOid\": \"37245dbe6e134b5c97732bfb36cd4a9d\"\n"
            + "            }\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<BatchAddOrdersOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<BatchAddOrdersOldResp>>() {});
  }

  /** cancelOrderByOrderIdOld Request Cancel Order By OrderId - Old /api/v1/orders/{orderId} */
  public static void testCancelOrderByOrderIdOldRequest() throws Exception {
    String data = "{\"orderId\": \"674a97dfef434f0007efc431\"}";
    CancelOrderByOrderIdOldReq obj = mapper.readValue(data, CancelOrderByOrderIdOldReq.class);
  }

  /** cancelOrderByOrderIdOld Response Cancel Order By OrderId - Old /api/v1/orders/{orderId} */
  public static void testCancelOrderByOrderIdOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"cancelledOrderIds\": [\n"
            + "            \"674a97dfef434f0007efc431\"\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<CancelOrderByOrderIdOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelOrderByOrderIdOldResp>>() {});
  }

  /**
   * cancelOrderByClientOidOld Request Cancel Order By ClientOid - Old
   * /api/v1/order/client-order/{clientOid}
   */
  public static void testCancelOrderByClientOidOldRequest() throws Exception {
    String data = "{\"clientOid\": \"5c52e11203aa677f331e493fb\"}";
    CancelOrderByClientOidOldReq obj = mapper.readValue(data, CancelOrderByClientOidOldReq.class);
  }

  /**
   * cancelOrderByClientOidOld Response Cancel Order By ClientOid - Old
   * /api/v1/order/client-order/{clientOid}
   */
  public static void testCancelOrderByClientOidOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"cancelledOrderId\": \"67c3252a63d25e0007f91de9\",\n"
            + "        \"clientOid\": \"5c52e11203aa677f331e493fb\",\n"
            + "        \"cancelledOcoOrderIds\": null\n"
            + "    }\n"
            + "}";
    RestResponse<CancelOrderByClientOidOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<CancelOrderByClientOidOldResp>>() {});
  }

  /** batchCancelOrderOld Request Batch Cancel Order - Old /api/v1/orders */
  public static void testBatchCancelOrderOldRequest() throws Exception {
    String data = "{\"symbol\": \"BTC-USDT\", \"tradeType\": \"TRADE\"}";
    BatchCancelOrderOldReq obj = mapper.readValue(data, BatchCancelOrderOldReq.class);
  }

  /** batchCancelOrderOld Response Batch Cancel Order - Old /api/v1/orders */
  public static void testBatchCancelOrderOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"cancelledOrderIds\": [\n"
            + "            \"674a8635b38d120007709c0f\",\n"
            + "            \"674a8630439c100007d3bce1\"\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<BatchCancelOrderOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<BatchCancelOrderOldResp>>() {});
  }

  /** getOrdersListOld Request Get Orders List - Old /api/v1/orders */
  public static void testGetOrdersListOldRequest() throws Exception {
    String data =
        "{\"symbol\": \"BTC-USDT\", \"status\": \"active\", \"side\": \"buy\", \"type\": \"limit\","
            + " \"tradeType\": \"TRADE\", \"startAt\": 123456, \"endAt\": 123456, \"currentPage\":"
            + " 1, \"pageSize\": 50}";
    GetOrdersListOldReq obj = mapper.readValue(data, GetOrdersListOldReq.class);
  }

  /** getOrdersListOld Response Get Orders List - Old /api/v1/orders */
  public static void testGetOrdersListOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"currentPage\": 1,\n"
            + "        \"pageSize\": 50,\n"
            + "        \"totalNum\": 1,\n"
            + "        \"totalPage\": 1,\n"
            + "        \"items\": [\n"
            + "            {\n"
            + "                \"id\": \"674a9a872033a50007e2790d\",\n"
            + "                \"symbol\": \"BTC-USDT\",\n"
            + "                \"opType\": \"DEAL\",\n"
            + "                \"type\": \"limit\",\n"
            + "                \"side\": \"buy\",\n"
            + "                \"price\": \"50000\",\n"
            + "                \"size\": \"0.00001\",\n"
            + "                \"funds\": \"0\",\n"
            + "                \"dealFunds\": \"0\",\n"
            + "                \"dealSize\": \"0\",\n"
            + "                \"fee\": \"0\",\n"
            + "                \"feeCurrency\": \"USDT\",\n"
            + "                \"stp\": \"\",\n"
            + "                \"stop\": \"\",\n"
            + "                \"stopTriggered\": false,\n"
            + "                \"stopPrice\": \"0\",\n"
            + "                \"timeInForce\": \"GTC\",\n"
            + "                \"postOnly\": false,\n"
            + "                \"hidden\": false,\n"
            + "                \"iceberg\": false,\n"
            + "                \"visibleSize\": \"0\",\n"
            + "                \"cancelAfter\": 0,\n"
            + "                \"channel\": \"API\",\n"
            + "                \"clientOid\": \"5c52e11203aa677f33e4923fb\",\n"
            + "                \"remark\": \"order remarks\",\n"
            + "                \"tags\": null,\n"
            + "                \"isActive\": false,\n"
            + "                \"cancelExist\": true,\n"
            + "                \"createdAt\": 1732942471752,\n"
            + "                \"tradeType\": \"TRADE\"\n"
            + "            }\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<GetOrdersListOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOrdersListOldResp>>() {});
  }

  /** getRecentOrdersListOld Request Get Recent Orders List - Old /api/v1/limit/orders */
  public static void testGetRecentOrdersListOldRequest() throws Exception {
    // pass
  }

  /** getRecentOrdersListOld Response Get Recent Orders List - Old /api/v1/limit/orders */
  public static void testGetRecentOrdersListOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": [\n"
            + "        {\n"
            + "            \"id\": \"674a9a872033a50007e2790d\",\n"
            + "            \"symbol\": \"BTC-USDT\",\n"
            + "            \"opType\": \"DEAL\",\n"
            + "            \"type\": \"limit\",\n"
            + "            \"side\": \"buy\",\n"
            + "            \"price\": \"50000\",\n"
            + "            \"size\": \"0.00001\",\n"
            + "            \"funds\": \"0\",\n"
            + "            \"dealFunds\": \"0\",\n"
            + "            \"dealSize\": \"0\",\n"
            + "            \"fee\": \"0\",\n"
            + "            \"feeCurrency\": \"USDT\",\n"
            + "            \"stp\": \"\",\n"
            + "            \"stop\": \"\",\n"
            + "            \"stopTriggered\": false,\n"
            + "            \"stopPrice\": \"0\",\n"
            + "            \"timeInForce\": \"GTC\",\n"
            + "            \"postOnly\": false,\n"
            + "            \"hidden\": false,\n"
            + "            \"iceberg\": false,\n"
            + "            \"visibleSize\": \"0\",\n"
            + "            \"cancelAfter\": 0,\n"
            + "            \"channel\": \"API\",\n"
            + "            \"clientOid\": \"5c52e11203aa677f33e4923fb\",\n"
            + "            \"remark\": \"order remarks\",\n"
            + "            \"tags\": null,\n"
            + "            \"isActive\": false,\n"
            + "            \"cancelExist\": true,\n"
            + "            \"createdAt\": 1732942471752,\n"
            + "            \"tradeType\": \"TRADE\"\n"
            + "        }\n"
            + "    ]\n"
            + "}";
    RestResponse<GetRecentOrdersListOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetRecentOrdersListOldResp>>() {});
  }

  /** getOrderByOrderIdOld Request Get Order By OrderId - Old /api/v1/orders/{orderId} */
  public static void testGetOrderByOrderIdOldRequest() throws Exception {
    String data = "{\"orderId\": \"674a97dfef434f0007efc431\"}";
    GetOrderByOrderIdOldReq obj = mapper.readValue(data, GetOrderByOrderIdOldReq.class);
  }

  /** getOrderByOrderIdOld Response Get Order By OrderId - Old /api/v1/orders/{orderId} */
  public static void testGetOrderByOrderIdOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"id\": \"674a97dfef434f0007efc431\",\n"
            + "        \"symbol\": \"BTC-USDT\",\n"
            + "        \"opType\": \"DEAL\",\n"
            + "        \"type\": \"limit\",\n"
            + "        \"side\": \"buy\",\n"
            + "        \"price\": \"50000\",\n"
            + "        \"size\": \"0.0001\",\n"
            + "        \"funds\": \"0\",\n"
            + "        \"dealFunds\": \"0\",\n"
            + "        \"dealSize\": \"0\",\n"
            + "        \"fee\": \"0\",\n"
            + "        \"feeCurrency\": \"USDT\",\n"
            + "        \"stp\": \"\",\n"
            + "        \"stop\": \"\",\n"
            + "        \"stopTriggered\": false,\n"
            + "        \"stopPrice\": \"0\",\n"
            + "        \"timeInForce\": \"GTC\",\n"
            + "        \"postOnly\": false,\n"
            + "        \"hidden\": false,\n"
            + "        \"iceberg\": false,\n"
            + "        \"visibleSize\": \"0\",\n"
            + "        \"cancelAfter\": 0,\n"
            + "        \"channel\": \"API\",\n"
            + "        \"clientOid\": \"3d07008668054da6b3cb12e432c2b13a\",\n"
            + "        \"remark\": null,\n"
            + "        \"tags\": null,\n"
            + "        \"isActive\": false,\n"
            + "        \"cancelExist\": true,\n"
            + "        \"createdAt\": 1732941791518,\n"
            + "        \"tradeType\": \"TRADE\"\n"
            + "    }\n"
            + "}";
    RestResponse<GetOrderByOrderIdOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOrderByOrderIdOldResp>>() {});
  }

  /**
   * getOrderByClientOidOld Request Get Order By ClientOid - Old
   * /api/v1/order/client-order/{clientOid}
   */
  public static void testGetOrderByClientOidOldRequest() throws Exception {
    String data = "{\"clientOid\": \"3d07008668054da6b3cb12e432c2b13a\"}";
    GetOrderByClientOidOldReq obj = mapper.readValue(data, GetOrderByClientOidOldReq.class);
  }

  /**
   * getOrderByClientOidOld Response Get Order By ClientOid - Old
   * /api/v1/order/client-order/{clientOid}
   */
  public static void testGetOrderByClientOidOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"id\": \"674a97dfef434f0007efc431\",\n"
            + "        \"symbol\": \"BTC-USDT\",\n"
            + "        \"opType\": \"DEAL\",\n"
            + "        \"type\": \"limit\",\n"
            + "        \"side\": \"buy\",\n"
            + "        \"price\": \"50000\",\n"
            + "        \"size\": \"0.0001\",\n"
            + "        \"funds\": \"0\",\n"
            + "        \"dealFunds\": \"0\",\n"
            + "        \"dealSize\": \"0\",\n"
            + "        \"fee\": \"0\",\n"
            + "        \"feeCurrency\": \"USDT\",\n"
            + "        \"stp\": \"\",\n"
            + "        \"stop\": \"\",\n"
            + "        \"stopTriggered\": false,\n"
            + "        \"stopPrice\": \"0\",\n"
            + "        \"timeInForce\": \"GTC\",\n"
            + "        \"postOnly\": false,\n"
            + "        \"hidden\": false,\n"
            + "        \"iceberg\": false,\n"
            + "        \"visibleSize\": \"0\",\n"
            + "        \"cancelAfter\": 0,\n"
            + "        \"channel\": \"API\",\n"
            + "        \"clientOid\": \"3d07008668054da6b3cb12e432c2b13a\",\n"
            + "        \"remark\": null,\n"
            + "        \"tags\": null,\n"
            + "        \"isActive\": false,\n"
            + "        \"cancelExist\": true,\n"
            + "        \"createdAt\": 1732941791518,\n"
            + "        \"tradeType\": \"TRADE\"\n"
            + "    }\n"
            + "}";
    RestResponse<GetOrderByClientOidOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetOrderByClientOidOldResp>>() {});
  }

  /** getTradeHistoryOld Request Get Trade History - Old /api/v1/fills */
  public static void testGetTradeHistoryOldRequest() throws Exception {
    String data =
        "{\"symbol\": \"BTC-USDT\", \"orderId\": \"example_string_default_value\", \"side\":"
            + " \"buy\", \"type\": \"limit\", \"tradeType\": \"TRADE\", \"startAt\": 1728663338000,"
            + " \"endAt\": 1728692138000, \"currentPage\": 1, \"pageSize\": 50}";
    GetTradeHistoryOldReq obj = mapper.readValue(data, GetTradeHistoryOldReq.class);
  }

  /** getTradeHistoryOld Response Get Trade History - Old /api/v1/fills */
  public static void testGetTradeHistoryOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": {\n"
            + "        \"currentPage\": 1,\n"
            + "        \"pageSize\": 50,\n"
            + "        \"totalNum\": 1,\n"
            + "        \"totalPage\": 1,\n"
            + "        \"items\": [\n"
            + "            {\n"
            + "                \"symbol\": \"DOGE-USDT\",\n"
            + "                \"tradeId\": \"10862827223795713\",\n"
            + "                \"orderId\": \"6745698ef4f1200007c561a8\",\n"
            + "                \"counterOrderId\": \"6745695ef15b270007ac5076\",\n"
            + "                \"side\": \"buy\",\n"
            + "                \"liquidity\": \"taker\",\n"
            + "                \"forceTaker\": false,\n"
            + "                \"price\": \"0.40739\",\n"
            + "                \"size\": \"10\",\n"
            + "                \"funds\": \"4.0739\",\n"
            + "                \"fee\": \"0.0040739\",\n"
            + "                \"feeRate\": \"0.001\",\n"
            + "                \"feeCurrency\": \"USDT\",\n"
            + "                \"stop\": \"\",\n"
            + "                \"tradeType\": \"TRADE\",\n"
            + "                \"type\": \"market\",\n"
            + "                \"createdAt\": 1732602254928\n"
            + "            }\n"
            + "        ]\n"
            + "    }\n"
            + "}";
    RestResponse<GetTradeHistoryOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetTradeHistoryOldResp>>() {});
  }

  /** getRecentTradeHistoryOld Request Get Recent Trade History - Old /api/v1/limit/fills */
  public static void testGetRecentTradeHistoryOldRequest() throws Exception {
    // pass
  }

  /** getRecentTradeHistoryOld Response Get Recent Trade History - Old /api/v1/limit/fills */
  public static void testGetRecentTradeHistoryOldResponse() throws Exception {
    String data =
        "{\n"
            + "    \"code\": \"200000\",\n"
            + "    \"data\": [\n"
            + "        {\n"
            + "            \"symbol\": \"BTC-USDT\",\n"
            + "            \"tradeId\": \"11732720444522497\",\n"
            + "            \"orderId\": \"674aab24754b1e00077dbc69\",\n"
            + "            \"counterOrderId\": \"674aab1fb26bfb0007a18b67\",\n"
            + "            \"side\": \"buy\",\n"
            + "            \"liquidity\": \"taker\",\n"
            + "            \"forceTaker\": false,\n"
            + "            \"price\": \"96999.6\",\n"
            + "            \"size\": \"0.00001\",\n"
            + "            \"funds\": \"0.969996\",\n"
            + "            \"fee\": \"0.000969996\",\n"
            + "            \"feeRate\": \"0.001\",\n"
            + "            \"feeCurrency\": \"USDT\",\n"
            + "            \"stop\": \"\",\n"
            + "            \"tradeType\": \"TRADE\",\n"
            + "            \"type\": \"limit\",\n"
            + "            \"createdAt\": 1732946724082\n"
            + "        }\n"
            + "    ]\n"
            + "}";
    RestResponse<GetRecentTradeHistoryOldResp> resp =
        mapper.readValue(data, new TypeReference<RestResponse<GetRecentTradeHistoryOldResp>>() {});
  }

  public static void runAllTests() {
    run(OrderApiAutoGeneratedTest::testAddOrderRequest, "testAddOrderRequest");
    run(OrderApiAutoGeneratedTest::testAddOrderResponse, "testAddOrderResponse");
    run(OrderApiAutoGeneratedTest::testAddOrderSyncRequest, "testAddOrderSyncRequest");
    run(OrderApiAutoGeneratedTest::testAddOrderSyncResponse, "testAddOrderSyncResponse");
    run(OrderApiAutoGeneratedTest::testAddOrderTestRequest, "testAddOrderTestRequest");
    run(OrderApiAutoGeneratedTest::testAddOrderTestResponse, "testAddOrderTestResponse");
    run(OrderApiAutoGeneratedTest::testBatchAddOrdersRequest, "testBatchAddOrdersRequest");
    run(OrderApiAutoGeneratedTest::testBatchAddOrdersResponse, "testBatchAddOrdersResponse");
    run(OrderApiAutoGeneratedTest::testBatchAddOrdersSyncRequest, "testBatchAddOrdersSyncRequest");
    run(
        OrderApiAutoGeneratedTest::testBatchAddOrdersSyncResponse,
        "testBatchAddOrdersSyncResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByOrderIdRequest,
        "testCancelOrderByOrderIdRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByOrderIdResponse,
        "testCancelOrderByOrderIdResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByOrderIdSyncRequest,
        "testCancelOrderByOrderIdSyncRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByOrderIdSyncResponse,
        "testCancelOrderByOrderIdSyncResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByClientOidRequest,
        "testCancelOrderByClientOidRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByClientOidResponse,
        "testCancelOrderByClientOidResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByClientOidSyncRequest,
        "testCancelOrderByClientOidSyncRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByClientOidSyncResponse,
        "testCancelOrderByClientOidSyncResponse");
    run(OrderApiAutoGeneratedTest::testCancelPartialOrderRequest, "testCancelPartialOrderRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelPartialOrderResponse,
        "testCancelPartialOrderResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelAllOrdersBySymbolRequest,
        "testCancelAllOrdersBySymbolRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelAllOrdersBySymbolResponse,
        "testCancelAllOrdersBySymbolResponse");
    run(OrderApiAutoGeneratedTest::testCancelAllOrdersRequest, "testCancelAllOrdersRequest");
    run(OrderApiAutoGeneratedTest::testCancelAllOrdersResponse, "testCancelAllOrdersResponse");
    run(OrderApiAutoGeneratedTest::testModifyOrderRequest, "testModifyOrderRequest");
    run(OrderApiAutoGeneratedTest::testModifyOrderResponse, "testModifyOrderResponse");
    run(OrderApiAutoGeneratedTest::testGetOrderByOrderIdRequest, "testGetOrderByOrderIdRequest");
    run(OrderApiAutoGeneratedTest::testGetOrderByOrderIdResponse, "testGetOrderByOrderIdResponse");
    run(
        OrderApiAutoGeneratedTest::testGetOrderByClientOidRequest,
        "testGetOrderByClientOidRequest");
    run(
        OrderApiAutoGeneratedTest::testGetOrderByClientOidResponse,
        "testGetOrderByClientOidResponse");
    run(
        OrderApiAutoGeneratedTest::testGetSymbolsWithOpenOrderRequest,
        "testGetSymbolsWithOpenOrderRequest");
    run(
        OrderApiAutoGeneratedTest::testGetSymbolsWithOpenOrderResponse,
        "testGetSymbolsWithOpenOrderResponse");
    run(OrderApiAutoGeneratedTest::testGetOpenOrdersRequest, "testGetOpenOrdersRequest");
    run(OrderApiAutoGeneratedTest::testGetOpenOrdersResponse, "testGetOpenOrdersResponse");
    run(
        OrderApiAutoGeneratedTest::testGetOpenOrdersByPageRequest,
        "testGetOpenOrdersByPageRequest");
    run(
        OrderApiAutoGeneratedTest::testGetOpenOrdersByPageResponse,
        "testGetOpenOrdersByPageResponse");
    run(OrderApiAutoGeneratedTest::testGetClosedOrdersRequest, "testGetClosedOrdersRequest");
    run(OrderApiAutoGeneratedTest::testGetClosedOrdersResponse, "testGetClosedOrdersResponse");
    run(OrderApiAutoGeneratedTest::testGetTradeHistoryRequest, "testGetTradeHistoryRequest");
    run(OrderApiAutoGeneratedTest::testGetTradeHistoryResponse, "testGetTradeHistoryResponse");
    run(OrderApiAutoGeneratedTest::testGetDCPRequest, "testGetDCPRequest");
    run(OrderApiAutoGeneratedTest::testGetDCPResponse, "testGetDCPResponse");
    run(OrderApiAutoGeneratedTest::testSetDCPRequest, "testSetDCPRequest");
    run(OrderApiAutoGeneratedTest::testSetDCPResponse, "testSetDCPResponse");
    run(OrderApiAutoGeneratedTest::testAddStopOrderRequest, "testAddStopOrderRequest");
    run(OrderApiAutoGeneratedTest::testAddStopOrderResponse, "testAddStopOrderResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelStopOrderByClientOidRequest,
        "testCancelStopOrderByClientOidRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelStopOrderByClientOidResponse,
        "testCancelStopOrderByClientOidResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelStopOrderByOrderIdRequest,
        "testCancelStopOrderByOrderIdRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelStopOrderByOrderIdResponse,
        "testCancelStopOrderByOrderIdResponse");
    run(
        OrderApiAutoGeneratedTest::testBatchCancelStopOrderRequest,
        "testBatchCancelStopOrderRequest");
    run(
        OrderApiAutoGeneratedTest::testBatchCancelStopOrderResponse,
        "testBatchCancelStopOrderResponse");
    run(OrderApiAutoGeneratedTest::testGetStopOrdersListRequest, "testGetStopOrdersListRequest");
    run(OrderApiAutoGeneratedTest::testGetStopOrdersListResponse, "testGetStopOrdersListResponse");
    run(
        OrderApiAutoGeneratedTest::testGetStopOrderByOrderIdRequest,
        "testGetStopOrderByOrderIdRequest");
    run(
        OrderApiAutoGeneratedTest::testGetStopOrderByOrderIdResponse,
        "testGetStopOrderByOrderIdResponse");
    run(
        OrderApiAutoGeneratedTest::testGetStopOrderByClientOidRequest,
        "testGetStopOrderByClientOidRequest");
    run(
        OrderApiAutoGeneratedTest::testGetStopOrderByClientOidResponse,
        "testGetStopOrderByClientOidResponse");
    run(OrderApiAutoGeneratedTest::testAddOcoOrderRequest, "testAddOcoOrderRequest");
    run(OrderApiAutoGeneratedTest::testAddOcoOrderResponse, "testAddOcoOrderResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelOcoOrderByOrderIdRequest,
        "testCancelOcoOrderByOrderIdRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelOcoOrderByOrderIdResponse,
        "testCancelOcoOrderByOrderIdResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelOcoOrderByClientOidRequest,
        "testCancelOcoOrderByClientOidRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelOcoOrderByClientOidResponse,
        "testCancelOcoOrderByClientOidResponse");
    run(
        OrderApiAutoGeneratedTest::testBatchCancelOcoOrdersRequest,
        "testBatchCancelOcoOrdersRequest");
    run(
        OrderApiAutoGeneratedTest::testBatchCancelOcoOrdersResponse,
        "testBatchCancelOcoOrdersResponse");
    run(
        OrderApiAutoGeneratedTest::testGetOcoOrderByOrderIdRequest,
        "testGetOcoOrderByOrderIdRequest");
    run(
        OrderApiAutoGeneratedTest::testGetOcoOrderByOrderIdResponse,
        "testGetOcoOrderByOrderIdResponse");
    run(
        OrderApiAutoGeneratedTest::testGetOcoOrderByClientOidRequest,
        "testGetOcoOrderByClientOidRequest");
    run(
        OrderApiAutoGeneratedTest::testGetOcoOrderByClientOidResponse,
        "testGetOcoOrderByClientOidResponse");
    run(
        OrderApiAutoGeneratedTest::testGetOcoOrderDetailByOrderIdRequest,
        "testGetOcoOrderDetailByOrderIdRequest");
    run(
        OrderApiAutoGeneratedTest::testGetOcoOrderDetailByOrderIdResponse,
        "testGetOcoOrderDetailByOrderIdResponse");
    run(OrderApiAutoGeneratedTest::testGetOcoOrderListRequest, "testGetOcoOrderListRequest");
    run(OrderApiAutoGeneratedTest::testGetOcoOrderListResponse, "testGetOcoOrderListResponse");
    run(OrderApiAutoGeneratedTest::testAddOrderOldRequest, "testAddOrderOldRequest");
    run(OrderApiAutoGeneratedTest::testAddOrderOldResponse, "testAddOrderOldResponse");
    run(OrderApiAutoGeneratedTest::testAddOrderTestOldRequest, "testAddOrderTestOldRequest");
    run(OrderApiAutoGeneratedTest::testAddOrderTestOldResponse, "testAddOrderTestOldResponse");
    run(OrderApiAutoGeneratedTest::testBatchAddOrdersOldRequest, "testBatchAddOrdersOldRequest");
    run(OrderApiAutoGeneratedTest::testBatchAddOrdersOldResponse, "testBatchAddOrdersOldResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByOrderIdOldRequest,
        "testCancelOrderByOrderIdOldRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByOrderIdOldResponse,
        "testCancelOrderByOrderIdOldResponse");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByClientOidOldRequest,
        "testCancelOrderByClientOidOldRequest");
    run(
        OrderApiAutoGeneratedTest::testCancelOrderByClientOidOldResponse,
        "testCancelOrderByClientOidOldResponse");
    run(
        OrderApiAutoGeneratedTest::testBatchCancelOrderOldRequest,
        "testBatchCancelOrderOldRequest");
    run(
        OrderApiAutoGeneratedTest::testBatchCancelOrderOldResponse,
        "testBatchCancelOrderOldResponse");
    run(OrderApiAutoGeneratedTest::testGetOrdersListOldRequest, "testGetOrdersListOldRequest");
    run(OrderApiAutoGeneratedTest::testGetOrdersListOldResponse, "testGetOrdersListOldResponse");
    run(
        OrderApiAutoGeneratedTest::testGetRecentOrdersListOldRequest,
        "testGetRecentOrdersListOldRequest");
    run(
        OrderApiAutoGeneratedTest::testGetRecentOrdersListOldResponse,
        "testGetRecentOrdersListOldResponse");
    run(
        OrderApiAutoGeneratedTest::testGetOrderByOrderIdOldRequest,
        "testGetOrderByOrderIdOldRequest");
    run(
        OrderApiAutoGeneratedTest::testGetOrderByOrderIdOldResponse,
        "testGetOrderByOrderIdOldResponse");
    run(
        OrderApiAutoGeneratedTest::testGetOrderByClientOidOldRequest,
        "testGetOrderByClientOidOldRequest");
    run(
        OrderApiAutoGeneratedTest::testGetOrderByClientOidOldResponse,
        "testGetOrderByClientOidOldResponse");
    run(OrderApiAutoGeneratedTest::testGetTradeHistoryOldRequest, "testGetTradeHistoryOldRequest");
    run(
        OrderApiAutoGeneratedTest::testGetTradeHistoryOldResponse,
        "testGetTradeHistoryOldResponse");
    run(
        OrderApiAutoGeneratedTest::testGetRecentTradeHistoryOldRequest,
        "testGetRecentTradeHistoryOldRequest");
    run(
        OrderApiAutoGeneratedTest::testGetRecentTradeHistoryOldResponse,
        "testGetRecentTradeHistoryOldResponse");
  }

  private static void run(TestCase test, String name) {
    System.out.println("Running test: " + name);
    totalTest++;
    try {
      test.execute();
      System.out.println("PASSED: " + name);
    } catch (Exception e) {
      System.err.println("FAILED: " + name + " - " + e.getMessage());
      e.printStackTrace(System.err);
      failedTests.add(name);
    }
  }

  @FunctionalInterface
  interface TestCase {
    void execute() throws Exception;
  }

  public static void main(String[] args) {
    runAllTests();
    finish();
  }

  public static void finish() {
    System.out.printf("Test total: %d, failed: %d\n", totalTest, failedTests.size());
    if (!failedTests.isEmpty()) {
      System.err.println("\n=== TEST SUMMARY ===");
      System.err.println("Failed tests:");
      for (String name : failedTests) {
        System.err.println(" - " + name);
      }
      System.exit(1);
    } else {
      System.out.println("\nAll tests passed.");
    }
  }
}
