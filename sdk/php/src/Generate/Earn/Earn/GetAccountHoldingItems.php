<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Earn\Earn;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Request;

class GetAccountHoldingItems implements Request
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * Holding ID
     * @var string $orderId
     * @Type("string")
     * @SerializedName("orderId")
     */
    public $orderId;
    /**
     * Product ID
     * @var string $productId
     * @Type("string")
     * @SerializedName("productId")
     */
    public $productId;
    /**
     * Product category
     * @var string $productCategory
     * @Type("string")
     * @SerializedName("productCategory")
     */
    public $productCategory;
    /**
     * Product sub-type
     * @var string $productType
     * @Type("string")
     * @SerializedName("productType")
     */
    public $productType;
    /**
     * currency
     * @var string $currency
     * @Type("string")
     * @SerializedName("currency")
     */
    public $currency;
    /**
     * Income currency
     * @var string $incomeCurrency
     * @Type("string")
     * @SerializedName("incomeCurrency")
     */
    public $incomeCurrency;
    /**
     * Annualized Rate of Return, for example, 0.035 is equal to 3.5% annualized rate of return
     * @var string $returnRate
     * @Type("string")
     * @SerializedName("returnRate")
     */
    public $returnRate;
    /**
     * Holding amount
     * @var string $holdAmount
     * @Type("string")
     * @SerializedName("holdAmount")
     */
    public $holdAmount;
    /**
     * Redeemed amount
     * @var string $redeemedAmount
     * @Type("string")
     * @SerializedName("redeemedAmount")
     */
    public $redeemedAmount;
    /**
     * Redeeming amount
     * @var string $redeemingAmount
     * @Type("string")
     * @SerializedName("redeemingAmount")
     */
    public $redeemingAmount;
    /**
     * Product earliest interest start time, in milliseconds
     * @var int $lockStartTime
     * @Type("int")
     * @SerializedName("lockStartTime")
     */
    public $lockStartTime;
    /**
     * Product maturity time, in milliseconds
     * @var int|null $lockEndTime
     * @Type("int")
     * @SerializedName("lockEndTime")
     */
    public $lockEndTime;
    /**
     * Most recent subscription time, in milliseconds
     * @var int $purchaseTime
     * @Type("int")
     * @SerializedName("purchaseTime")
     */
    public $purchaseTime;
    /**
     * Redemption waiting period (days)
     * @var int $redeemPeriod
     * @Type("int")
     * @SerializedName("redeemPeriod")
     */
    public $redeemPeriod;
    /**
     * Status: LOCKED (holding), REDEEMING (redeeming)
     * - 'LOCKED' :
     * - 'REDEEMING' :
     * @var string $status
     * @Type("string")
     * @SerializedName("status")
     */
    public $status;
    /**
     * Whether the fixed product supports early redemption: 0 (no), 1 (yes)
     * - 0 :
     * - 1 :
     * @var int $earlyRedeemSupported
     * @Type("int")
     * @SerializedName("earlyRedeemSupported")
     */
    public $earlyRedeemSupported;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            GetAccountHoldingItems::class,
            "json"
        );
    }
}
