<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Earn\Earn;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class GetPromotionProductsData implements Serializable
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * Product ID
     * @var string $id
     * @Type("string")
     * @SerializedName("id")
     */
    public $id;
    /**
     * currency
     * @var string $currency
     * @Type("string")
     * @SerializedName("currency")
     */
    public $currency;
    /**
     * Product category: ACTIVITY
     * - 'ACTIVITY' :
     * @var string $category
     * @Type("string")
     * @SerializedName("category")
     */
    public $category;
    /**
     * Product subtype: TIME (fixed), DEMAND (demand)
     * - 'TIME' : fixed
     * - 'DEMAND' : demand
     * @var string $type
     * @Type("string")
     * @SerializedName("type")
     */
    public $type;
    /**
     * Maximum precision supported
     * @var int $precision
     * @Type("int")
     * @SerializedName("precision")
     */
    public $precision;
    /**
     * Products total subscription amount
     * @var string $productUpperLimit
     * @Type("string")
     * @SerializedName("productUpperLimit")
     */
    public $productUpperLimit;
    /**
     * Max. user subscription amount
     * @var string $userUpperLimit
     * @Type("string")
     * @SerializedName("userUpperLimit")
     */
    public $userUpperLimit;
    /**
     * Min. user subscribe amount
     * @var string $userLowerLimit
     * @Type("string")
     * @SerializedName("userLowerLimit")
     */
    public $userLowerLimit;
    /**
     * Redemption waiting period (days)
     * @var int $redeemPeriod
     * @Type("int")
     * @SerializedName("redeemPeriod")
     */
    public $redeemPeriod;
    /**
     * Product earliest interest start time, in milliseconds
     * @var int $lockStartTime
     * @Type("int")
     * @SerializedName("lockStartTime")
     */
    public $lockStartTime;
    /**
     * Earliest interest end time of product, in milliseconds
     * @var int $lockEndTime
     * @Type("int")
     * @SerializedName("lockEndTime")
     */
    public $lockEndTime;
    /**
     * Subscription start time, in milliseconds
     * @var int $applyStartTime
     * @Type("int")
     * @SerializedName("applyStartTime")
     */
    public $applyStartTime;
    /**
     * Subscription end time, in milliseconds
     * @var int $applyEndTime
     * @Type("int")
     * @SerializedName("applyEndTime")
     */
    public $applyEndTime;
    /**
     * Annualized Rate of Return, for example, 0.035 is equal to 3.5% annualized rate of return
     * @var string $returnRate
     * @Type("string")
     * @SerializedName("returnRate")
     */
    public $returnRate;
    /**
     * Income currency
     * @var string $incomeCurrency
     * @Type("string")
     * @SerializedName("incomeCurrency")
     */
    public $incomeCurrency;
    /**
     * Whether the fixed product supports early redemption: 0 (no), 1 (yes)
     * - 0 :
     * - 1 :
     * @var int $earlyRedeemSupported
     * @Type("int")
     * @SerializedName("earlyRedeemSupported")
     */
    public $earlyRedeemSupported;
    /**
     * Remaining product subscription amount
     * @var string $productRemainAmount
     * @Type("string")
     * @SerializedName("productRemainAmount")
     */
    public $productRemainAmount;
    /**
     * Product status: ONGOING (Subscription in progress), PENDING (Preheating Subscription), FULL (Subscribed), INTERESTING (Interest in progress)
     * - 'ONGOING' :
     * - 'PENDING' :
     * - 'FULL' :
     * - 'INTERESTING' :
     * @var string $status
     * @Type("string")
     * @SerializedName("status")
     */
    public $status;
    /**
     * Redemption channel: MANUAL (manual redemption), TRANS_DEMAND (transfer to corresponding demand product upon maturity), AUTO (redeem to funding account upon maturity)
     * - 'MANUAL' :
     * - 'TRANS_DEMAND' :
     * - 'AUTO' :
     * @var string $redeemType
     * @Type("string")
     * @SerializedName("redeemType")
     */
    public $redeemType;
    /**
     * Income release type: DAILY (daily release), AFTER (release after product ends)
     * - 'DAILY' :
     * - 'AFTER' :
     * @var string $incomeReleaseType
     * @Type("string")
     * @SerializedName("incomeReleaseType")
     */
    public $incomeReleaseType;
    /**
     * Most recent interest date (milliseconds)
     * @var int $interestDate
     * @Type("int")
     * @SerializedName("interestDate")
     */
    public $interestDate;
    /**
     * Product duration (days)
     * @var int $duration
     * @Type("int")
     * @SerializedName("duration")
     */
    public $duration;
    /**
     * Whether the product is exclusive to new users: 0 (no), 1 (yes)
     * - 0 :
     * - 1 :
     * @var int $newUserOnly
     * @Type("int")
     * @SerializedName("newUserOnly")
     */
    public $newUserOnly;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            GetPromotionProductsData::class,
            "json"
        );
    }
}
