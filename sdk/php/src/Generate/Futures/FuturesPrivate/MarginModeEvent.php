<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Futures\FuturesPrivate;
use JMS\Serializer\Serializer;
use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Internal\Interfaces\WebSocketMessageCallback;
use KuCoin\UniversalSDK\Model\WsMessage;

class MarginModeEvent implements Response
{
    /**
     * The SYMBOL is the key with value  \"CROSS\" or \"ISOLATED\"
     * @var array<string,string> $data
     * @Type("array<string, string>")
     * @SerializedName("data")
     */
    public $data;

    private function __construct() {}

    /**
     * common response
     * @Exclude()
     * @var WsMessage $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }
    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json === null) {
            return new self();
        }
        $data = $serializer->deserialize(
            $json,
            "array<string, string>",
            "json"
        );
        $obj = new self();
        $obj->data = $data;
        return $obj;
    }

    /**
     * @param callable $callback function(string $topic, string $subject, MarginModeEvent $data): void
     */
    public static function createCallback(
        callable $callback
    ): MarginModeEventCallbackWrapper {
        return new MarginModeEventCallbackWrapper($callback);
    }
}

class MarginModeEventCallbackWrapper implements WebSocketMessageCallback
{
    /**
     * @var callable
     */
    private $callback;

    /**
     * @param callable $callback function(string $topic, string $subject, MarginModeEvent $data): void
     */
    public function __construct(callable $callback)
    {
        $this->callback = $callback;
    }

    public function onMessage(WsMessage $msg, Serializer $serializer)
    {
        $event = MarginModeEvent::jsonDeserialize(
            $serializer->serialize($msg->rawData, "json"),
            $serializer
        );
        $event->setCommonResponse($msg);
        call_user_func($this->callback, $msg->topic, $msg->subject, $event);
    }
}
