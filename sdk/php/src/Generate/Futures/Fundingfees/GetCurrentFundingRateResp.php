<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Futures\Fundingfees;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Model\RestResponse;

class GetCurrentFundingRateResp implements Response
{
    /**
     * Funding Rate Symbol
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     * Granularity (milliseconds)
     * @var int $granularity
     * @Type("int")
     * @SerializedName("granularity")
     */
    public $granularity;
    /**
     * The funding rate settlement time point of the previous cycle (milliseconds)
     * @var int $timePoint
     * @Type("int")
     * @SerializedName("timePoint")
     */
    public $timePoint;
    /**
     * Current cycle funding rate
     * @var float $value
     * @Type("float")
     * @SerializedName("value")
     */
    public $value;
    /**
     * Predicted funding rate
     * @var float $predictedValue
     * @Type("float")
     * @SerializedName("predictedValue")
     */
    public $predictedValue;
    /**
     * Maximum Funding Rate
     * @var float $fundingRateCap
     * @Type("float")
     * @SerializedName("fundingRateCap")
     */
    public $fundingRateCap;
    /**
     * Minimum Funding Rate
     * @var float $fundingRateFloor
     * @Type("float")
     * @SerializedName("fundingRateFloor")
     */
    public $fundingRateFloor;

    /**
     * common response
     * @Exclude()
     * @var RestResponse $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json === null) {
            return new self();
        }
        return $serializer->deserialize(
            $json,
            GetCurrentFundingRateResp::class,
            "json"
        );
    }
}
