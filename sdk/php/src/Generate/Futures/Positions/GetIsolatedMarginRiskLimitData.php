<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Futures\Positions;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class GetIsolatedMarginRiskLimitData implements Serializable
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * Symbol of the contract. Please refer to [Get Symbol endpoint: symbol](https://www.kucoin.com/docs-new/api-3470220)
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     * Level
     * @var int $level
     * @Type("int")
     * @SerializedName("level")
     */
    public $level;
    /**
     * Upper limit USDT (included)
     * @var int $maxRiskLimit
     * @Type("int")
     * @SerializedName("maxRiskLimit")
     */
    public $maxRiskLimit;
    /**
     * Lower limit USDT
     * @var int $minRiskLimit
     * @Type("int")
     * @SerializedName("minRiskLimit")
     */
    public $minRiskLimit;
    /**
     * Max. leverage
     * @var int $maxLeverage
     * @Type("int")
     * @SerializedName("maxLeverage")
     */
    public $maxLeverage;
    /**
     * Initial margin rate
     * @var float $initialMargin
     * @Type("float")
     * @SerializedName("initialMargin")
     */
    public $initialMargin;
    /**
     * Maintenance margin rate
     * @var float $maintainMargin
     * @Type("float")
     * @SerializedName("maintainMargin")
     */
    public $maintainMargin;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json == null) {
            return new self();
        }
        return $serializer->deserialize(
            $json,
            GetIsolatedMarginRiskLimitData::class,
            "json"
        );
    }
}
