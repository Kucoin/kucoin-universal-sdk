<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Futures\Positions;
use KuCoin\UniversalSDK\Internal\Interfaces\Transport;

class PositionsApiImpl implements PositionsApi
{
    private $transport;

    public function __construct(Transport $transport)
    {
        $this->transport = $transport;
    }

    public function getMarginMode(GetMarginModeReq $req): GetMarginModeResp
    {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v2/position/getMarginMode",
            $req,
            GetMarginModeResp::class,
            false
        );
    }

    public function switchMarginMode(
        SwitchMarginModeReq $req
    ): SwitchMarginModeResp {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v2/position/changeMarginMode",
            $req,
            SwitchMarginModeResp::class,
            false
        );
    }

    public function batchSwitchMarginMode(
        BatchSwitchMarginModeReq $req
    ): BatchSwitchMarginModeResp {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v2/position/batchChangeMarginMode",
            $req,
            BatchSwitchMarginModeResp::class,
            false
        );
    }

    public function getMaxOpenSize(GetMaxOpenSizeReq $req): GetMaxOpenSizeResp
    {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v2/getMaxOpenSize",
            $req,
            GetMaxOpenSizeResp::class,
            false
        );
    }

    public function getPositionDetails(
        GetPositionDetailsReq $req
    ): GetPositionDetailsResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/position",
            $req,
            GetPositionDetailsResp::class,
            false
        );
    }

    public function getPositionList(
        GetPositionListReq $req
    ): GetPositionListResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/positions",
            $req,
            GetPositionListResp::class,
            false
        );
    }

    public function getPositionsHistory(
        GetPositionsHistoryReq $req
    ): GetPositionsHistoryResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/history-positions",
            $req,
            GetPositionsHistoryResp::class,
            false
        );
    }

    public function getMaxWithdrawMargin(
        GetMaxWithdrawMarginReq $req
    ): GetMaxWithdrawMarginResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/margin/maxWithdrawMargin",
            $req,
            GetMaxWithdrawMarginResp::class,
            false
        );
    }

    public function getCrossMarginLeverage(
        GetCrossMarginLeverageReq $req
    ): GetCrossMarginLeverageResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v2/getCrossUserLeverage",
            $req,
            GetCrossMarginLeverageResp::class,
            false
        );
    }

    public function modifyMarginLeverage(
        ModifyMarginLeverageReq $req
    ): ModifyMarginLeverageResp {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v2/changeCrossUserLeverage",
            $req,
            ModifyMarginLeverageResp::class,
            false
        );
    }

    public function addIsolatedMargin(
        AddIsolatedMarginReq $req
    ): AddIsolatedMarginResp {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/position/margin/deposit-margin",
            $req,
            AddIsolatedMarginResp::class,
            false
        );
    }

    public function removeIsolatedMargin(
        RemoveIsolatedMarginReq $req
    ): RemoveIsolatedMarginResp {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/margin/withdrawMargin",
            $req,
            RemoveIsolatedMarginResp::class,
            false
        );
    }

    public function getCrossMarginRiskLimit(
        GetCrossMarginRiskLimitReq $req
    ): GetCrossMarginRiskLimitResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v2/batchGetCrossOrderLimit",
            $req,
            GetCrossMarginRiskLimitResp::class,
            false
        );
    }

    public function getIsolatedMarginRiskLimit(
        GetIsolatedMarginRiskLimitReq $req
    ): GetIsolatedMarginRiskLimitResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/contracts/risk-limit/{symbol}",
            $req,
            GetIsolatedMarginRiskLimitResp::class,
            false
        );
    }

    public function modifyIsolatedMarginRiskLimt(
        ModifyIsolatedMarginRiskLimtReq $req
    ): ModifyIsolatedMarginRiskLimtResp {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/position/risk-limit-level/change",
            $req,
            ModifyIsolatedMarginRiskLimtResp::class,
            false
        );
    }

    public function modifyAutoDepositStatus(
        ModifyAutoDepositStatusReq $req
    ): ModifyAutoDepositStatusResp {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/position/margin/auto-deposit-status",
            $req,
            ModifyAutoDepositStatusResp::class,
            false
        );
    }
}
