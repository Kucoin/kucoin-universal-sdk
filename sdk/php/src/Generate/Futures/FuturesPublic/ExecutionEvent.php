<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Futures\FuturesPublic;
use JMS\Serializer\Serializer;
use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Internal\Interfaces\WebSocketMessageCallback;
use KuCoin\UniversalSDK\Model\WsMessage;

class ExecutionEvent implements Response
{
    /**
     *
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     *
     * @var int $sequence
     * @Type("int")
     * @SerializedName("sequence")
     */
    public $sequence;
    /**
     *
     * @var string $side
     * @Type("string")
     * @SerializedName("side")
     */
    public $side;
    /**
     *
     * @var int $size
     * @Type("int")
     * @SerializedName("size")
     */
    public $size;
    /**
     *
     * @var string $price
     * @Type("string")
     * @SerializedName("price")
     */
    public $price;
    /**
     *
     * @var string $takerOrderId
     * @Type("string")
     * @SerializedName("takerOrderId")
     */
    public $takerOrderId;
    /**
     *
     * @var string $makerOrderId
     * @Type("string")
     * @SerializedName("makerOrderId")
     */
    public $makerOrderId;
    /**
     *
     * @var string $tradeId
     * @Type("string")
     * @SerializedName("tradeId")
     */
    public $tradeId;
    /**
     *
     * @var int $ts
     * @Type("int")
     * @SerializedName("ts")
     */
    public $ts;

    private function __construct() {}

    /**
     * common response
     * @Exclude()
     * @var WsMessage $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }
    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize($json, ExecutionEvent::class, "json");
    }

    /**
     * @param callable $callback function(string $topic, string $subject, ExecutionEvent $data): void
     */
    public static function createCallback(
        callable $callback
    ): ExecutionEventCallbackWrapper {
        return new ExecutionEventCallbackWrapper($callback);
    }
}

class ExecutionEventCallbackWrapper implements WebSocketMessageCallback
{
    /**
     * @var callable
     */
    private $callback;

    /**
     * @param callable $callback function(string $topic, string $subject, ExecutionEvent $data): void
     */
    public function __construct(callable $callback)
    {
        $this->callback = $callback;
    }

    public function onMessage(WsMessage $msg, Serializer $serializer)
    {
        $event = ExecutionEvent::jsonDeserialize(
            $serializer->serialize($msg->rawData, "json"),
            $serializer
        );
        $event->setCommonResponse($msg);
        call_user_func($this->callback, $msg->topic, $msg->subject, $event);
    }
}
