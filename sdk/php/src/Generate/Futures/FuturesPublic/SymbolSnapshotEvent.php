<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Futures\FuturesPublic;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Internal\Interfaces\WebSocketMessageCallback;
use KuCoin\UniversalSDK\Model\WsMessage;
use JMS\Serializer\Serializer;

class SymbolSnapshotEvent implements Response
{
    /**
     *
     * @var float $highPrice
     * @Type("float")
     * @SerializedName("highPrice")
     */
    public $highPrice;
    /**
     *
     * @var float $lastPrice
     * @Type("float")
     * @SerializedName("lastPrice")
     */
    public $lastPrice;
    /**
     *
     * @var float $lowPrice
     * @Type("float")
     * @SerializedName("lowPrice")
     */
    public $lowPrice;
    /**
     *
     * @var float $price24HoursBefore
     * @Type("float")
     * @SerializedName("price24HoursBefore")
     */
    public $price24HoursBefore;
    /**
     *
     * @var float $priceChg
     * @Type("float")
     * @SerializedName("priceChg")
     */
    public $priceChg;
    /**
     *
     * @var float $priceChgPct
     * @Type("float")
     * @SerializedName("priceChgPct")
     */
    public $priceChgPct;
    /**
     *
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     *
     * @var int $ts
     * @Type("int")
     * @SerializedName("ts")
     */
    public $ts;
    /**
     *
     * @var float $turnover
     * @Type("float")
     * @SerializedName("turnover")
     */
    public $turnover;
    /**
     *
     * @var float $volume
     * @Type("float")
     * @SerializedName("volume")
     */
    public $volume;

    private function __construct() {}

    /**
     * common response
     * @Exclude()
     * @var WsMessage $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }
    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            SymbolSnapshotEvent::class,
            "json"
        );
    }
}

class SymbolSnapshotEventCallbackWrapper implements WebSocketMessageCallback
{
    /**
     * @var callable
     */
    private $callback;

    /**
     * @param callable $callback function(string $topic, string $subject, SymbolSnapshotEvent $data): void
     */
    public function __construct(callable $callback)
    {
        $this->callback = $callback;
    }

    public function onMessage(WsMessage $msg, Serializer $serializer)
    {
        $event = SymbolSnapshotEvent::jsonDeserialize(
            $msg->rawData,
            $serializer
        );
        $event->setCommonResponse($msg);
        $this->callback($msg->topic, $msg->subject, $event);
    }
}
