<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Futures\Order;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class BatchAddOrdersData implements Serializable
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * The unique order id generated by the trading system,which can be used later for further actions such as canceling the order.
     * @var string $orderId
     * @Type("string")
     * @SerializedName("orderId")
     */
    public $orderId;
    /**
     * Unique order id created by users to identify their orders, the maximum length cannot exceed 40, e.g. UUID, Only allows numbers, characters, underline(_), and separator(-)
     * @var string $clientOid
     * @Type("string")
     * @SerializedName("clientOid")
     */
    public $clientOid;
    /**
     * Symbol of the contract, Please refer to [Get Symbol endpoint: symbol](https://www.kucoin.com/docs-new/api-3470220)
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     *
     * @var string $code
     * @Type("string")
     * @SerializedName("code")
     */
    public $code;
    /**
     *
     * @var string $msg
     * @Type("string")
     * @SerializedName("msg")
     */
    public $msg;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            BatchAddOrdersData::class,
            "json"
        );
    }
}
