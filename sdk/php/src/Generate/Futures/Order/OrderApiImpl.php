<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Futures\Order;
use KuCoin\UniversalSDK\Internal\Interfaces\Transport;

class OrderApiImpl implements OrderApi
{
    private $transport;

    public function __construct(Transport $transport)
    {
        $this->transport = $transport;
    }

    public function addOrder(AddOrderReq $req): AddOrderResp
    {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/orders",
            $req,
            AddOrderResp::class,
            false
        );
    }

    public function addOrderTest(AddOrderTestReq $req): AddOrderTestResp
    {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/orders/test",
            $req,
            AddOrderTestResp::class,
            false
        );
    }

    public function batchAddOrders(BatchAddOrdersReq $req): BatchAddOrdersResp
    {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/orders/multi",
            $req,
            BatchAddOrdersResp::class,
            false
        );
    }

    public function addTPSLOrder(AddTPSLOrderReq $req): AddTPSLOrderResp
    {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/st-orders",
            $req,
            AddTPSLOrderResp::class,
            false
        );
    }

    public function cancelOrderById(
        CancelOrderByIdReq $req
    ): CancelOrderByIdResp {
        return $this->transport->call(
            "futures",
            false,
            "DELETE",
            "/api/v1/orders/{orderId}",
            $req,
            CancelOrderByIdResp::class,
            false
        );
    }

    public function cancelOrderByClientOid(
        CancelOrderByClientOidReq $req
    ): CancelOrderByClientOidResp {
        return $this->transport->call(
            "futures",
            false,
            "DELETE",
            "/api/v1/orders/client-order/{clientOid}",
            $req,
            CancelOrderByClientOidResp::class,
            false
        );
    }

    public function batchCancelOrders(
        BatchCancelOrdersReq $req
    ): BatchCancelOrdersResp {
        return $this->transport->call(
            "futures",
            false,
            "DELETE",
            "/api/v1/orders/multi-cancel",
            $req,
            BatchCancelOrdersResp::class,
            true
        );
    }

    public function cancelAllOrdersV3(
        CancelAllOrdersV3Req $req
    ): CancelAllOrdersV3Resp {
        return $this->transport->call(
            "futures",
            false,
            "DELETE",
            "/api/v3/orders",
            $req,
            CancelAllOrdersV3Resp::class,
            false
        );
    }

    public function cancelAllStopOrders(
        CancelAllStopOrdersReq $req
    ): CancelAllStopOrdersResp {
        return $this->transport->call(
            "futures",
            false,
            "DELETE",
            "/api/v1/stopOrders",
            $req,
            CancelAllStopOrdersResp::class,
            false
        );
    }

    public function getOrderByOrderId(
        GetOrderByOrderIdReq $req
    ): GetOrderByOrderIdResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/orders/{order-id}",
            $req,
            GetOrderByOrderIdResp::class,
            false
        );
    }

    public function getOrderByClientOid(
        GetOrderByClientOidReq $req
    ): GetOrderByClientOidResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/orders/byClientOid",
            $req,
            GetOrderByClientOidResp::class,
            false
        );
    }

    public function getOrderList(GetOrderListReq $req): GetOrderListResp
    {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/orders",
            $req,
            GetOrderListResp::class,
            false
        );
    }

    public function getRecentClosedOrders(
        GetRecentClosedOrdersReq $req
    ): GetRecentClosedOrdersResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/recentDoneOrders",
            $req,
            GetRecentClosedOrdersResp::class,
            false
        );
    }

    public function getStopOrderList(
        GetStopOrderListReq $req
    ): GetStopOrderListResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/stopOrders",
            $req,
            GetStopOrderListResp::class,
            false
        );
    }

    public function getOpenOrderValue(
        GetOpenOrderValueReq $req
    ): GetOpenOrderValueResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/openOrderStatistics",
            $req,
            GetOpenOrderValueResp::class,
            false
        );
    }

    public function getRecentTradeHistory(
        GetRecentTradeHistoryReq $req
    ): GetRecentTradeHistoryResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/recentFills",
            $req,
            GetRecentTradeHistoryResp::class,
            false
        );
    }

    public function getTradeHistory(
        GetTradeHistoryReq $req
    ): GetTradeHistoryResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/fills",
            $req,
            GetTradeHistoryResp::class,
            false
        );
    }

    public function cancelAllOrdersV1(
        CancelAllOrdersV1Req $req
    ): CancelAllOrdersV1Resp {
        return $this->transport->call(
            "futures",
            false,
            "DELETE",
            "/api/v1/orders",
            $req,
            CancelAllOrdersV1Resp::class,
            false
        );
    }
}
