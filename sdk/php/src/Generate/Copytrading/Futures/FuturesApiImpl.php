<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Copytrading\Futures;
use KuCoin\UniversalSDK\Internal\Interfaces\Transport;

class FuturesApiImpl implements FuturesApi
{
    private $transport;

    public function __construct(Transport $transport)
    {
        $this->transport = $transport;
    }

    public function addOrder(AddOrderReq $req): AddOrderResp
    {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/copy-trade/futures/orders",
            $req,
            AddOrderResp::class,
            false
        );
    }

    public function addOrderTest(AddOrderTestReq $req): AddOrderTestResp
    {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/copy-trade/futures/orders/test",
            $req,
            AddOrderTestResp::class,
            false
        );
    }

    public function addTPSLOrder(AddTPSLOrderReq $req): AddTPSLOrderResp
    {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/copy-trade/futures/st-orders",
            $req,
            AddTPSLOrderResp::class,
            false
        );
    }

    public function cancelOrderById(
        CancelOrderByIdReq $req
    ): CancelOrderByIdResp {
        return $this->transport->call(
            "futures",
            false,
            "DELETE",
            "/api/v1/copy-trade/futures/orders",
            $req,
            CancelOrderByIdResp::class,
            false
        );
    }

    public function cancelOrderByClientOid(
        CancelOrderByClientOidReq $req
    ): CancelOrderByClientOidResp {
        return $this->transport->call(
            "futures",
            false,
            "DELETE",
            "/api/v1/copy-trade/futures/orders/client-order",
            $req,
            CancelOrderByClientOidResp::class,
            false
        );
    }

    public function getMaxOpenSize(GetMaxOpenSizeReq $req): GetMaxOpenSizeResp
    {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/copy-trade/futures/get-max-open-size",
            $req,
            GetMaxOpenSizeResp::class,
            false
        );
    }

    public function getMaxWithdrawMargin(
        GetMaxWithdrawMarginReq $req
    ): GetMaxWithdrawMarginResp {
        return $this->transport->call(
            "futures",
            false,
            "GET",
            "/api/v1/copy-trade/futures/position/margin/max-withdraw-margin",
            $req,
            GetMaxWithdrawMarginResp::class,
            false
        );
    }

    public function addIsolatedMargin(
        AddIsolatedMarginReq $req
    ): AddIsolatedMarginResp {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/copy-trade/futures/position/margin/deposit-margin",
            $req,
            AddIsolatedMarginResp::class,
            false
        );
    }

    public function removeIsolatedMargin(
        RemoveIsolatedMarginReq $req
    ): RemoveIsolatedMarginResp {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/copy-trade/futures/position/margin/withdraw-margin",
            $req,
            RemoveIsolatedMarginResp::class,
            false
        );
    }

    public function modifyIsolatedMarginRiskLimt(
        ModifyIsolatedMarginRiskLimtReq $req
    ): ModifyIsolatedMarginRiskLimtResp {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/copy-trade/futures/position/risk-limit-level/change",
            $req,
            ModifyIsolatedMarginRiskLimtResp::class,
            false
        );
    }

    public function modifyAutoDepositStatus(
        ModifyAutoDepositStatusReq $req
    ): ModifyAutoDepositStatusResp {
        return $this->transport->call(
            "futures",
            false,
            "POST",
            "/api/v1/copy-trade/futures/position/margin/auto-deposit-status",
            $req,
            ModifyAutoDepositStatusResp::class,
            false
        );
    }
}
