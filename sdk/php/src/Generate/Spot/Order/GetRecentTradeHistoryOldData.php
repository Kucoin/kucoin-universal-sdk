<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Spot\Order;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class GetRecentTradeHistoryOldData implements Serializable
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     *
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     *
     * @var string $tradeId
     * @Type("string")
     * @SerializedName("tradeId")
     */
    public $tradeId;
    /**
     *
     * @var string $orderId
     * @Type("string")
     * @SerializedName("orderId")
     */
    public $orderId;
    /**
     *
     * @var string $counterOrderId
     * @Type("string")
     * @SerializedName("counterOrderId")
     */
    public $counterOrderId;
    /**
     *
     * @var string $side
     * @Type("string")
     * @SerializedName("side")
     */
    public $side;
    /**
     *
     * @var string $liquidity
     * @Type("string")
     * @SerializedName("liquidity")
     */
    public $liquidity;
    /**
     *
     * @var bool $forceTaker
     * @Type("bool")
     * @SerializedName("forceTaker")
     */
    public $forceTaker;
    /**
     *
     * @var string $price
     * @Type("string")
     * @SerializedName("price")
     */
    public $price;
    /**
     *
     * @var string $size
     * @Type("string")
     * @SerializedName("size")
     */
    public $size;
    /**
     *
     * @var string $funds
     * @Type("string")
     * @SerializedName("funds")
     */
    public $funds;
    /**
     *
     * @var string $fee
     * @Type("string")
     * @SerializedName("fee")
     */
    public $fee;
    /**
     *
     * @var string $feeRate
     * @Type("string")
     * @SerializedName("feeRate")
     */
    public $feeRate;
    /**
     *
     * @var string $feeCurrency
     * @Type("string")
     * @SerializedName("feeCurrency")
     */
    public $feeCurrency;
    /**
     *
     * @var string $stop
     * @Type("string")
     * @SerializedName("stop")
     */
    public $stop;
    /**
     *
     * @var string $tradeType
     * @Type("string")
     * @SerializedName("tradeType")
     */
    public $tradeType;
    /**
     *
     * @var string $type
     * @Type("string")
     * @SerializedName("type")
     */
    public $type;
    /**
     *
     * @var int $createdAt
     * @Type("int")
     * @SerializedName("createdAt")
     */
    public $createdAt;
    /**
     *
     * @var string|null $tax
     * @Type("string")
     * @SerializedName("tax")
     */
    public $tax;
    /**
     *
     * @var string|null $taxCurrency
     * @Type("string")
     * @SerializedName("taxCurrency")
     */
    public $taxCurrency;
    /**
     *
     * @var string|null $taxRate
     * @Type("string")
     * @SerializedName("taxRate")
     */
    public $taxRate;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json == null) {
            return new self();
        }
        return $serializer->deserialize(
            $json,
            GetRecentTradeHistoryOldData::class,
            "json"
        );
    }
}
