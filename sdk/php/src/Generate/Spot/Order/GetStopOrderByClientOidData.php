<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Spot\Order;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Request;

class GetStopOrderByClientOidData implements Request
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * Order ID, the ID of an order.
     * @var string|null $id
     * @Type("string")
     * @SerializedName("id")
     */
    public $id;
    /**
     * Symbol name
     * @var string|null $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     * User ID
     * @var string|null $userId
     * @Type("string")
     * @SerializedName("userId")
     */
    public $userId;
    /**
     * Order status, include NEW, TRIGGERED
     * @var string|null $status
     * @Type("string")
     * @SerializedName("status")
     */
    public $status;
    /**
     * Order type
     * @var string|null $type
     * @Type("string")
     * @SerializedName("type")
     */
    public $type;
    /**
     * transaction direction,include buy and sell
     * @var string|null $side
     * @Type("string")
     * @SerializedName("side")
     */
    public $side;
    /**
     * order price
     * @var string|null $price
     * @Type("string")
     * @SerializedName("price")
     */
    public $price;
    /**
     * order quantity
     * @var string|null $size
     * @Type("string")
     * @SerializedName("size")
     */
    public $size;
    /**
     * order funds
     * @var string|null $funds
     * @Type("string")
     * @SerializedName("funds")
     */
    public $funds;
    /**
     *
     * @var string|null $stp
     * @Type("string")
     * @SerializedName("stp")
     */
    public $stp;
    /**
     * time InForce,include GTC,GTT,IOC,FOK
     * @var string|null $timeInForce
     * @Type("string")
     * @SerializedName("timeInForce")
     */
    public $timeInForce;
    /**
     * cancel orders after n seconds，requires timeInForce to be GTT
     * @var int|null $cancelAfter
     * @Type("int")
     * @SerializedName("cancelAfter")
     */
    public $cancelAfter;
    /**
     * postOnly
     * @var bool|null $postOnly
     * @Type("bool")
     * @SerializedName("postOnly")
     */
    public $postOnly;
    /**
     * hidden order
     * @var bool|null $hidden
     * @Type("bool")
     * @SerializedName("hidden")
     */
    public $hidden;
    /**
     * Iceberg order
     * @var bool|null $iceberg
     * @Type("bool")
     * @SerializedName("iceberg")
     */
    public $iceberg;
    /**
     * displayed quantity for iceberg order
     * @var string|null $visibleSize
     * @Type("string")
     * @SerializedName("visibleSize")
     */
    public $visibleSize;
    /**
     * order source
     * @var string|null $channel
     * @Type("string")
     * @SerializedName("channel")
     */
    public $channel;
    /**
     * user-entered order unique mark
     * @var string|null $clientOid
     * @Type("string")
     * @SerializedName("clientOid")
     */
    public $clientOid;
    /**
     * Remarks at stop order creation
     * @var string|null $remark
     * @Type("string")
     * @SerializedName("remark")
     */
    public $remark;
    /**
     * tag order source
     * @var string|null $tags
     * @Type("string")
     * @SerializedName("tags")
     */
    public $tags;
    /**
     * domainId, e.g: kucoin
     * @var string|null $domainId
     * @Type("string")
     * @SerializedName("domainId")
     */
    public $domainId;
    /**
     * trade source: USER（Order by user）, MARGIN_SYSTEM（Order by margin system）
     * @var string|null $tradeSource
     * @Type("string")
     * @SerializedName("tradeSource")
     */
    public $tradeSource;
    /**
     * The type of trading : TRADE（Spot）, MARGIN_TRADE (Cross Margin), MARGIN_ISOLATED_TRADE (Isolated Margin).
     * @var string|null $tradeType
     * @Type("string")
     * @SerializedName("tradeType")
     */
    public $tradeType;
    /**
     * The currency of the fee
     * @var string|null $feeCurrency
     * @Type("string")
     * @SerializedName("feeCurrency")
     */
    public $feeCurrency;
    /**
     * Fee Rate of taker
     * @var string|null $takerFeeRate
     * @Type("string")
     * @SerializedName("takerFeeRate")
     */
    public $takerFeeRate;
    /**
     * Fee Rate of maker
     * @var string|null $makerFeeRate
     * @Type("string")
     * @SerializedName("makerFeeRate")
     */
    public $makerFeeRate;
    /**
     * order creation time
     * @var int|null $createdAt
     * @Type("int")
     * @SerializedName("createdAt")
     */
    public $createdAt;
    /**
     * Stop order type, include loss and entry
     * @var string|null $stop
     * @Type("string")
     * @SerializedName("stop")
     */
    public $stop;
    /**
     * The trigger time of the stop order
     * @var int|null $stopTriggerTime
     * @Type("int")
     * @SerializedName("stopTriggerTime")
     */
    public $stopTriggerTime;
    /**
     * stop price
     * @var string|null $stopPrice
     * @Type("string")
     * @SerializedName("stopPrice")
     */
    public $stopPrice;
    /**
     * Time of place a stop order, accurate to nanoseconds
     * @var int|null $orderTime
     * @Type("int")
     * @SerializedName("orderTime")
     */
    public $orderTime;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            GetStopOrderByClientOidData::class,
            "json"
        );
    }
}
