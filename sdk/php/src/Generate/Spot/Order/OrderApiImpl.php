<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Spot\Order;
use KuCoin\UniversalSDK\Internal\Interfaces\Transport;

class OrderApiImpl implements OrderApi
{
    private $transport;

    public function __construct(Transport $transport)
    {
        $this->transport = $transport;
    }

    public function addOrder(AddOrderReq $req): AddOrderResp
    {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v1/hf/orders",
            $req,
            AddOrderResp::class,
            false
        );
    }

    public function addOrderSync(AddOrderSyncReq $req): AddOrderSyncResp
    {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v1/hf/orders/sync",
            $req,
            AddOrderSyncResp::class,
            false
        );
    }

    public function addOrderTest(AddOrderTestReq $req): AddOrderTestResp
    {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v1/hf/orders/test",
            $req,
            AddOrderTestResp::class,
            false
        );
    }

    public function batchAddOrders(BatchAddOrdersReq $req): BatchAddOrdersResp
    {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v1/hf/orders/multi",
            $req,
            BatchAddOrdersResp::class,
            false
        );
    }

    public function batchAddOrdersSync(
        BatchAddOrdersSyncReq $req
    ): BatchAddOrdersSyncResp {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v1/hf/orders/multi/sync",
            $req,
            BatchAddOrdersSyncResp::class,
            false
        );
    }

    public function cancelOrderByOrderId(
        CancelOrderByOrderIdReq $req
    ): CancelOrderByOrderIdResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/hf/orders/{orderId}",
            $req,
            CancelOrderByOrderIdResp::class,
            false
        );
    }

    public function cancelOrderByOrderIdSync(
        CancelOrderByOrderIdSyncReq $req
    ): CancelOrderByOrderIdSyncResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/hf/orders/sync/{orderId}",
            $req,
            CancelOrderByOrderIdSyncResp::class,
            false
        );
    }

    public function cancelOrderByClientOid(
        CancelOrderByClientOidReq $req
    ): CancelOrderByClientOidResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/hf/orders/client-order/{clientOid}",
            $req,
            CancelOrderByClientOidResp::class,
            false
        );
    }

    public function cancelOrderByClientOidSync(
        CancelOrderByClientOidSyncReq $req
    ): CancelOrderByClientOidSyncResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/hf/orders/sync/client-order/{clientOid}",
            $req,
            CancelOrderByClientOidSyncResp::class,
            false
        );
    }

    public function cancelPartialOrder(
        CancelPartialOrderReq $req
    ): CancelPartialOrderResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/hf/orders/cancel/{orderId}",
            $req,
            CancelPartialOrderResp::class,
            false
        );
    }

    public function cancelAllOrdersBySymbol(
        CancelAllOrdersBySymbolReq $req
    ): CancelAllOrdersBySymbolResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/hf/orders",
            $req,
            CancelAllOrdersBySymbolResp::class,
            false
        );
    }

    public function cancelAllOrders(): CancelAllOrdersResp
    {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/hf/orders/cancelAll",
            null,
            CancelAllOrdersResp::class,
            false
        );
    }

    public function modifyOrder(ModifyOrderReq $req): ModifyOrderResp
    {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v1/hf/orders/alter",
            $req,
            ModifyOrderResp::class,
            false
        );
    }

    public function getOrderByOrderId(
        GetOrderByOrderIdReq $req
    ): GetOrderByOrderIdResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/hf/orders/{orderId}",
            $req,
            GetOrderByOrderIdResp::class,
            false
        );
    }

    public function getOrderByClientOid(
        GetOrderByClientOidReq $req
    ): GetOrderByClientOidResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/hf/orders/client-order/{clientOid}",
            $req,
            GetOrderByClientOidResp::class,
            false
        );
    }

    public function getSymbolsWithOpenOrder(): GetSymbolsWithOpenOrderResp
    {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/hf/orders/active/symbols",
            null,
            GetSymbolsWithOpenOrderResp::class,
            false
        );
    }

    public function getOpenOrders(GetOpenOrdersReq $req): GetOpenOrdersResp
    {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/hf/orders/active",
            $req,
            GetOpenOrdersResp::class,
            false
        );
    }

    public function getOpenOrdersByPage(
        GetOpenOrdersByPageReq $req
    ): GetOpenOrdersByPageResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/hf/orders/active/page",
            $req,
            GetOpenOrdersByPageResp::class,
            false
        );
    }

    public function getClosedOrders(
        GetClosedOrdersReq $req
    ): GetClosedOrdersResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/hf/orders/done",
            $req,
            GetClosedOrdersResp::class,
            false
        );
    }

    public function getTradeHistory(
        GetTradeHistoryReq $req
    ): GetTradeHistoryResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/hf/fills",
            $req,
            GetTradeHistoryResp::class,
            false
        );
    }

    public function getDCP(): GetDCPResp
    {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/hf/orders/dead-cancel-all/query",
            null,
            GetDCPResp::class,
            false
        );
    }

    public function setDCP(SetDCPReq $req): SetDCPResp
    {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v1/hf/orders/dead-cancel-all",
            $req,
            SetDCPResp::class,
            false
        );
    }

    public function addStopOrder(AddStopOrderReq $req): AddStopOrderResp
    {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v1/stop-order",
            $req,
            AddStopOrderResp::class,
            false
        );
    }

    public function cancelStopOrderByClientOid(
        CancelStopOrderByClientOidReq $req
    ): CancelStopOrderByClientOidResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/stop-order/cancelOrderByClientOid",
            $req,
            CancelStopOrderByClientOidResp::class,
            false
        );
    }

    public function cancelStopOrderByOrderId(
        CancelStopOrderByOrderIdReq $req
    ): CancelStopOrderByOrderIdResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/stop-order/{orderId}",
            $req,
            CancelStopOrderByOrderIdResp::class,
            false
        );
    }

    public function batchCancelStopOrder(
        BatchCancelStopOrderReq $req
    ): BatchCancelStopOrderResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/stop-order/cancel",
            $req,
            BatchCancelStopOrderResp::class,
            false
        );
    }

    public function getStopOrdersList(
        GetStopOrdersListReq $req
    ): GetStopOrdersListResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/stop-order",
            $req,
            GetStopOrdersListResp::class,
            false
        );
    }

    public function getStopOrderByOrderId(
        GetStopOrderByOrderIdReq $req
    ): GetStopOrderByOrderIdResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/stop-order/{orderId}",
            $req,
            GetStopOrderByOrderIdResp::class,
            false
        );
    }

    public function getStopOrderByClientOid(
        GetStopOrderByClientOidReq $req
    ): GetStopOrderByClientOidResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/stop-order/queryOrderByClientOid",
            $req,
            GetStopOrderByClientOidResp::class,
            false
        );
    }

    public function addOcoOrder(AddOcoOrderReq $req): AddOcoOrderResp
    {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v3/oco/order",
            $req,
            AddOcoOrderResp::class,
            false
        );
    }

    public function cancelOcoOrderByOrderId(
        CancelOcoOrderByOrderIdReq $req
    ): CancelOcoOrderByOrderIdResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v3/oco/order/{orderId}",
            $req,
            CancelOcoOrderByOrderIdResp::class,
            false
        );
    }

    public function cancelOcoOrderByClientOid(
        CancelOcoOrderByClientOidReq $req
    ): CancelOcoOrderByClientOidResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v3/oco/client-order/{clientOid}",
            $req,
            CancelOcoOrderByClientOidResp::class,
            false
        );
    }

    public function batchCancelOcoOrders(
        BatchCancelOcoOrdersReq $req
    ): BatchCancelOcoOrdersResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v3/oco/orders",
            $req,
            BatchCancelOcoOrdersResp::class,
            false
        );
    }

    public function getOcoOrderByOrderId(
        GetOcoOrderByOrderIdReq $req
    ): GetOcoOrderByOrderIdResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v3/oco/order/{orderId}",
            $req,
            GetOcoOrderByOrderIdResp::class,
            false
        );
    }

    public function getOcoOrderByClientOid(
        GetOcoOrderByClientOidReq $req
    ): GetOcoOrderByClientOidResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v3/oco/client-order/{clientOid}",
            $req,
            GetOcoOrderByClientOidResp::class,
            false
        );
    }

    public function getOcoOrderDetailByOrderId(
        GetOcoOrderDetailByOrderIdReq $req
    ): GetOcoOrderDetailByOrderIdResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v3/oco/order/details/{orderId}",
            $req,
            GetOcoOrderDetailByOrderIdResp::class,
            false
        );
    }

    public function getOcoOrderList(
        GetOcoOrderListReq $req
    ): GetOcoOrderListResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v3/oco/orders",
            $req,
            GetOcoOrderListResp::class,
            false
        );
    }

    public function addOrderOld(AddOrderOldReq $req): AddOrderOldResp
    {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v1/orders",
            $req,
            AddOrderOldResp::class,
            false
        );
    }

    public function addOrderTestOld(
        AddOrderTestOldReq $req
    ): AddOrderTestOldResp {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v1/orders/test",
            $req,
            AddOrderTestOldResp::class,
            false
        );
    }

    public function batchAddOrdersOld(
        BatchAddOrdersOldReq $req
    ): BatchAddOrdersOldResp {
        return $this->transport->call(
            "spot",
            false,
            "POST",
            "/api/v1/orders/multi",
            $req,
            BatchAddOrdersOldResp::class,
            false
        );
    }

    public function cancelOrderByOrderIdOld(
        CancelOrderByOrderIdOldReq $req
    ): CancelOrderByOrderIdOldResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/orders/{orderId}",
            $req,
            CancelOrderByOrderIdOldResp::class,
            false
        );
    }

    public function cancelOrderByClientOidOld(
        CancelOrderByClientOidOldReq $req
    ): CancelOrderByClientOidOldResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/order/client-order/{clientOid}",
            $req,
            CancelOrderByClientOidOldResp::class,
            false
        );
    }

    public function batchCancelOrderOld(
        BatchCancelOrderOldReq $req
    ): BatchCancelOrderOldResp {
        return $this->transport->call(
            "spot",
            false,
            "DELETE",
            "/api/v1/orders",
            $req,
            BatchCancelOrderOldResp::class,
            false
        );
    }

    public function getOrdersListOld(
        GetOrdersListOldReq $req
    ): GetOrdersListOldResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/orders",
            $req,
            GetOrdersListOldResp::class,
            false
        );
    }

    public function getRecentOrdersListOld(): GetRecentOrdersListOldResp
    {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/limit/orders",
            null,
            GetRecentOrdersListOldResp::class,
            false
        );
    }

    public function getOrderByOrderIdOld(
        GetOrderByOrderIdOldReq $req
    ): GetOrderByOrderIdOldResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/orders/{orderId}",
            $req,
            GetOrderByOrderIdOldResp::class,
            false
        );
    }

    public function getOrderByClientOidOld(
        GetOrderByClientOidOldReq $req
    ): GetOrderByClientOidOldResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/order/client-order/{clientOid}",
            $req,
            GetOrderByClientOidOldResp::class,
            false
        );
    }

    public function getTradeHistoryOld(
        GetTradeHistoryOldReq $req
    ): GetTradeHistoryOldResp {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/fills",
            $req,
            GetTradeHistoryOldResp::class,
            false
        );
    }

    public function getRecentTradeHistoryOld(): GetRecentTradeHistoryOldResp
    {
        return $this->transport->call(
            "spot",
            false,
            "GET",
            "/api/v1/limit/fills",
            null,
            GetRecentTradeHistoryOldResp::class,
            false
        );
    }
}
