<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Spot\Order;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class BatchAddOrdersSyncData implements Serializable
{
    /**
     * The unique order ID generated by the trading system, which can be used later for further actions such as canceling the order.
     * @var string|null $orderId
     * @Type("string")
     * @SerializedName("orderId")
     */
    public $orderId;
    /**
     * The user self-defined order ID.
     * @var string|null $clientOid
     * @Type("string")
     * @SerializedName("clientOid")
     */
    public $clientOid;
    /**
     *
     * @var int|null $orderTime
     * @Type("int")
     * @SerializedName("orderTime")
     */
    public $orderTime;
    /**
     * Original order size
     * @var string|null $originSize
     * @Type("string")
     * @SerializedName("originSize")
     */
    public $originSize;
    /**
     * Deal size
     * @var string|null $dealSize
     * @Type("string")
     * @SerializedName("dealSize")
     */
    public $dealSize;
    /**
     * Remain size
     * @var string|null $remainSize
     * @Type("string")
     * @SerializedName("remainSize")
     */
    public $remainSize;
    /**
     * Cumulative canceled size
     * @var string|null $canceledSize
     * @Type("string")
     * @SerializedName("canceledSize")
     */
    public $canceledSize;
    /**
     * Order Status. open: order is active; done: order has been completed
     * - 'open' :
     * - 'done' :
     * @var string|null $status
     * @Type("string")
     * @SerializedName("status")
     */
    public $status;
    /**
     *
     * @var int|null $matchTime
     * @Type("int")
     * @SerializedName("matchTime")
     */
    public $matchTime;
    /**
     * Add order success/failure
     * @var bool $success
     * @Type("bool")
     * @SerializedName("success")
     */
    public $success;
    /**
     * Error message
     * @var string|null $failMsg
     * @Type("string")
     * @SerializedName("failMsg")
     */
    public $failMsg;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json === null) {
            return new self();
        }
        return $serializer->deserialize(
            $json,
            BatchAddOrdersSyncData::class,
            "json"
        );
    }
}
