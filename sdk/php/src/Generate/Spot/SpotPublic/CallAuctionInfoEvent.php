<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Spot\SpotPublic;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Internal\Interfaces\WebSocketMessageCallback;
use KuCoin\UniversalSDK\Model\WsMessage;
use JMS\Serializer\Serializer;

class CallAuctionInfoEvent implements Response
{
    /**
     * Symbol
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     * Estimated price
     * @var string $estimatedPrice
     * @Type("string")
     * @SerializedName("estimatedPrice")
     */
    public $estimatedPrice;
    /**
     * Estimated size
     * @var string $estimatedSize
     * @Type("string")
     * @SerializedName("estimatedSize")
     */
    public $estimatedSize;
    /**
     * Sell ​​order minimum price
     * @var string $sellOrderRangeLowPrice
     * @Type("string")
     * @SerializedName("sellOrderRangeLowPrice")
     */
    public $sellOrderRangeLowPrice;
    /**
     * Sell ​​order maximum price
     * @var string $sellOrderRangeHighPrice
     * @Type("string")
     * @SerializedName("sellOrderRangeHighPrice")
     */
    public $sellOrderRangeHighPrice;
    /**
     * Buy ​​order minimum price
     * @var string $buyOrderRangeLowPrice
     * @Type("string")
     * @SerializedName("buyOrderRangeLowPrice")
     */
    public $buyOrderRangeLowPrice;
    /**
     * Buy ​​order maximum price
     * @var string $buyOrderRangeHighPrice
     * @Type("string")
     * @SerializedName("buyOrderRangeHighPrice")
     */
    public $buyOrderRangeHighPrice;
    /**
     * Timestamp (ms)
     * @var int $time
     * @Type("int")
     * @SerializedName("time")
     */
    public $time;

    private function __construct() {}

    /**
     * common response
     * @Exclude()
     * @var WsMessage $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }
    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            CallAuctionInfoEvent::class,
            "json"
        );
    }

    /**
     * @param callable $callback function(string $topic, string $subject, CallAuctionInfoEvent $data): void
     */
    public static function createCallback(
        callable $callback
    ): CallAuctionInfoEventCallbackWrapper {
        return new CallAuctionInfoEventCallbackWrapper($callback);
    }
}

class CallAuctionInfoEventCallbackWrapper implements WebSocketMessageCallback
{
    /**
     * @var callable
     */
    private $callback;

    /**
     * @param callable $callback function(string $topic, string $subject, CallAuctionInfoEvent $data): void
     */
    public function __construct(callable $callback)
    {
        $this->callback = $callback;
    }

    public function onMessage(WsMessage $msg, Serializer $serializer)
    {
        $event = CallAuctionInfoEvent::jsonDeserialize(
            $msg->rawData,
            $serializer
        );
        $event->setCommonResponse($msg);
        $this->callback($msg->topic, $msg->subject, $event);
    }
}
