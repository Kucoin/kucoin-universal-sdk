<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Spot\SpotPublic;
use JMS\Serializer\Serializer;
use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class SymbolSnapshotData implements Serializable
{
    /**
     *
     * @var float $askSize
     * @Type("float")
     * @SerializedName("askSize")
     */
    public $askSize;
    /**
     *
     * @var float $averagePrice
     * @Type("float")
     * @SerializedName("averagePrice")
     */
    public $averagePrice;
    /**
     *
     * @var string $baseCurrency
     * @Type("string")
     * @SerializedName("baseCurrency")
     */
    public $baseCurrency;
    /**
     *
     * @var float $bidSize
     * @Type("float")
     * @SerializedName("bidSize")
     */
    public $bidSize;
    /**
     * Trading pair partition: 0. Primary partition 1.KuCoin Plus\", example = \"1\"
     * @var int $board
     * @Type("int")
     * @SerializedName("board")
     */
    public $board;
    /**
     *
     * @var float $buy
     * @Type("float")
     * @SerializedName("buy")
     */
    public $buy;
    /**
     *
     * @var float $changePrice
     * @Type("float")
     * @SerializedName("changePrice")
     */
    public $changePrice;
    /**
     *
     * @var float $changeRate
     * @Type("float")
     * @SerializedName("changeRate")
     */
    public $changeRate;
    /**
     *
     * @var float $close
     * @Type("float")
     * @SerializedName("close")
     */
    public $close;
    /**
     *
     * @var int $datetime
     * @Type("int")
     * @SerializedName("datetime")
     */
    public $datetime;
    /**
     *
     * @var float $high
     * @Type("float")
     * @SerializedName("high")
     */
    public $high;
    /**
     *
     * @var float $lastTradedPrice
     * @Type("float")
     * @SerializedName("lastTradedPrice")
     */
    public $lastTradedPrice;
    /**
     *
     * @var float $low
     * @Type("float")
     * @SerializedName("low")
     */
    public $low;
    /**
     *
     * @var float $makerCoefficient
     * @Type("float")
     * @SerializedName("makerCoefficient")
     */
    public $makerCoefficient;
    /**
     *
     * @var float $makerFeeRate
     * @Type("float")
     * @SerializedName("makerFeeRate")
     */
    public $makerFeeRate;
    /**
     *
     * @var bool $marginTrade
     * @Type("bool")
     * @SerializedName("marginTrade")
     */
    public $marginTrade;
    /**
     * Trading Pair Mark: 0. Default 1.ST. 2.NEW\", example = \"1\"
     * @var int $mark
     * @Type("int")
     * @SerializedName("mark")
     */
    public $mark;
    /**
     *
     * @var string $market
     * @Type("string")
     * @SerializedName("market")
     */
    public $market;
    /**
     *
     * @var SymbolSnapshotDataMarketChange1h $marketChange1h
     * @Type("KuCoin\UniversalSDK\Generate\Spot\SpotPublic\SymbolSnapshotDataMarketChange1h")
     * @SerializedName("marketChange1h")
     */
    public $marketChange1h;
    /**
     *
     * @var SymbolSnapshotDataMarketChange24h $marketChange24h
     * @Type("KuCoin\UniversalSDK\Generate\Spot\SpotPublic\SymbolSnapshotDataMarketChange24h")
     * @SerializedName("marketChange24h")
     */
    public $marketChange24h;
    /**
     *
     * @var SymbolSnapshotDataMarketChange4h $marketChange4h
     * @Type("KuCoin\UniversalSDK\Generate\Spot\SpotPublic\SymbolSnapshotDataMarketChange4h")
     * @SerializedName("marketChange4h")
     */
    public $marketChange4h;
    /**
     *
     * @var string[] $markets
     * @Type("array<string>")
     * @SerializedName("markets")
     */
    public $markets;
    /**
     *
     * @var float $open
     * @Type("float")
     * @SerializedName("open")
     */
    public $open;
    /**
     *
     * @var string $quoteCurrency
     * @Type("string")
     * @SerializedName("quoteCurrency")
     */
    public $quoteCurrency;
    /**
     *
     * @var float $sell
     * @Type("float")
     * @SerializedName("sell")
     */
    public $sell;
    /**
     *
     * @var string[] $siteTypes
     * @Type("array<string>")
     * @SerializedName("siteTypes")
     */
    public $siteTypes;
    /**
     * sorting number(Pointless)
     * @var int $sort
     * @Type("int")
     * @SerializedName("sort")
     */
    public $sort;
    /**
     *
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     *
     * @var string $symbolCode
     * @Type("string")
     * @SerializedName("symbolCode")
     */
    public $symbolCode;
    /**
     *
     * @var float $takerCoefficient
     * @Type("float")
     * @SerializedName("takerCoefficient")
     */
    public $takerCoefficient;
    /**
     *
     * @var float $takerFeeRate
     * @Type("float")
     * @SerializedName("takerFeeRate")
     */
    public $takerFeeRate;
    /**
     *
     * @var bool $trading
     * @Type("bool")
     * @SerializedName("trading")
     */
    public $trading;
    /**
     *
     * @var float $vol
     * @Type("float")
     * @SerializedName("vol")
     */
    public $vol;
    /**
     * 24-hour rolling transaction volume, refreshed every 2s
     * @var float $volValue
     * @Type("float")
     * @SerializedName("volValue")
     */
    public $volValue;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            SymbolSnapshotData::class,
            "json"
        );
    }
}
