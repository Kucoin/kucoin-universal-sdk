<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Spot\Market;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Model\RestResponse;

class GetCurrencyResp implements Response
{
    /**
     * A unique currency code that will never change
     * @var string $currency
     * @Type("string")
     * @SerializedName("currency")
     */
    public $currency;
    /**
     * Currency name; will change after renaming
     * @var string $name
     * @Type("string")
     * @SerializedName("name")
     */
    public $name;
    /**
     * Full currency name; will change after renaming
     * @var string $fullName
     * @Type("string")
     * @SerializedName("fullName")
     */
    public $fullName;
    /**
     * Currency precision
     * @var int $precision
     * @Type("int")
     * @SerializedName("precision")
     */
    public $precision;
    /**
     * Number of block confirmations
     * @var int $confirms
     * @Type("int")
     * @SerializedName("confirms")
     */
    public $confirms;
    /**
     * Contract address
     * @var string $contractAddress
     * @Type("string")
     * @SerializedName("contractAddress")
     */
    public $contractAddress;
    /**
     * Margin support or not
     * @var bool $isMarginEnabled
     * @Type("bool")
     * @SerializedName("isMarginEnabled")
     */
    public $isMarginEnabled;
    /**
     * Debit support or not
     * @var bool $isDebitEnabled
     * @Type("bool")
     * @SerializedName("isDebitEnabled")
     */
    public $isDebitEnabled;
    /**
     * Chain list
     * @var GetCurrencyChains[] $chains
     * @Type("array<KuCoin\UniversalSDK\Generate\Spot\Market\GetCurrencyChains>")
     * @SerializedName("chains")
     */
    public $chains;

    /**
     * common response
     * @Exclude()
     * @var RestResponse $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json === null) {
            return new self();
        }
        return $serializer->deserialize($json, GetCurrencyResp::class, "json");
    }
}
