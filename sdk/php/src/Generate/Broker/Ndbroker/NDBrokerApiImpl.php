<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Broker\Ndbroker;
use KuCoin\UniversalSDK\Internal\Interfaces\Transport;

class NDBrokerApiImpl implements NDBrokerApi
{
    private $transport;

    public function __construct(Transport $transport)
    {
        $this->transport = $transport;
    }

    public function getBrokerInfo(GetBrokerInfoReq $req): GetBrokerInfoResp
    {
        return $this->transport->call(
            "broker",
            true,
            "GET",
            "/api/v1/broker/nd/info",
            $req,
            GetBrokerInfoResp::class,
            false
        );
    }

    public function addSubAccount(AddSubAccountReq $req): AddSubAccountResp
    {
        return $this->transport->call(
            "broker",
            true,
            "POST",
            "/api/v1/broker/nd/account",
            $req,
            AddSubAccountResp::class,
            false
        );
    }

    public function getSubAccount(GetSubAccountReq $req): GetSubAccountResp
    {
        return $this->transport->call(
            "broker",
            true,
            "GET",
            "/api/v1/broker/nd/account",
            $req,
            GetSubAccountResp::class,
            false
        );
    }

    public function addSubAccountApi(
        AddSubAccountApiReq $req
    ): AddSubAccountApiResp {
        return $this->transport->call(
            "broker",
            true,
            "POST",
            "/api/v1/broker/nd/account/apikey",
            $req,
            AddSubAccountApiResp::class,
            false
        );
    }

    public function getSubAccountAPI(
        GetSubAccountAPIReq $req
    ): GetSubAccountAPIResp {
        return $this->transport->call(
            "broker",
            true,
            "GET",
            "/api/v1/broker/nd/account/apikey",
            $req,
            GetSubAccountAPIResp::class,
            false
        );
    }

    public function modifySubAccountApi(
        ModifySubAccountApiReq $req
    ): ModifySubAccountApiResp {
        return $this->transport->call(
            "broker",
            true,
            "POST",
            "/api/v1/broker/nd/account/update-apikey",
            $req,
            ModifySubAccountApiResp::class,
            false
        );
    }

    public function deleteSubAccountAPI(
        DeleteSubAccountAPIReq $req
    ): DeleteSubAccountAPIResp {
        return $this->transport->call(
            "broker",
            true,
            "DELETE",
            "/api/v1/broker/nd/account/apikey",
            $req,
            DeleteSubAccountAPIResp::class,
            false
        );
    }

    public function transfer(TransferReq $req): TransferResp
    {
        return $this->transport->call(
            "broker",
            true,
            "POST",
            "/api/v1/broker/nd/transfer",
            $req,
            TransferResp::class,
            false
        );
    }

    public function getTransferHistory(
        GetTransferHistoryReq $req
    ): GetTransferHistoryResp {
        return $this->transport->call(
            "broker",
            true,
            "GET",
            "/api/v3/broker/nd/transfer/detail",
            $req,
            GetTransferHistoryResp::class,
            false
        );
    }

    public function getDepositList(GetDepositListReq $req): GetDepositListResp
    {
        return $this->transport->call(
            "broker",
            true,
            "GET",
            "/api/v1/asset/ndbroker/deposit/list",
            $req,
            GetDepositListResp::class,
            false
        );
    }

    public function getDepositDetail(
        GetDepositDetailReq $req
    ): GetDepositDetailResp {
        return $this->transport->call(
            "broker",
            true,
            "GET",
            "/api/v3/broker/nd/deposit/detail",
            $req,
            GetDepositDetailResp::class,
            false
        );
    }

    public function getWithdrawDetail(
        GetWithdrawDetailReq $req
    ): GetWithdrawDetailResp {
        return $this->transport->call(
            "broker",
            true,
            "GET",
            "/api/v3/broker/nd/withdraw/detail",
            $req,
            GetWithdrawDetailResp::class,
            false
        );
    }

    public function getRebase(GetRebaseReq $req): GetRebaseResp
    {
        return $this->transport->call(
            "broker",
            true,
            "GET",
            "/api/v1/broker/nd/rebase/download",
            $req,
            GetRebaseResp::class,
            false
        );
    }
}
