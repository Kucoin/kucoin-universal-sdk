<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Viplending\Viplending;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class GetLoanInfoLtv implements Serializable
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * LTV of Restricted Transfers to Funding Account
     * @var string $transferLtv
     * @Type("string")
     * @SerializedName("transferLtv")
     */
    public $transferLtv;
    /**
     * LTV of Reduce Only (Restricted Open Positions)
     * @var string $onlyClosePosLtv
     * @Type("string")
     * @SerializedName("onlyClosePosLtv")
     */
    public $onlyClosePosLtv;
    /**
     * LTV of Delayed Liquidation
     * @var string $delayedLiquidationLtv
     * @Type("string")
     * @SerializedName("delayedLiquidationLtv")
     */
    public $delayedLiquidationLtv;
    /**
     * LTV of Instant Liquidation
     * @var string $instantLiquidationLtv
     * @Type("string")
     * @SerializedName("instantLiquidationLtv")
     */
    public $instantLiquidationLtv;
    /**
     * Current LTV
     * @var string $currentLtv
     * @Type("string")
     * @SerializedName("currentLtv")
     */
    public $currentLtv;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize($json, GetLoanInfoLtv::class, "json");
    }
}
