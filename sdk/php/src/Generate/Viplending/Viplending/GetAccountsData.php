<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Viplending\Viplending;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class GetAccountsData implements Serializable
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * UID
     * @var string $uid
     * @Type("string")
     * @SerializedName("uid")
     */
    public $uid;
    /**
     * Margin Currency
     * @var string $marginCcy
     * @Type("string")
     * @SerializedName("marginCcy")
     */
    public $marginCcy;
    /**
     * Maintenance Quantity (Calculated with Margin Coefficient)
     * @var string $marginQty
     * @Type("string")
     * @SerializedName("marginQty")
     */
    public $marginQty;
    /**
     * Margin Coefficient
     * @var string $marginFactor
     * @Type("string")
     * @SerializedName("marginFactor")
     */
    public $marginFactor;
    /**
     * Account Type: TRADE - Trading Account CONTRACT - Futures Account (for Total Futures Equity)
     * @var string $accountType
     * @Type("string")
     * @SerializedName("accountType")
     */
    public $accountType;
    /**
     * If It Is Master Account
     * @var bool $isParent
     * @Type("bool")
     * @SerializedName("isParent")
     */
    public $isParent;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json == null) {
            return new self();
        }
        return $serializer->deserialize($json, GetAccountsData::class, "json");
    }
}
