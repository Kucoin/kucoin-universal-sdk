<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Fee;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Model\RestResponse;

class GetFuturesActualFeeResp implements Response
{
    /**
     * The unique identity of the trading pair; will not change even if the trading pair is renamed
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     * Actual taker fee rate of the trading pair
     * @var string $takerFeeRate
     * @Type("string")
     * @SerializedName("takerFeeRate")
     */
    public $takerFeeRate;
    /**
     * Actual maker fee rate of the trading pair
     * @var string $makerFeeRate
     * @Type("string")
     * @SerializedName("makerFeeRate")
     */
    public $makerFeeRate;

    /**
     * common response
     * @Exclude()
     * @var RestResponse $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json == null) {
            return new self();
        }
        return $serializer->deserialize(
            $json,
            GetFuturesActualFeeResp::class,
            "json"
        );
    }
}
