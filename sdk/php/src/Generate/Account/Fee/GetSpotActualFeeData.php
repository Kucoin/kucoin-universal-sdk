<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Fee;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Request;

class GetSpotActualFeeData implements Request
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * The unique identity of the trading pair; will not change even if the trading pair is renamed
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     * Actual taker fee rate of the symbol
     * @var string $takerFeeRate
     * @Type("string")
     * @SerializedName("takerFeeRate")
     */
    public $takerFeeRate;
    /**
     * Actual maker fee rate of the symbol
     * @var string $makerFeeRate
     * @Type("string")
     * @SerializedName("makerFeeRate")
     */
    public $makerFeeRate;
    /**
     * Buy tax rate; this field is visible to users in certain countries
     * @var string|null $sellTaxRate
     * @Type("string")
     * @SerializedName("sellTaxRate")
     */
    public $sellTaxRate;
    /**
     * Sell tax rate; this field is visible to users in certain countries
     * @var string|null $buyTaxRate
     * @Type("string")
     * @SerializedName("buyTaxRate")
     */
    public $buyTaxRate;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            GetSpotActualFeeData::class,
            "json"
        );
    }
}
