<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Account;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Request;

class GetSpotHFLedgerData implements Request
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * Unique ID
     * @var string $id
     * @Type("string")
     * @SerializedName("id")
     */
    public $id;
    /**
     * currency
     * @var string $currency
     * @Type("string")
     * @SerializedName("currency")
     */
    public $currency;
    /**
     * Change in funds balance
     * @var string $amount
     * @Type("string")
     * @SerializedName("amount")
     */
    public $amount;
    /**
     * Transaction, Deposit or withdrawal fee
     * @var string $fee
     * @Type("string")
     * @SerializedName("fee")
     */
    public $fee;
    /**
     *
     * @var string $tax
     * @Type("string")
     * @SerializedName("tax")
     */
    public $tax;
    /**
     * Total balance of funds after change
     * @var string $balance
     * @Type("string")
     * @SerializedName("balance")
     */
    public $balance;
    /**
     * Master account type TRADE_HF
     * @var string $accountType
     * @Type("string")
     * @SerializedName("accountType")
     */
    public $accountType;
    /**
     * Trnasaction type, such as TRANSFER, TRADE_EXCHANGE, etc.
     * @var string $bizType
     * @Type("string")
     * @SerializedName("bizType")
     */
    public $bizType;
    /**
     * Direction of transfer (out or in)
     * @var string $direction
     * @Type("string")
     * @SerializedName("direction")
     */
    public $direction;
    /**
     * Created time
     * @var string $createdAt
     * @Type("string")
     * @SerializedName("createdAt")
     */
    public $createdAt;
    /**
     * Core transaction parameter
     * @var string $context
     * @Type("string")
     * @SerializedName("context")
     */
    public $context;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            GetSpotHFLedgerData::class,
            "json"
        );
    }
}
