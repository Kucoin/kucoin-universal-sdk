<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Account;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class GetCrossMarginAccountAccounts implements Serializable
{
    /**
     * currency
     * @var string $currency
     * @Type("string")
     * @SerializedName("currency")
     */
    public $currency;
    /**
     * Total Assets
     * @var string $total
     * @Type("string")
     * @SerializedName("total")
     */
    public $total;
    /**
     * Account available assets (total assets - frozen)
     * @var string $available
     * @Type("string")
     * @SerializedName("available")
     */
    public $available;
    /**
     * Account frozen assets
     * @var string $hold
     * @Type("string")
     * @SerializedName("hold")
     */
    public $hold;
    /**
     * Liabilities
     * @var string $liability
     * @Type("string")
     * @SerializedName("liability")
     */
    public $liability;
    /**
     * The user's remaining maximum loan amount
     * @var string $maxBorrowSize
     * @Type("string")
     * @SerializedName("maxBorrowSize")
     */
    public $maxBorrowSize;
    /**
     * Support borrow or not
     * @var bool $borrowEnabled
     * @Type("bool")
     * @SerializedName("borrowEnabled")
     */
    public $borrowEnabled;
    /**
     * Support transfer or not
     * @var bool $transferInEnabled
     * @Type("bool")
     * @SerializedName("transferInEnabled")
     */
    public $transferInEnabled;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json === null) {
            return new self();
        }
        return $serializer->deserialize(
            $json,
            GetCrossMarginAccountAccounts::class,
            "json"
        );
    }
}
