<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Account;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Model\RestResponse;

class GetAccountInfoResp implements Response
{
    /**
     * User VIP level
     * @var int $level
     * @Type("int")
     * @SerializedName("level")
     */
    public $level;
    /**
     * Number of sub-accounts
     * @var int $subQuantity
     * @Type("int")
     * @SerializedName("subQuantity")
     */
    public $subQuantity;
    /**
     * Number of sub-accounts with spot trading permissions enabled
     * @var int $spotSubQuantity
     * @Type("int")
     * @SerializedName("spotSubQuantity")
     */
    public $spotSubQuantity;
    /**
     * Number of sub-accounts with margin trading permissions enabled
     * @var int $marginSubQuantity
     * @Type("int")
     * @SerializedName("marginSubQuantity")
     */
    public $marginSubQuantity;
    /**
     * Number of sub-accounts with futures trading permissions enabled
     * @var int $futuresSubQuantity
     * @Type("int")
     * @SerializedName("futuresSubQuantity")
     */
    public $futuresSubQuantity;
    /**
     * Number of sub-accounts with option trading permissions enabled
     * @var int $optionSubQuantity
     * @Type("int")
     * @SerializedName("optionSubQuantity")
     */
    public $optionSubQuantity;
    /**
     * Max. number of sub-accounts = maxDefaultSubQuantity + maxSpotSubQuantity
     * @var int $maxSubQuantity
     * @Type("int")
     * @SerializedName("maxSubQuantity")
     */
    public $maxSubQuantity;
    /**
     * Max. number of default open sub-accounts (according to VIP level)
     * @var int $maxDefaultSubQuantity
     * @Type("int")
     * @SerializedName("maxDefaultSubQuantity")
     */
    public $maxDefaultSubQuantity;
    /**
     * Max. number of sub-accounts with additional spot trading permissions
     * @var int $maxSpotSubQuantity
     * @Type("int")
     * @SerializedName("maxSpotSubQuantity")
     */
    public $maxSpotSubQuantity;
    /**
     * Max. number of sub-accounts with additional margin trading permissions
     * @var int $maxMarginSubQuantity
     * @Type("int")
     * @SerializedName("maxMarginSubQuantity")
     */
    public $maxMarginSubQuantity;
    /**
     * Max. number of sub-accounts with additional futures trading permissions
     * @var int $maxFuturesSubQuantity
     * @Type("int")
     * @SerializedName("maxFuturesSubQuantity")
     */
    public $maxFuturesSubQuantity;
    /**
     * Max. number of sub-accounts with additional option trading permissions
     * @var int $maxOptionSubQuantity
     * @Type("int")
     * @SerializedName("maxOptionSubQuantity")
     */
    public $maxOptionSubQuantity;

    /**
     * common response
     * @Exclude()
     * @var RestResponse $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json === null) {
            return new self();
        }
        return $serializer->deserialize(
            $json,
            GetAccountInfoResp::class,
            "json"
        );
    }
}
