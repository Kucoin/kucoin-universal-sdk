<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Account;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Model\RestResponse;

class GetIsolatedMarginAccountDetailV1Resp implements Response
{
    /**
     * Symbol
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     * Position status: Existing liabilities-DEBT, No liabilities-CLEAR, Bankrupcy (after position enters a negative balance)-BANKRUPTCY, Existing borrowings-IN_BORROW, Existing repayments-IN_REPAY, Under liquidation-IN_LIQUIDATION, Under auto-renewal assets-IN_AUTO_RENEW .
     * - 'DEBT' :
     * - 'CLEAR' :
     * - 'BANKRUPTCY' :
     * - 'IN_BORROW' :
     * - 'IN_REPAY' :
     * - 'IN_LIQUIDATION' :
     * - 'IN_AUTO_RENEW' :
     * @var string $status
     * @Type("string")
     * @SerializedName("status")
     */
    public $status;
    /**
     * debt ratio
     * @var string $debtRatio
     * @Type("string")
     * @SerializedName("debtRatio")
     */
    public $debtRatio;
    /**
     *
     * @var GetIsolatedMarginAccountDetailV1BaseAsset $baseAsset
     * @Type("GetIsolatedMarginAccountDetailV1BaseAsset")
     * @SerializedName("baseAsset")
     */
    public $baseAsset;
    /**
     *
     * @var GetIsolatedMarginAccountDetailV1QuoteAsset $quoteAsset
     * @Type("GetIsolatedMarginAccountDetailV1QuoteAsset")
     * @SerializedName("quoteAsset")
     */
    public $quoteAsset;

    /**
     * common response
     * @Exclude()
     * @var RestResponse $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            GetIsolatedMarginAccountDetailV1Resp::class,
            "json"
        );
    }
}
