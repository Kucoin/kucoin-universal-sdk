<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Account;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Model\RestResponse;

class GetApikeyInfoResp implements Response
{
    /**
     * Remarks
     * @var string $remark
     * @Type("string")
     * @SerializedName("remark")
     */
    public $remark;
    /**
     * Apikey
     * @var string $apiKey
     * @Type("string")
     * @SerializedName("apiKey")
     */
    public $apiKey;
    /**
     * API Version
     * @var int $apiVersion
     * @Type("int")
     * @SerializedName("apiVersion")
     */
    public $apiVersion;
    /**
     * [Permissions](https://www.kucoin.com/docs-new/doc-338144),  possible values: General, Spot, Margin, Futures, InnerTransfer, Transfer, Earn
     * @var string $permission
     * @Type("string")
     * @SerializedName("permission")
     */
    public $permission;
    /**
     * IP whitelist
     * @var string|null $ipWhitelist
     * @Type("string")
     * @SerializedName("ipWhitelist")
     */
    public $ipWhitelist;
    /**
     * Apikey create time
     * @var int $createdAt
     * @Type("int")
     * @SerializedName("createdAt")
     */
    public $createdAt;
    /**
     * Account UID
     * @var int $uid
     * @Type("int")
     * @SerializedName("uid")
     */
    public $uid;
    /**
     * Whether it is the master account.
     * @var bool $isMaster
     * @Type("bool")
     * @SerializedName("isMaster")
     */
    public $isMaster;
    /**
     * Sub Name, There is no such param for the master account
     * @var string|null $subName
     * @Type("string")
     * @SerializedName("subName")
     */
    public $subName;

    /**
     * common response
     * @Exclude()
     * @var RestResponse $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            GetApikeyInfoResp::class,
            "json"
        );
    }
}
