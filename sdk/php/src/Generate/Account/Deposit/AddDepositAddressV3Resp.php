<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Deposit;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Model\RestResponse;

class AddDepositAddressV3Resp implements Response
{
    /**
     * Deposit address
     * @var string $address
     * @Type("string")
     * @SerializedName("address")
     */
    public $address;
    /**
     * Address remark. If thereâ€™s no remark, it is empty. When you withdraw from other platforms to KuCoin, you need to fill in memo(tag). Be careful: If you do not fill in memo(tag), your deposit may not be available.
     * @var string $memo
     * @Type("string")
     * @SerializedName("memo")
     */
    public $memo;
    /**
     * The chainId of currency
     * @var string $chainId
     * @Type("string")
     * @SerializedName("chainId")
     */
    public $chainId;
    /**
     * Deposit account type: MAIN (funding account), TRADE (spot trading account)
     * @var string $to
     * @Type("string")
     * @SerializedName("to")
     */
    public $to;
    /**
     * Expiration time; Lightning network expiration time; this field is not applicable to non-Lightning networks
     * @var int $expirationDate
     * @Type("int")
     * @SerializedName("expirationDate")
     */
    public $expirationDate;
    /**
     * currency
     * @var string $currency
     * @Type("string")
     * @SerializedName("currency")
     */
    public $currency;
    /**
     * The chainName of currency
     * @var string $chainName
     * @Type("string")
     * @SerializedName("chainName")
     */
    public $chainName;

    /**
     * common response
     * @Exclude()
     * @var RestResponse $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json === null) {
            return new self();
        }
        return $serializer->deserialize(
            $json,
            AddDepositAddressV3Resp::class,
            "json"
        );
    }
}
