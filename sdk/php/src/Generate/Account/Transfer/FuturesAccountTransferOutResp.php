<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Transfer;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Model\RestResponse;

class FuturesAccountTransferOutResp implements Response
{
    /**
     * Transfer order ID
     * @var string $applyId
     * @Type("string")
     * @SerializedName("applyId")
     */
    public $applyId;
    /**
     * Business number
     * @var string $bizNo
     * @Type("string")
     * @SerializedName("bizNo")
     */
    public $bizNo;
    /**
     * Pay account type
     * @var string $payAccountType
     * @Type("string")
     * @SerializedName("payAccountType")
     */
    public $payAccountType;
    /**
     * Pay account sub type
     * @var string $payTag
     * @Type("string")
     * @SerializedName("payTag")
     */
    public $payTag;
    /**
     * User remark
     * @var string $remark
     * @Type("string")
     * @SerializedName("remark")
     */
    public $remark;
    /**
     * Receive account type
     * @var string $recAccountType
     * @Type("string")
     * @SerializedName("recAccountType")
     */
    public $recAccountType;
    /**
     * Receive account sub type
     * @var string $recTag
     * @Type("string")
     * @SerializedName("recTag")
     */
    public $recTag;
    /**
     * Receive account tx remark
     * @var string $recRemark
     * @Type("string")
     * @SerializedName("recRemark")
     */
    public $recRemark;
    /**
     * Receive system
     * @var string $recSystem
     * @Type("string")
     * @SerializedName("recSystem")
     */
    public $recSystem;
    /**
     * Status:APPLY, PROCESSING, PENDING_APPROVAL, APPROVED, REJECTED, PENDING_CANCEL, CANCEL, SUCCESS
     * @var string $status
     * @Type("string")
     * @SerializedName("status")
     */
    public $status;
    /**
     * Currency
     * @var string $currency
     * @Type("string")
     * @SerializedName("currency")
     */
    public $currency;
    /**
     * Transfer amount
     * @var string $amount
     * @Type("string")
     * @SerializedName("amount")
     */
    public $amount;
    /**
     * Transfer fee
     * @var string $fee
     * @Type("string")
     * @SerializedName("fee")
     */
    public $fee;
    /**
     * Serial number
     * @var int $sn
     * @Type("int")
     * @SerializedName("sn")
     */
    public $sn;
    /**
     * Fail Reason
     * @var string $reason
     * @Type("string")
     * @SerializedName("reason")
     */
    public $reason;
    /**
     * Create time
     * @var int $createdAt
     * @Type("int")
     * @SerializedName("createdAt")
     */
    public $createdAt;
    /**
     * Update time
     * @var int $updatedAt
     * @Type("int")
     * @SerializedName("updatedAt")
     */
    public $updatedAt;

    /**
     * common response
     * @Exclude()
     * @var RestResponse $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            FuturesAccountTransferOutResp::class,
            "json"
        );
    }
}
