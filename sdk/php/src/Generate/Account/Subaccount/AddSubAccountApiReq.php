<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Subaccount;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class AddSubAccountApiReq implements Serializable
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * Password (Must contain 7–32 characters. Cannot contain any spaces.)
     * @var string $passphrase
     * @Type("string")
     * @SerializedName("passphrase")
     */
    public $passphrase;
    /**
     * Remarks (1–24 characters)
     * @var string $remark
     * @Type("string")
     * @SerializedName("remark")
     */
    public $remark;
    /**
     * [Permissions](https://www.kucoin.com/docs-new/doc-338144)(Only General, Spot, Futures, Margin, InnerTransfer (Flex Transfer) permissions can be set, such as \"General, Trade\". The default is \"General\")
     * @var string|null $permission
     * @Type("string")
     * @SerializedName("permission")
     */
    public $permission = "General";
    /**
     * IP whitelist (You may add up to 20 IPs. Use a halfwidth comma to each IP)
     * @var string|null $ipWhitelist
     * @Type("string")
     * @SerializedName("ipWhitelist")
     */
    public $ipWhitelist;
    /**
     * API expiration time: Never expire(default)-1, 30Day30, 90Day90, 180Day180, 360Day360
     * - '-1' :
     * - '30' :
     * - '90' :
     * - '180' :
     * - '360' :
     * @var string|null $expire
     * @Type("string")
     * @SerializedName("expire")
     */
    public $expire = "-1";
    /**
     * Sub-account name, create sub account name of API Key.
     * @var string $subName
     * @Type("string")
     * @SerializedName("subName")
     */
    public $subName;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            AddSubAccountApiReq::class,
            "json"
        );
    }
    /**
     * Creates a new instance of the `AddSubAccountApiReq` class.
     * The builder pattern allows step-by-step construction of a `AddSubAccountApiReq` object.
     * @return AddSubAccountApiReqBuilder
     */
    public static function builder()
    {
        return new AddSubAccountApiReqBuilder(new self());
    }

    /**
     * Creates a new instance of the `AddSubAccountApiReq` class with the given data.
     * Ensure that the keys in data match the target field names in the documentation,
     * rather than the variable names in the class.
     * @return self
     */
    public static function create(array $data)
    {
        $obj = new self();
        foreach ($data as $key => $value) {
            if (property_exists($obj, $key)) {
                $obj->$key = $value;
            }
        }
        return $obj;
    }
}

class AddSubAccountApiReqBuilder
{
    /**
     * @var AddSubAccountApiReq $obj
     */
    private $obj;

    public function __construct(AddSubAccountApiReq $obj)
    {
        $this->obj = $obj;
    }
    /**
     * Password (Must contain 7–32 characters. Cannot contain any spaces.)
     * @param string $value
     * @return self
     */
    public function setPassphrase($value)
    {
        $this->obj->passphrase = $value;
        return $this;
    }

    /**
     * Remarks (1–24 characters)
     * @param string $value
     * @return self
     */
    public function setRemark($value)
    {
        $this->obj->remark = $value;
        return $this;
    }

    /**
     * [Permissions](https://www.kucoin.com/docs-new/doc-338144)(Only General, Spot, Futures, Margin, InnerTransfer (Flex Transfer) permissions can be set, such as \"General, Trade\". The default is \"General\")
     * @param string $value
     * @return self
     */
    public function setPermission($value)
    {
        $this->obj->permission = $value;
        return $this;
    }

    /**
     * IP whitelist (You may add up to 20 IPs. Use a halfwidth comma to each IP)
     * @param string $value
     * @return self
     */
    public function setIpWhitelist($value)
    {
        $this->obj->ipWhitelist = $value;
        return $this;
    }

    /**
     * API expiration time: Never expire(default)-1, 30Day30, 90Day90, 180Day180, 360Day360
     * - '-1' :
     * - '30' :
     * - '90' :
     * - '180' :
     * - '360' :
     * @param string $value
     * @return self
     */
    public function setExpire($value)
    {
        $this->obj->expire = $value;
        return $this;
    }

    /**
     * Sub-account name, create sub account name of API Key.
     * @param string $value
     * @return self
     */
    public function setSubName($value)
    {
        $this->obj->subName = $value;
        return $this;
    }

    /**
     * Get the final object.
     * @return AddSubAccountApiReq
     */
    public function build()
    {
        return $this->obj;
    }
}
