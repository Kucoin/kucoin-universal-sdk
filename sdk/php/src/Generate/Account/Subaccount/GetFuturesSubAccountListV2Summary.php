<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Subaccount;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class GetFuturesSubAccountListV2Summary implements Serializable
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * Total Account Equity
     * @var float $accountEquityTotal
     * @Type("float")
     * @SerializedName("accountEquityTotal")
     */
    public $accountEquityTotal;
    /**
     * Total unrealizedPNL
     * @var float $unrealisedPNLTotal
     * @Type("float")
     * @SerializedName("unrealisedPNLTotal")
     */
    public $unrealisedPNLTotal;
    /**
     * Total Margin Balance
     * @var float $marginBalanceTotal
     * @Type("float")
     * @SerializedName("marginBalanceTotal")
     */
    public $marginBalanceTotal;
    /**
     * Total Position margin
     * @var float $positionMarginTotal
     * @Type("float")
     * @SerializedName("positionMarginTotal")
     */
    public $positionMarginTotal;
    /**
     *
     * @var float $orderMarginTotal
     * @Type("float")
     * @SerializedName("orderMarginTotal")
     */
    public $orderMarginTotal;
    /**
     * Total frozen funds for withdrawal and out-transfer
     * @var float $frozenFundsTotal
     * @Type("float")
     * @SerializedName("frozenFundsTotal")
     */
    public $frozenFundsTotal;
    /**
     * Total available balance
     * @var float $availableBalanceTotal
     * @Type("float")
     * @SerializedName("availableBalanceTotal")
     */
    public $availableBalanceTotal;
    /**
     *
     * @var string $currency
     * @Type("string")
     * @SerializedName("currency")
     */
    public $currency;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            GetFuturesSubAccountListV2Summary::class,
            "json"
        );
    }
}
