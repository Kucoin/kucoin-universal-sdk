<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Account\Subaccount;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class GetFuturesSubAccountListV2Accounts implements Serializable
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * Account name, main account is main
     * @var string $accountName
     * @Type("string")
     * @SerializedName("accountName")
     */
    public $accountName;
    /**
     *
     * @var float $accountEquity
     * @Type("float")
     * @SerializedName("accountEquity")
     */
    public $accountEquity;
    /**
     *
     * @var float $unrealisedPNL
     * @Type("float")
     * @SerializedName("unrealisedPNL")
     */
    public $unrealisedPNL;
    /**
     *
     * @var float $marginBalance
     * @Type("float")
     * @SerializedName("marginBalance")
     */
    public $marginBalance;
    /**
     *
     * @var float $positionMargin
     * @Type("float")
     * @SerializedName("positionMargin")
     */
    public $positionMargin;
    /**
     *
     * @var float $orderMargin
     * @Type("float")
     * @SerializedName("orderMargin")
     */
    public $orderMargin;
    /**
     *
     * @var float $frozenFunds
     * @Type("float")
     * @SerializedName("frozenFunds")
     */
    public $frozenFunds;
    /**
     *
     * @var float $availableBalance
     * @Type("float")
     * @SerializedName("availableBalance")
     */
    public $availableBalance;
    /**
     * currency
     * @var string $currency
     * @Type("string")
     * @SerializedName("currency")
     */
    public $currency;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json == null) {
            return new self();
        }
        return $serializer->deserialize(
            $json,
            GetFuturesSubAccountListV2Accounts::class,
            "json"
        );
    }
}
