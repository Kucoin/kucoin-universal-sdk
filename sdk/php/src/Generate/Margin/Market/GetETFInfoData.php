<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Margin\Market;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class GetETFInfoData implements Serializable
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * ETF Currency
     * @var string $currency
     * @Type("string")
     * @SerializedName("currency")
     */
    public $currency;
    /**
     * Net worth
     * @var string $netAsset
     * @Type("string")
     * @SerializedName("netAsset")
     */
    public $netAsset;
    /**
     * Target leverage
     * @var string $targetLeverage
     * @Type("string")
     * @SerializedName("targetLeverage")
     */
    public $targetLeverage;
    /**
     * Actual leverage
     * @var string $actualLeverage
     * @Type("string")
     * @SerializedName("actualLeverage")
     */
    public $actualLeverage;
    /**
     * The amount of currency issued
     * @var string $issuedSize
     * @Type("string")
     * @SerializedName("issuedSize")
     */
    public $issuedSize;
    /**
     * Basket information
     * @var string $basket
     * @Type("string")
     * @SerializedName("basket")
     */
    public $basket;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json == null) {
            return new self();
        }
        return $serializer->deserialize($json, GetETFInfoData::class, "json");
    }
}
