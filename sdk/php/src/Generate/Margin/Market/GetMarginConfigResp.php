<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Margin\Market;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Model\RestResponse;

class GetMarginConfigResp implements Response
{
    /**
     * Available currencies for margin trade
     * @var string[] $currencyList
     * @Type("array<string>")
     * @SerializedName("currencyList")
     */
    public $currencyList;
    /**
     * Max. leverage available
     * @var int $maxLeverage
     * @Type("int")
     * @SerializedName("maxLeverage")
     */
    public $maxLeverage;
    /**
     * The warning debt ratio of the forced liquidation
     * @var string $warningDebtRatio
     * @Type("string")
     * @SerializedName("warningDebtRatio")
     */
    public $warningDebtRatio;
    /**
     * The debt ratio of the forced liquidation
     * @var string $liqDebtRatio
     * @Type("string")
     * @SerializedName("liqDebtRatio")
     */
    public $liqDebtRatio;

    /**
     * common response
     * @Exclude()
     * @var RestResponse $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            GetMarginConfigResp::class,
            "json"
        );
    }
}
