<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Margin\Market;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Serializable;

class GetIsolatedMarginSymbolsData implements Serializable
{
    /**
     * symbol
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     * Symbol name
     * @var string $symbolName
     * @Type("string")
     * @SerializedName("symbolName")
     */
    public $symbolName;
    /**
     * Base currency, e.g. BTC.
     * @var string $baseCurrency
     * @Type("string")
     * @SerializedName("baseCurrency")
     */
    public $baseCurrency;
    /**
     * Quote currency, e.g. USDT.
     * @var string $quoteCurrency
     * @Type("string")
     * @SerializedName("quoteCurrency")
     */
    public $quoteCurrency;
    /**
     * Max. leverage of this symbol
     * @var int $maxLeverage
     * @Type("int")
     * @SerializedName("maxLeverage")
     */
    public $maxLeverage;
    /**
     *
     * @var string $flDebtRatio
     * @Type("string")
     * @SerializedName("flDebtRatio")
     */
    public $flDebtRatio;
    /**
     *
     * @var bool $tradeEnable
     * @Type("bool")
     * @SerializedName("tradeEnable")
     */
    public $tradeEnable;
    /**
     *
     * @var string $autoRenewMaxDebtRatio
     * @Type("string")
     * @SerializedName("autoRenewMaxDebtRatio")
     */
    public $autoRenewMaxDebtRatio;
    /**
     *
     * @var bool $baseBorrowEnable
     * @Type("bool")
     * @SerializedName("baseBorrowEnable")
     */
    public $baseBorrowEnable;
    /**
     *
     * @var bool $quoteBorrowEnable
     * @Type("bool")
     * @SerializedName("quoteBorrowEnable")
     */
    public $quoteBorrowEnable;
    /**
     *
     * @var bool $baseTransferInEnable
     * @Type("bool")
     * @SerializedName("baseTransferInEnable")
     */
    public $baseTransferInEnable;
    /**
     *
     * @var bool $quoteTransferInEnable
     * @Type("bool")
     * @SerializedName("quoteTransferInEnable")
     */
    public $quoteTransferInEnable;
    /**
     *
     * @var string $baseBorrowCoefficient
     * @Type("string")
     * @SerializedName("baseBorrowCoefficient")
     */
    public $baseBorrowCoefficient;
    /**
     *
     * @var string $quoteBorrowCoefficient
     * @Type("string")
     * @SerializedName("quoteBorrowCoefficient")
     */
    public $quoteBorrowCoefficient;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json === null) {
            return new self();
        }
        return $serializer->deserialize(
            $json,
            GetIsolatedMarginSymbolsData::class,
            "json"
        );
    }
}
