<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Margin\MarginPrivate;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Internal\Interfaces\WebSocketMessageCallback;
use KuCoin\UniversalSDK\Model\WsMessage;
use JMS\Serializer\Serializer;

class CrossMarginPositionEvent implements Response
{
    /**
     * Debt ratio
     * @var float $debtRatio
     * @Type("float")
     * @SerializedName("debtRatio")
     */
    public $debtRatio;
    /**
     * Total assets in BTC (interest included)
     * @var float $totalAsset
     * @Type("float")
     * @SerializedName("totalAsset")
     */
    public $totalAsset;
    /**
     *
     * @var string $marginCoefficientTotalAsset
     * @Type("string")
     * @SerializedName("marginCoefficientTotalAsset")
     */
    public $marginCoefficientTotalAsset;
    /**
     * Total debt in BTC (interest included)
     * @var string $totalDebt
     * @Type("string")
     * @SerializedName("totalDebt")
     */
    public $totalDebt;
    /**
     * Asset list (interest included)
     * @var array<string,CrossMarginPositionAssetListValue> $assetList
     * @Type("array<string,CrossMarginPositionAssetListValue>")
     * @SerializedName("assetList")
     */
    public $assetList;
    /**
     * Debt list (interest included)
     * @var array<string,string> $debtList
     * @Type("array<string,string>")
     * @SerializedName("debtList")
     */
    public $debtList;
    /**
     *
     * @var int $timestamp
     * @Type("int")
     * @SerializedName("timestamp")
     */
    public $timestamp;
    /**
     * Event type, **Only applicable to \"debt.ratio\" subject**
     * @var string $type
     * @Type("string")
     * @SerializedName("type")
     */
    public $type;

    private function __construct() {}

    /**
     * common response
     * @Exclude()
     * @var WsMessage $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }
    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            CrossMarginPositionEvent::class,
            "json"
        );
    }
}

class CrossMarginPositionEventCallbackWrapper implements
    WebSocketMessageCallback
{
    /**
     * @var callable
     */
    private $callback;

    /**
     * @param callable $callback function(string $topic, string $subject, CrossMarginPositionEvent $data): void
     */
    public function __construct(callable $callback)
    {
        $this->callback = $callback;
    }

    public function onMessage(WsMessage $msg, Serializer $serializer)
    {
        $event = CrossMarginPositionEvent::jsonDeserialize(
            $msg->rawData,
            $serializer
        );
        $event->setCommonResponse($msg);
        $this->callback($msg->topic, $msg->subject, $event);
    }
}
