<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Margin\Credit;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Request;

class GetPurchaseOrdersItems implements Request
{
    /**
     * @var string[] $pathVarMapping
     * @Exclude()
     */
    public static $pathVarMapping = [];

    public function pathVarMapping()
    {
        return self::$pathVarMapping;
    }
    /**
     * Currency
     * @var string $currency
     * @Type("string")
     * @SerializedName("currency")
     */
    public $currency;
    /**
     * Purchase order ID
     * @var string $purchaseOrderNo
     * @Type("string")
     * @SerializedName("purchaseOrderNo")
     */
    public $purchaseOrderNo;
    /**
     * Total purchase size
     * @var string $purchaseSize
     * @Type("string")
     * @SerializedName("purchaseSize")
     */
    public $purchaseSize;
    /**
     * Executed size
     * @var string $matchSize
     * @Type("string")
     * @SerializedName("matchSize")
     */
    public $matchSize;
    /**
     * Target annualized interest rate
     * @var string $interestRate
     * @Type("string")
     * @SerializedName("interestRate")
     */
    public $interestRate;
    /**
     * Redeemed amount
     * @var string $incomeSize
     * @Type("string")
     * @SerializedName("incomeSize")
     */
    public $incomeSize;
    /**
     * Time of purchase
     * @var int $applyTime
     * @Type("int")
     * @SerializedName("applyTime")
     */
    public $applyTime;
    /**
     * Status: DONE-completed; PENDING-settling
     * @var string $status
     * @Type("string")
     * @SerializedName("status")
     */
    public $status;

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        return $serializer->deserialize(
            $json,
            GetPurchaseOrdersItems::class,
            "json"
        );
    }
}
