<?php
// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

namespace KuCoin\UniversalSDK\Generate\Margin\Order;

use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Serializer;
use KuCoin\UniversalSDK\Internal\Interfaces\Response;
use KuCoin\UniversalSDK\Model\RestResponse;

class GetOrderByOrderIdResp implements Response
{
    /**
     * The unique order id generated by the trading system
     * @var string $id
     * @Type("string")
     * @SerializedName("id")
     */
    public $id;
    /**
     * symbol
     * @var string $symbol
     * @Type("string")
     * @SerializedName("symbol")
     */
    public $symbol;
    /**
     *
     * @var string $opType
     * @Type("string")
     * @SerializedName("opType")
     */
    public $opType;
    /**
     * Specify if the order is a 'limit' order or 'market' order.
     * - 'limit' :
     * - 'market' :
     * @var string $type
     * @Type("string")
     * @SerializedName("type")
     */
    public $type;
    /**
     * Buy or sell
     * - 'buy' :
     * - 'sell' :
     * @var string $side
     * @Type("string")
     * @SerializedName("side")
     */
    public $side;
    /**
     * Order Price
     * @var string $price
     * @Type("string")
     * @SerializedName("price")
     */
    public $price;
    /**
     * Order Size
     * @var string $size
     * @Type("string")
     * @SerializedName("size")
     */
    public $size;
    /**
     * Order Funds
     * @var string $funds
     * @Type("string")
     * @SerializedName("funds")
     */
    public $funds;
    /**
     * Number of filled transactions
     * @var string $dealSize
     * @Type("string")
     * @SerializedName("dealSize")
     */
    public $dealSize;
    /**
     * Funds of filled transactions
     * @var string $dealFunds
     * @Type("string")
     * @SerializedName("dealFunds")
     */
    public $dealFunds;
    /**
     * [Handling fees](https://www.kucoin.com/docs-new/api-5327739)
     * @var string $fee
     * @Type("string")
     * @SerializedName("fee")
     */
    public $fee;
    /**
     * Currency used to calculate trading fee
     * @var string $feeCurrency
     * @Type("string")
     * @SerializedName("feeCurrency")
     */
    public $feeCurrency;
    /**
     * [Self Trade Prevention](https://www.kucoin.com/docs-new/doc-338146) is divided into these strategies: CN, CO, CB , and DC
     * - 'DC' :
     * - 'CO' :
     * - 'CN' :
     * - 'CB' :
     * @var string|null $stp
     * @Type("string")
     * @SerializedName("stp")
     */
    public $stp;
    /**
     *
     * @var string|null $stop
     * @Type("string")
     * @SerializedName("stop")
     */
    public $stop;
    /**
     *
     * @var bool $stopTriggered
     * @Type("bool")
     * @SerializedName("stopTriggered")
     */
    public $stopTriggered;
    /**
     *
     * @var string $stopPrice
     * @Type("string")
     * @SerializedName("stopPrice")
     */
    public $stopPrice;
    /**
     * Time in force
     * - 'GTC' :
     * - 'GTT' :
     * - 'IOC' :
     * - 'FOK' :
     * @var string $timeInForce
     * @Type("string")
     * @SerializedName("timeInForce")
     */
    public $timeInForce;
    /**
     * Whether it’s a postOnly order.
     * @var bool $postOnly
     * @Type("bool")
     * @SerializedName("postOnly")
     */
    public $postOnly;
    /**
     * Whether it’s a hidden order.
     * @var bool $hidden
     * @Type("bool")
     * @SerializedName("hidden")
     */
    public $hidden;
    /**
     * Whether it’s a iceberg order.
     * @var bool $iceberg
     * @Type("bool")
     * @SerializedName("iceberg")
     */
    public $iceberg;
    /**
     * Visible size of iceberg order in order book.
     * @var string $visibleSize
     * @Type("string")
     * @SerializedName("visibleSize")
     */
    public $visibleSize;
    /**
     * A GTT timeInForce that expires in n seconds
     * @var int $cancelAfter
     * @Type("int")
     * @SerializedName("cancelAfter")
     */
    public $cancelAfter;
    /**
     *
     * @var string $channel
     * @Type("string")
     * @SerializedName("channel")
     */
    public $channel;
    /**
     * Client Order Id, unique identifier created by the user
     * @var string $clientOid
     * @Type("string")
     * @SerializedName("clientOid")
     */
    public $clientOid;
    /**
     * Order placement remarks
     * @var string $remark
     * @Type("string")
     * @SerializedName("remark")
     */
    public $remark;
    /**
     * Order tag
     * @var string|null $tags
     * @Type("string")
     * @SerializedName("tags")
     */
    public $tags;
    /**
     * Whether there is a cancellation record for the order.
     * @var bool $cancelExist
     * @Type("bool")
     * @SerializedName("cancelExist")
     */
    public $cancelExist;
    /**
     *
     * @var int $createdAt
     * @Type("int")
     * @SerializedName("createdAt")
     */
    public $createdAt;
    /**
     *
     * @var int $lastUpdatedAt
     * @Type("int")
     * @SerializedName("lastUpdatedAt")
     */
    public $lastUpdatedAt;
    /**
     * Trade type, redundancy param
     * @var string $tradeType
     * @Type("string")
     * @SerializedName("tradeType")
     */
    public $tradeType;
    /**
     * Whether to enter the orderbook: True: enter the orderbook; False: do not enter the orderbook
     * @var bool $inOrderBook
     * @Type("bool")
     * @SerializedName("inOrderBook")
     */
    public $inOrderBook;
    /**
     * Number of canceled transactions
     * @var string $cancelledSize
     * @Type("string")
     * @SerializedName("cancelledSize")
     */
    public $cancelledSize;
    /**
     * Funds of canceled transactions
     * @var string $cancelledFunds
     * @Type("string")
     * @SerializedName("cancelledFunds")
     */
    public $cancelledFunds;
    /**
     * Number of remain transactions
     * @var string $remainSize
     * @Type("string")
     * @SerializedName("remainSize")
     */
    public $remainSize;
    /**
     * Funds of remain transactions
     * @var string $remainFunds
     * @Type("string")
     * @SerializedName("remainFunds")
     */
    public $remainFunds;
    /**
     * Users in some regions have this field
     * @var string $tax
     * @Type("string")
     * @SerializedName("tax")
     */
    public $tax;
    /**
     * Order status: true-The status of the order is active; false-The status of the order is done
     * @var bool $active
     * @Type("bool")
     * @SerializedName("active")
     */
    public $active;

    /**
     * common response
     * @Exclude()
     * @var RestResponse $commonResponse
     */
    public $commonResponse;

    public function setCommonResponse($response): void
    {
        $this->commonResponse = $response;
    }

    private function __construct() {}

    /**
     * @param Serializer $serializer
     * @return string
     */
    public function jsonSerialize($serializer)
    {
        return $serializer->serialize($this, "json");
    }

    /**
     * @param string $json
     * @param Serializer $serializer
     * @return self
     */
    public static function jsonDeserialize($json, $serializer)
    {
        if ($json === null) {
            return new self();
        }
        return $serializer->deserialize(
            $json,
            GetOrderByOrderIdResp::class,
            "json"
        );
    }
}
