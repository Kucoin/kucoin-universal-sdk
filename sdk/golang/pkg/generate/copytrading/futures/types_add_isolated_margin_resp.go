// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package futures

import (
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// AddIsolatedMarginResp struct for AddIsolatedMarginResp
type AddIsolatedMarginResp struct {
	// common response
	CommonResponse *types.RestResponse
	// Position ID
	Id string `json:"id,omitempty"`
	// Symbol of the contract, Please refer to [Get Symbol endpoint: symbol](https://www.kucoin.com/docs-new/api-3470220)
	Symbol string `json:"symbol,omitempty"`
	// Auto deposit margin or not
	AutoDeposit bool `json:"autoDeposit,omitempty"`
	// Maintenance margin requirement
	MaintMarginReq string `json:"maintMarginReq,omitempty"`
	// Risk limit
	RiskLimit int32 `json:"riskLimit,omitempty"`
	// Leverage o the order
	RealLeverage string `json:"realLeverage,omitempty"`
	// Cross mode or not
	CrossMode bool `json:"crossMode,omitempty"`
	// ADL ranking percentile
	DelevPercentage float64 `json:"delevPercentage,omitempty"`
	// Open time
	OpeningTimestamp int64 `json:"openingTimestamp,omitempty"`
	// Current timestamp
	CurrentTimestamp int64 `json:"currentTimestamp,omitempty"`
	// Current postion quantity
	CurrentQty int32 `json:"currentQty,omitempty"`
	// Current postion value
	CurrentCost string `json:"currentCost,omitempty"`
	// Current commission
	CurrentComm string `json:"currentComm,omitempty"`
	// Unrealised value
	UnrealisedCost string `json:"unrealisedCost,omitempty"`
	// Accumulated realised gross profit value
	RealisedGrossCost string `json:"realisedGrossCost,omitempty"`
	// Current realised position value
	RealisedCost string `json:"realisedCost,omitempty"`
	// Opened position or not
	IsOpen bool `json:"isOpen,omitempty"`
	// Mark price
	MarkPrice string `json:"markPrice,omitempty"`
	// Mark value
	MarkValue string `json:"markValue,omitempty"`
	// Position value
	PosCost string `json:"posCost,omitempty"`
	// added margin
	PosCross string `json:"posCross,omitempty"`
	// Leverage margin
	PosInit string `json:"posInit,omitempty"`
	// Bankruptcy cost
	PosComm string `json:"posComm,omitempty"`
	// Funding fees paid out
	PosLoss string `json:"posLoss,omitempty"`
	// Position margin
	PosMargin string `json:"posMargin,omitempty"`
	// Maintenance margin
	PosMaint string `json:"posMaint,omitempty"`
	// Position margin
	MaintMargin string `json:"maintMargin,omitempty"`
	// Accumulated realised gross profit value
	RealisedGrossPnl string `json:"realisedGrossPnl,omitempty"`
	// Realised profit and loss
	RealisedPnl string `json:"realisedPnl,omitempty"`
	// Unrealised profit and loss
	UnrealisedPnl string `json:"unrealisedPnl,omitempty"`
	// Profit-loss ratio of the position
	UnrealisedPnlPcnt string `json:"unrealisedPnlPcnt,omitempty"`
	// Rate of return on investment
	UnrealisedRoePcnt string `json:"unrealisedRoePcnt,omitempty"`
	// Average entry price
	AvgEntryPrice string `json:"avgEntryPrice,omitempty"`
	// Liquidation price
	LiquidationPrice string `json:"liquidationPrice,omitempty"`
	// Bankruptcy price
	BankruptPrice string `json:"bankruptPrice,omitempty"`
	// Currency used to clear and settle the trades
	SettleCurrency string `json:"settleCurrency,omitempty"`
}

// NewAddIsolatedMarginResp instantiates a new AddIsolatedMarginResp object
// This constructor will assign default values to properties that have it defined
func NewAddIsolatedMarginResp(id string, symbol string, autoDeposit bool, maintMarginReq string, riskLimit int32, realLeverage string, crossMode bool, delevPercentage float64, openingTimestamp int64, currentTimestamp int64, currentQty int32, currentCost string, currentComm string, unrealisedCost string, realisedGrossCost string, realisedCost string, isOpen bool, markPrice string, markValue string, posCost string, posCross string, posInit string, posComm string, posLoss string, posMargin string, posMaint string, maintMargin string, realisedGrossPnl string, realisedPnl string, unrealisedPnl string, unrealisedPnlPcnt string, unrealisedRoePcnt string, avgEntryPrice string, liquidationPrice string, bankruptPrice string, settleCurrency string) *AddIsolatedMarginResp {
	this := AddIsolatedMarginResp{}
	this.Id = id
	this.Symbol = symbol
	this.AutoDeposit = autoDeposit
	this.MaintMarginReq = maintMarginReq
	this.RiskLimit = riskLimit
	this.RealLeverage = realLeverage
	this.CrossMode = crossMode
	this.DelevPercentage = delevPercentage
	this.OpeningTimestamp = openingTimestamp
	this.CurrentTimestamp = currentTimestamp
	this.CurrentQty = currentQty
	this.CurrentCost = currentCost
	this.CurrentComm = currentComm
	this.UnrealisedCost = unrealisedCost
	this.RealisedGrossCost = realisedGrossCost
	this.RealisedCost = realisedCost
	this.IsOpen = isOpen
	this.MarkPrice = markPrice
	this.MarkValue = markValue
	this.PosCost = posCost
	this.PosCross = posCross
	this.PosInit = posInit
	this.PosComm = posComm
	this.PosLoss = posLoss
	this.PosMargin = posMargin
	this.PosMaint = posMaint
	this.MaintMargin = maintMargin
	this.RealisedGrossPnl = realisedGrossPnl
	this.RealisedPnl = realisedPnl
	this.UnrealisedPnl = unrealisedPnl
	this.UnrealisedPnlPcnt = unrealisedPnlPcnt
	this.UnrealisedRoePcnt = unrealisedRoePcnt
	this.AvgEntryPrice = avgEntryPrice
	this.LiquidationPrice = liquidationPrice
	this.BankruptPrice = bankruptPrice
	this.SettleCurrency = settleCurrency
	return &this
}

// NewAddIsolatedMarginRespWithDefaults instantiates a new AddIsolatedMarginResp object
// This constructor will only assign default values to properties that have it defined,
func NewAddIsolatedMarginRespWithDefaults() *AddIsolatedMarginResp {
	this := AddIsolatedMarginResp{}
	return &this
}

func (o *AddIsolatedMarginResp) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["symbol"] = o.Symbol
	toSerialize["autoDeposit"] = o.AutoDeposit
	toSerialize["maintMarginReq"] = o.MaintMarginReq
	toSerialize["riskLimit"] = o.RiskLimit
	toSerialize["realLeverage"] = o.RealLeverage
	toSerialize["crossMode"] = o.CrossMode
	toSerialize["delevPercentage"] = o.DelevPercentage
	toSerialize["openingTimestamp"] = o.OpeningTimestamp
	toSerialize["currentTimestamp"] = o.CurrentTimestamp
	toSerialize["currentQty"] = o.CurrentQty
	toSerialize["currentCost"] = o.CurrentCost
	toSerialize["currentComm"] = o.CurrentComm
	toSerialize["unrealisedCost"] = o.UnrealisedCost
	toSerialize["realisedGrossCost"] = o.RealisedGrossCost
	toSerialize["realisedCost"] = o.RealisedCost
	toSerialize["isOpen"] = o.IsOpen
	toSerialize["markPrice"] = o.MarkPrice
	toSerialize["markValue"] = o.MarkValue
	toSerialize["posCost"] = o.PosCost
	toSerialize["posCross"] = o.PosCross
	toSerialize["posInit"] = o.PosInit
	toSerialize["posComm"] = o.PosComm
	toSerialize["posLoss"] = o.PosLoss
	toSerialize["posMargin"] = o.PosMargin
	toSerialize["posMaint"] = o.PosMaint
	toSerialize["maintMargin"] = o.MaintMargin
	toSerialize["realisedGrossPnl"] = o.RealisedGrossPnl
	toSerialize["realisedPnl"] = o.RealisedPnl
	toSerialize["unrealisedPnl"] = o.UnrealisedPnl
	toSerialize["unrealisedPnlPcnt"] = o.UnrealisedPnlPcnt
	toSerialize["unrealisedRoePcnt"] = o.UnrealisedRoePcnt
	toSerialize["avgEntryPrice"] = o.AvgEntryPrice
	toSerialize["liquidationPrice"] = o.LiquidationPrice
	toSerialize["bankruptPrice"] = o.BankruptPrice
	toSerialize["settleCurrency"] = o.SettleCurrency
	return toSerialize
}

func (o *AddIsolatedMarginResp) SetCommonResponse(response *types.RestResponse) {
	o.CommonResponse = response
}
