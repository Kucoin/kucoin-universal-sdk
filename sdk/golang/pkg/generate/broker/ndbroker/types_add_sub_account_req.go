// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package ndbroker

// AddSubAccountReq struct for AddSubAccountReq
type AddSubAccountReq struct {
	// Sub-account Name. Note that this name is unique across the exchange. It is recommended to add a special identifier to prevent name duplication.
	AccountName string `json:"accountName,omitempty"`
}

// NewAddSubAccountReq instantiates a new AddSubAccountReq object
// This constructor will assign default values to properties that have it defined
func NewAddSubAccountReq(accountName string) *AddSubAccountReq {
	this := AddSubAccountReq{}
	this.AccountName = accountName
	return &this
}

// NewAddSubAccountReqWithDefaults instantiates a new AddSubAccountReq object
// This constructor will only assign default values to properties that have it defined,
func NewAddSubAccountReqWithDefaults() *AddSubAccountReq {
	this := AddSubAccountReq{}
	return &this
}

func (o *AddSubAccountReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["accountName"] = o.AccountName
	return toSerialize
}

type AddSubAccountReqBuilder struct {
	obj *AddSubAccountReq
}

func NewAddSubAccountReqBuilder() *AddSubAccountReqBuilder {
	return &AddSubAccountReqBuilder{obj: NewAddSubAccountReqWithDefaults()}
}

// Sub-account Name. Note that this name is unique across the exchange. It is recommended to add a special identifier to prevent name duplication.
func (builder *AddSubAccountReqBuilder) SetAccountName(value string) *AddSubAccountReqBuilder {
	builder.obj.AccountName = value
	return builder
}

func (builder *AddSubAccountReqBuilder) Build() *AddSubAccountReq {
	return builder.obj
}
