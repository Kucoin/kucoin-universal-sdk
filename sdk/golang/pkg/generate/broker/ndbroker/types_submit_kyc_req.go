// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package ndbroker

// SubmitKYCReq struct for SubmitKYCReq
type SubmitKYCReq struct {
	// client uid
	ClientUid string `json:"clientUid,omitempty"`
	// first Name
	FirstName string `json:"firstName,omitempty"`
	// last Name
	LastName string `json:"lastName,omitempty"`
	// ISO country code
	IssueCountry string `json:"issueCountry,omitempty"`
	// Birth Date
	BirthDate string `json:"birthDate,omitempty"`
	// Identity type
	IdentityType string `json:"identityType,omitempty"`
	// Identity Number
	IdentityNumber string `json:"identityNumber,omitempty"`
	// expire Date. If there is no expiration date, please fill in: 2099-01-01
	ExpireDate string `json:"expireDate,omitempty"`
	// **Optional when identityType=bvn,** Front photo of the ID card, in base64 format, PNG or JPG is recommended, and the size cannot exceed 2MB. If it exceeds 2MB, it is recommended to adjust the resolution and compress it to less than 2MB
	FrontPhoto string `json:"frontPhoto,omitempty"`
	// **Optional when identityType=passport/bvn,** Back photo of ID, same as above
	BackendPhoto string `json:"backendPhoto,omitempty"`
	// Selfie photo, in base64 format, PNG or JPG is recommended, and the size cannot exceed 2MB. If it exceeds 2MB, it is recommended to adjust the resolution and compress it to less than 2MB
	FacePhoto string `json:"facePhoto,omitempty"`
}

// NewSubmitKYCReq instantiates a new SubmitKYCReq object
// This constructor will assign default values to properties that have it defined
func NewSubmitKYCReq(clientUid string, firstName string, lastName string, issueCountry string, birthDate string, identityType string, identityNumber string, expireDate string, frontPhoto string, backendPhoto string, facePhoto string) *SubmitKYCReq {
	this := SubmitKYCReq{}
	this.ClientUid = clientUid
	this.FirstName = firstName
	this.LastName = lastName
	this.IssueCountry = issueCountry
	this.BirthDate = birthDate
	this.IdentityType = identityType
	this.IdentityNumber = identityNumber
	this.ExpireDate = expireDate
	this.FrontPhoto = frontPhoto
	this.BackendPhoto = backendPhoto
	this.FacePhoto = facePhoto
	return &this
}

// NewSubmitKYCReqWithDefaults instantiates a new SubmitKYCReq object
// This constructor will only assign default values to properties that have it defined,
func NewSubmitKYCReqWithDefaults() *SubmitKYCReq {
	this := SubmitKYCReq{}
	return &this
}

func (o *SubmitKYCReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["clientUid"] = o.ClientUid
	toSerialize["firstName"] = o.FirstName
	toSerialize["lastName"] = o.LastName
	toSerialize["issueCountry"] = o.IssueCountry
	toSerialize["birthDate"] = o.BirthDate
	toSerialize["identityType"] = o.IdentityType
	toSerialize["identityNumber"] = o.IdentityNumber
	toSerialize["expireDate"] = o.ExpireDate
	toSerialize["frontPhoto"] = o.FrontPhoto
	toSerialize["backendPhoto"] = o.BackendPhoto
	toSerialize["facePhoto"] = o.FacePhoto
	return toSerialize
}

type SubmitKYCReqBuilder struct {
	obj *SubmitKYCReq
}

func NewSubmitKYCReqBuilder() *SubmitKYCReqBuilder {
	return &SubmitKYCReqBuilder{obj: NewSubmitKYCReqWithDefaults()}
}

// client uid
func (builder *SubmitKYCReqBuilder) SetClientUid(value string) *SubmitKYCReqBuilder {
	builder.obj.ClientUid = value
	return builder
}

// first Name
func (builder *SubmitKYCReqBuilder) SetFirstName(value string) *SubmitKYCReqBuilder {
	builder.obj.FirstName = value
	return builder
}

// last Name
func (builder *SubmitKYCReqBuilder) SetLastName(value string) *SubmitKYCReqBuilder {
	builder.obj.LastName = value
	return builder
}

// ISO country code
func (builder *SubmitKYCReqBuilder) SetIssueCountry(value string) *SubmitKYCReqBuilder {
	builder.obj.IssueCountry = value
	return builder
}

// Birth Date
func (builder *SubmitKYCReqBuilder) SetBirthDate(value string) *SubmitKYCReqBuilder {
	builder.obj.BirthDate = value
	return builder
}

// Identity type
func (builder *SubmitKYCReqBuilder) SetIdentityType(value string) *SubmitKYCReqBuilder {
	builder.obj.IdentityType = value
	return builder
}

// Identity Number
func (builder *SubmitKYCReqBuilder) SetIdentityNumber(value string) *SubmitKYCReqBuilder {
	builder.obj.IdentityNumber = value
	return builder
}

// expire Date. If there is no expiration date, please fill in: 2099-01-01
func (builder *SubmitKYCReqBuilder) SetExpireDate(value string) *SubmitKYCReqBuilder {
	builder.obj.ExpireDate = value
	return builder
}

// **Optional when identityType=bvn,** Front photo of the ID card, in base64 format, PNG or JPG is recommended, and the size cannot exceed 2MB. If it exceeds 2MB, it is recommended to adjust the resolution and compress it to less than 2MB
func (builder *SubmitKYCReqBuilder) SetFrontPhoto(value string) *SubmitKYCReqBuilder {
	builder.obj.FrontPhoto = value
	return builder
}

// **Optional when identityType=passport/bvn,** Back photo of ID, same as above
func (builder *SubmitKYCReqBuilder) SetBackendPhoto(value string) *SubmitKYCReqBuilder {
	builder.obj.BackendPhoto = value
	return builder
}

// Selfie photo, in base64 format, PNG or JPG is recommended, and the size cannot exceed 2MB. If it exceeds 2MB, it is recommended to adjust the resolution and compress it to less than 2MB
func (builder *SubmitKYCReqBuilder) SetFacePhoto(value string) *SubmitKYCReqBuilder {
	builder.obj.FacePhoto = value
	return builder
}

func (builder *SubmitKYCReqBuilder) Build() *SubmitKYCReq {
	return builder.obj
}
