// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package account

// GetSpotAccountListData struct for GetSpotAccountListData
type GetSpotAccountListData struct {
	// Account ID
	Id string `json:"id,omitempty"`
	// Currency
	Currency string `json:"currency,omitempty"`
	// Account type: main, trade, isolated (abandon), margin (abandon)
	Type string `json:"type,omitempty"`
	// Total funds in the account
	Balance string `json:"balance,omitempty"`
	// Funds available to withdraw or trade
	Available string `json:"available,omitempty"`
	// Funds on hold (not available for use)
	Holds string `json:"holds,omitempty"`
}

// NewGetSpotAccountListData instantiates a new GetSpotAccountListData object
// This constructor will assign default values to properties that have it defined
func NewGetSpotAccountListData(id string, currency string, Type_ string, balance string, available string, holds string) *GetSpotAccountListData {
	this := GetSpotAccountListData{}
	this.Id = id
	this.Currency = currency
	this.Type = Type_
	this.Balance = balance
	this.Available = available
	this.Holds = holds
	return &this
}

// NewGetSpotAccountListDataWithDefaults instantiates a new GetSpotAccountListData object
// This constructor will only assign default values to properties that have it defined,
func NewGetSpotAccountListDataWithDefaults() *GetSpotAccountListData {
	this := GetSpotAccountListData{}
	return &this
}

func (o *GetSpotAccountListData) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["currency"] = o.Currency
	toSerialize["type"] = o.Type
	toSerialize["balance"] = o.Balance
	toSerialize["available"] = o.Available
	toSerialize["holds"] = o.Holds
	return toSerialize
}
