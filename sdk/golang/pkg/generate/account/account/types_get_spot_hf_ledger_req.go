// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package account

// GetSpotHFLedgerReq struct for GetSpotHFLedgerReq
type GetSpotHFLedgerReq struct {
	// Currency (you can choose more than one currency). You can specify a max. of 10 currencies in one go. If not specified, all currencies will be queried by default.
	Currency *string `json:"currency,omitempty" url:"currency,omitempty"`
	// direction: in, out
	Direction *string `json:"direction,omitempty" url:"direction,omitempty"`
	// Transaction type
	BizType *string `json:"bizType,omitempty" url:"bizType,omitempty"`
	// The ID of the last set of data from the previous data batch. By default, the latest information is given.
	LastId *int64 `json:"lastId,omitempty" url:"lastId,omitempty"`
	// Default100, Max200
	Limit *int32 `json:"limit,omitempty" url:"limit,omitempty"`
	// Start time (milliseconds)
	StartAt *int64 `json:"startAt,omitempty" url:"startAt,omitempty"`
	// End time (milliseconds)
	EndAt *int64 `json:"endAt,omitempty" url:"endAt,omitempty"`
}

// NewGetSpotHFLedgerReq instantiates a new GetSpotHFLedgerReq object
// This constructor will assign default values to properties that have it defined
func NewGetSpotHFLedgerReq() *GetSpotHFLedgerReq {
	this := GetSpotHFLedgerReq{}
	var limit int32 = 100
	this.Limit = &limit
	return &this
}

// NewGetSpotHFLedgerReqWithDefaults instantiates a new GetSpotHFLedgerReq object
// This constructor will only assign default values to properties that have it defined,
func NewGetSpotHFLedgerReqWithDefaults() *GetSpotHFLedgerReq {
	this := GetSpotHFLedgerReq{}
	var limit int32 = 100
	this.Limit = &limit
	return &this
}

func (o *GetSpotHFLedgerReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	toSerialize["direction"] = o.Direction
	toSerialize["bizType"] = o.BizType
	toSerialize["lastId"] = o.LastId
	toSerialize["limit"] = o.Limit
	toSerialize["startAt"] = o.StartAt
	toSerialize["endAt"] = o.EndAt
	return toSerialize
}

type GetSpotHFLedgerReqBuilder struct {
	obj *GetSpotHFLedgerReq
}

func NewGetSpotHFLedgerReqBuilder() *GetSpotHFLedgerReqBuilder {
	return &GetSpotHFLedgerReqBuilder{obj: NewGetSpotHFLedgerReqWithDefaults()}
}

// Currency (you can choose more than one currency). You can specify a max. of 10 currencies in one go. If not specified, all currencies will be queried by default.
func (builder *GetSpotHFLedgerReqBuilder) SetCurrency(value string) *GetSpotHFLedgerReqBuilder {
	builder.obj.Currency = &value
	return builder
}

// direction: in, out
func (builder *GetSpotHFLedgerReqBuilder) SetDirection(value string) *GetSpotHFLedgerReqBuilder {
	builder.obj.Direction = &value
	return builder
}

// Transaction type
func (builder *GetSpotHFLedgerReqBuilder) SetBizType(value string) *GetSpotHFLedgerReqBuilder {
	builder.obj.BizType = &value
	return builder
}

// The ID of the last set of data from the previous data batch. By default, the latest information is given.
func (builder *GetSpotHFLedgerReqBuilder) SetLastId(value int64) *GetSpotHFLedgerReqBuilder {
	builder.obj.LastId = &value
	return builder
}

// Default100, Max200
func (builder *GetSpotHFLedgerReqBuilder) SetLimit(value int32) *GetSpotHFLedgerReqBuilder {
	builder.obj.Limit = &value
	return builder
}

// Start time (milliseconds)
func (builder *GetSpotHFLedgerReqBuilder) SetStartAt(value int64) *GetSpotHFLedgerReqBuilder {
	builder.obj.StartAt = &value
	return builder
}

// End time (milliseconds)
func (builder *GetSpotHFLedgerReqBuilder) SetEndAt(value int64) *GetSpotHFLedgerReqBuilder {
	builder.obj.EndAt = &value
	return builder
}

func (builder *GetSpotHFLedgerReqBuilder) Build() *GetSpotHFLedgerReq {
	return builder.obj
}
