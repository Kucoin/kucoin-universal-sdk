// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package account

// GetFuturesLedgerDataList struct for GetFuturesLedgerDataList
type GetFuturesLedgerDataList struct {
	// Ledger time
	Time int64 `json:"time,omitempty"`
	// Type: RealisedPNL, Deposit, Withdrawal, TransferIn, TransferOut
	Type string `json:"type,omitempty"`
	// Transaction amount
	Amount float64 `json:"amount,omitempty"`
	// Fee
	Fee float64 `json:"fee,omitempty"`
	// Account equity
	AccountEquity float64 `json:"accountEquity,omitempty"`
	// Status: Completed, Pending
	Status string `json:"status,omitempty"`
	// Ticker symbol of the contract
	Remark string `json:"remark,omitempty"`
	// Offset
	Offset int32 `json:"offset,omitempty"`
	// Currency
	Currency string `json:"currency,omitempty"`
}

// NewGetFuturesLedgerDataList instantiates a new GetFuturesLedgerDataList object
// This constructor will assign default values to properties that have it defined
func NewGetFuturesLedgerDataList(time int64, Type_ string, amount float64, fee float64, accountEquity float64, status string, remark string, offset int32, currency string) *GetFuturesLedgerDataList {
	this := GetFuturesLedgerDataList{}
	this.Time = time
	this.Type = Type_
	this.Amount = amount
	this.Fee = fee
	this.AccountEquity = accountEquity
	this.Status = status
	this.Remark = remark
	this.Offset = offset
	this.Currency = currency
	return &this
}

// NewGetFuturesLedgerDataListWithDefaults instantiates a new GetFuturesLedgerDataList object
// This constructor will only assign default values to properties that have it defined,
func NewGetFuturesLedgerDataListWithDefaults() *GetFuturesLedgerDataList {
	this := GetFuturesLedgerDataList{}
	return &this
}

func (o *GetFuturesLedgerDataList) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["time"] = o.Time
	toSerialize["type"] = o.Type
	toSerialize["amount"] = o.Amount
	toSerialize["fee"] = o.Fee
	toSerialize["accountEquity"] = o.AccountEquity
	toSerialize["status"] = o.Status
	toSerialize["remark"] = o.Remark
	toSerialize["offset"] = o.Offset
	toSerialize["currency"] = o.Currency
	return toSerialize
}
