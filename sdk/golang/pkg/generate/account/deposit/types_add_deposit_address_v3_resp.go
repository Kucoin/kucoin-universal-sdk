// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package deposit

import (
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// AddDepositAddressV3Resp struct for AddDepositAddressV3Resp
type AddDepositAddressV3Resp struct {
	// common response
	CommonResponse *types.RestResponse
	// Deposit address
	Address string `json:"address,omitempty"`
	// Address remark. If thereâ€™s no remark, it is empty. When you withdraw from other platforms to KuCoin, you need to fill in memo(tag). Be careful: If you do not fill in memo(tag), your deposit may not be available.
	Memo string `json:"memo,omitempty"`
	// The chainId of currency
	ChainId string `json:"chainId,omitempty"`
	// Deposit account type: MAIN (funding account), TRADE (spot trading account)
	To string `json:"to,omitempty"`
	// Expiration time; Lightning network expiration time; this field is not applicable to non-Lightning networks
	ExpirationDate int32 `json:"expirationDate,omitempty"`
	// currency
	Currency string `json:"currency,omitempty"`
	// The chainName of currency
	ChainName string `json:"chainName,omitempty"`
}

// NewAddDepositAddressV3Resp instantiates a new AddDepositAddressV3Resp object
// This constructor will assign default values to properties that have it defined
func NewAddDepositAddressV3Resp(address string, memo string, chainId string, to string, expirationDate int32, currency string, chainName string) *AddDepositAddressV3Resp {
	this := AddDepositAddressV3Resp{}
	this.Address = address
	this.Memo = memo
	this.ChainId = chainId
	this.To = to
	this.ExpirationDate = expirationDate
	this.Currency = currency
	this.ChainName = chainName
	return &this
}

// NewAddDepositAddressV3RespWithDefaults instantiates a new AddDepositAddressV3Resp object
// This constructor will only assign default values to properties that have it defined,
func NewAddDepositAddressV3RespWithDefaults() *AddDepositAddressV3Resp {
	this := AddDepositAddressV3Resp{}
	return &this
}

func (o *AddDepositAddressV3Resp) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["memo"] = o.Memo
	toSerialize["chainId"] = o.ChainId
	toSerialize["to"] = o.To
	toSerialize["expirationDate"] = o.ExpirationDate
	toSerialize["currency"] = o.Currency
	toSerialize["chainName"] = o.ChainName
	return toSerialize
}

func (o *AddDepositAddressV3Resp) SetCommonResponse(response *types.RestResponse) {
	o.CommonResponse = response
}
