// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package deposit

// GetDepositAddressV1Req struct for GetDepositAddressV1Req
type GetDepositAddressV1Req struct {
	// currency
	Currency *string `json:"currency,omitempty" url:"currency,omitempty"`
	// The chainId of currency, e.g. the available values for USDT are OMNI, ERC20, and TRC20; default is ERC20. The available values for BTC are Native, Segwit, TRC20; the parameters are bech32, btc, trx; default is Native. This only applies to multi-chain currencies; no need for single-chain currencies.
	Chain *string `json:"chain,omitempty" url:"chain,omitempty"`
}

// NewGetDepositAddressV1Req instantiates a new GetDepositAddressV1Req object
// This constructor will assign default values to properties that have it defined
func NewGetDepositAddressV1Req() *GetDepositAddressV1Req {
	this := GetDepositAddressV1Req{}
	var chain string = "eth"
	this.Chain = &chain
	return &this
}

// NewGetDepositAddressV1ReqWithDefaults instantiates a new GetDepositAddressV1Req object
// This constructor will only assign default values to properties that have it defined,
func NewGetDepositAddressV1ReqWithDefaults() *GetDepositAddressV1Req {
	this := GetDepositAddressV1Req{}
	var chain string = "eth"
	this.Chain = &chain
	return &this
}

func (o *GetDepositAddressV1Req) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	toSerialize["chain"] = o.Chain
	return toSerialize
}

type GetDepositAddressV1ReqBuilder struct {
	obj *GetDepositAddressV1Req
}

func NewGetDepositAddressV1ReqBuilder() *GetDepositAddressV1ReqBuilder {
	return &GetDepositAddressV1ReqBuilder{obj: NewGetDepositAddressV1ReqWithDefaults()}
}

// currency
func (builder *GetDepositAddressV1ReqBuilder) SetCurrency(value string) *GetDepositAddressV1ReqBuilder {
	builder.obj.Currency = &value
	return builder
}

// The chainId of currency, e.g. the available values for USDT are OMNI, ERC20, and TRC20; default is ERC20. The available values for BTC are Native, Segwit, TRC20; the parameters are bech32, btc, trx; default is Native. This only applies to multi-chain currencies; no need for single-chain currencies.
func (builder *GetDepositAddressV1ReqBuilder) SetChain(value string) *GetDepositAddressV1ReqBuilder {
	builder.obj.Chain = &value
	return builder
}

func (builder *GetDepositAddressV1ReqBuilder) Build() *GetDepositAddressV1Req {
	return builder.obj
}
