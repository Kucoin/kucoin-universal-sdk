// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package subaccount

// AddSubAccountReq struct for AddSubAccountReq
type AddSubAccountReq struct {
	// Password (7–24 characters, must contain letters and numbers, cannot only contain numbers or include special characters)
	Password string `json:"password,omitempty"`
	// Remarks (1–24 characters)
	Remarks *string `json:"remarks,omitempty"`
	// Sub-account name (must contain 7–32 characters, at least one number and one letter. Cannot contain any spaces.)
	SubName string `json:"subName,omitempty"`
	// Permission (types include Spot, Futures, Margin permissions, which can be used alone or in combination).
	Access string `json:"access,omitempty"`
}

// NewAddSubAccountReq instantiates a new AddSubAccountReq object
// This constructor will assign default values to properties that have it defined
func NewAddSubAccountReq(password string, subName string, access string) *AddSubAccountReq {
	this := AddSubAccountReq{}
	this.Password = password
	this.SubName = subName
	this.Access = access
	return &this
}

// NewAddSubAccountReqWithDefaults instantiates a new AddSubAccountReq object
// This constructor will only assign default values to properties that have it defined,
func NewAddSubAccountReqWithDefaults() *AddSubAccountReq {
	this := AddSubAccountReq{}
	return &this
}

func (o *AddSubAccountReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["password"] = o.Password
	toSerialize["remarks"] = o.Remarks
	toSerialize["subName"] = o.SubName
	toSerialize["access"] = o.Access
	return toSerialize
}

type AddSubAccountReqBuilder struct {
	obj *AddSubAccountReq
}

func NewAddSubAccountReqBuilder() *AddSubAccountReqBuilder {
	return &AddSubAccountReqBuilder{obj: NewAddSubAccountReqWithDefaults()}
}

// Password (7–24 characters, must contain letters and numbers, cannot only contain numbers or include special characters)
func (builder *AddSubAccountReqBuilder) SetPassword(value string) *AddSubAccountReqBuilder {
	builder.obj.Password = value
	return builder
}

// Remarks (1–24 characters)
func (builder *AddSubAccountReqBuilder) SetRemarks(value string) *AddSubAccountReqBuilder {
	builder.obj.Remarks = &value
	return builder
}

// Sub-account name (must contain 7–32 characters, at least one number and one letter. Cannot contain any spaces.)
func (builder *AddSubAccountReqBuilder) SetSubName(value string) *AddSubAccountReqBuilder {
	builder.obj.SubName = value
	return builder
}

// Permission (types include Spot, Futures, Margin permissions, which can be used alone or in combination).
func (builder *AddSubAccountReqBuilder) SetAccess(value string) *AddSubAccountReqBuilder {
	builder.obj.Access = value
	return builder
}

func (builder *AddSubAccountReqBuilder) Build() *AddSubAccountReq {
	return builder.obj
}
