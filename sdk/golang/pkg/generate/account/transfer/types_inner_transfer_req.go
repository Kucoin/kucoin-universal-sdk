// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package transfer

// InnerTransferReq struct for InnerTransferReq
type InnerTransferReq struct {
	// Unique order ID created by users to identify their orders, e.g. UUID, with a maximum length of 128 bits
	ClientOid string `json:"clientOid,omitempty"`
	// currency
	Currency string `json:"currency,omitempty"`
	// Transfer amount: The amount is a positive integer multiple of the currency precision.
	Amount string `json:"amount,omitempty"`
	// Receiving Account Type: main, trade, margin, isolated, margin_v2, isolated_v2, contract
	To string `json:"to,omitempty"`
	// Trading pair, required when the payment account type is isolated, e.g.: BTC-USDT
	FromTag *string `json:"fromTag,omitempty"`
	// Trading pair, required when the payment account type is isolated, e.g.: BTC-USDT
	ToTag *string `json:"toTag,omitempty"`
	// Payment Account Type: main, trade, margin, isolated, margin_v2, isolated_v2
	From string `json:"from,omitempty"`
}

// NewInnerTransferReq instantiates a new InnerTransferReq object
// This constructor will assign default values to properties that have it defined
func NewInnerTransferReq(clientOid string, currency string, amount string, to string, from string) *InnerTransferReq {
	this := InnerTransferReq{}
	this.ClientOid = clientOid
	this.Currency = currency
	this.Amount = amount
	this.To = to
	this.From = from
	return &this
}

// NewInnerTransferReqWithDefaults instantiates a new InnerTransferReq object
// This constructor will only assign default values to properties that have it defined,
func NewInnerTransferReqWithDefaults() *InnerTransferReq {
	this := InnerTransferReq{}
	return &this
}

func (o *InnerTransferReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["clientOid"] = o.ClientOid
	toSerialize["currency"] = o.Currency
	toSerialize["amount"] = o.Amount
	toSerialize["to"] = o.To
	toSerialize["fromTag"] = o.FromTag
	toSerialize["toTag"] = o.ToTag
	toSerialize["from"] = o.From
	return toSerialize
}

type InnerTransferReqBuilder struct {
	obj *InnerTransferReq
}

func NewInnerTransferReqBuilder() *InnerTransferReqBuilder {
	return &InnerTransferReqBuilder{obj: NewInnerTransferReqWithDefaults()}
}

// Unique order ID created by users to identify their orders, e.g. UUID, with a maximum length of 128 bits
func (builder *InnerTransferReqBuilder) SetClientOid(value string) *InnerTransferReqBuilder {
	builder.obj.ClientOid = value
	return builder
}

// currency
func (builder *InnerTransferReqBuilder) SetCurrency(value string) *InnerTransferReqBuilder {
	builder.obj.Currency = value
	return builder
}

// Transfer amount: The amount is a positive integer multiple of the currency precision.
func (builder *InnerTransferReqBuilder) SetAmount(value string) *InnerTransferReqBuilder {
	builder.obj.Amount = value
	return builder
}

// Receiving Account Type: main, trade, margin, isolated, margin_v2, isolated_v2, contract
func (builder *InnerTransferReqBuilder) SetTo(value string) *InnerTransferReqBuilder {
	builder.obj.To = value
	return builder
}

// Trading pair, required when the payment account type is isolated, e.g.: BTC-USDT
func (builder *InnerTransferReqBuilder) SetFromTag(value string) *InnerTransferReqBuilder {
	builder.obj.FromTag = &value
	return builder
}

// Trading pair, required when the payment account type is isolated, e.g.: BTC-USDT
func (builder *InnerTransferReqBuilder) SetToTag(value string) *InnerTransferReqBuilder {
	builder.obj.ToTag = &value
	return builder
}

// Payment Account Type: main, trade, margin, isolated, margin_v2, isolated_v2
func (builder *InnerTransferReqBuilder) SetFrom(value string) *InnerTransferReqBuilder {
	builder.obj.From = value
	return builder
}

func (builder *InnerTransferReqBuilder) Build() *InnerTransferReq {
	return builder.obj
}
