// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package fee

// GetSpotActualFeeData struct for GetSpotActualFeeData
type GetSpotActualFeeData struct {
	// The unique identity of the trading pair; will not change even if the trading pair is renamed
	Symbol string `json:"symbol,omitempty"`
	// Actual taker fee rate of the symbol
	TakerFeeRate string `json:"takerFeeRate,omitempty"`
	// Actual maker fee rate of the symbol
	MakerFeeRate string `json:"makerFeeRate,omitempty"`
	// Buy tax rate; this field is visible to users in certain countries
	SellTaxRate *string `json:"sellTaxRate,omitempty"`
	// Sell tax rate; this field is visible to users in certain countries
	BuyTaxRate *string `json:"buyTaxRate,omitempty"`
}

// NewGetSpotActualFeeData instantiates a new GetSpotActualFeeData object
// This constructor will assign default values to properties that have it defined
func NewGetSpotActualFeeData(symbol string, takerFeeRate string, makerFeeRate string) *GetSpotActualFeeData {
	this := GetSpotActualFeeData{}
	this.Symbol = symbol
	this.TakerFeeRate = takerFeeRate
	this.MakerFeeRate = makerFeeRate
	return &this
}

// NewGetSpotActualFeeDataWithDefaults instantiates a new GetSpotActualFeeData object
// This constructor will only assign default values to properties that have it defined,
func NewGetSpotActualFeeDataWithDefaults() *GetSpotActualFeeData {
	this := GetSpotActualFeeData{}
	return &this
}

func (o *GetSpotActualFeeData) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["symbol"] = o.Symbol
	toSerialize["takerFeeRate"] = o.TakerFeeRate
	toSerialize["makerFeeRate"] = o.MakerFeeRate
	toSerialize["sellTaxRate"] = o.SellTaxRate
	toSerialize["buyTaxRate"] = o.BuyTaxRate
	return toSerialize
}
