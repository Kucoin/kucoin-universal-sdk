// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package withdrawal

import (
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// GetWithdrawalHistoryByIdResp struct for GetWithdrawalHistoryByIdResp
type GetWithdrawalHistoryByIdResp struct {
	// common response
	CommonResponse *types.RestResponse
	// Unique ID
	Id string `json:"id,omitempty"`
	// User ID
	Uid int32 `json:"uid,omitempty"`
	// A unique currency code that will never change
	Currency string `json:"currency,omitempty"`
	// The chain id of currency
	ChainId string `json:"chainId,omitempty"`
	// Chain name of currency
	ChainName string `json:"chainName,omitempty"`
	// Currency name; will change after renaming
	CurrencyName string `json:"currencyName,omitempty"`
	// Status. Available value: REVIEW, PROCESSING, WALLET_PROCESSING, SUCCESS and FAILURE
	Status string `json:"status,omitempty"`
	// Failure reason code
	FailureReason string `json:"failureReason,omitempty"`
	// Failure reason message
	FailureReasonMsg *string `json:"failureReasonMsg,omitempty"`
	// Withwrawal address
	Address string `json:"address,omitempty"`
	// Address remark. If thereâ€™s no remark, it is empty.
	Memo string `json:"memo,omitempty"`
	// Internal withdrawal or not.
	IsInner bool `json:"isInner,omitempty"`
	// Withwrawal amount
	Amount string `json:"amount,omitempty"`
	// Fees charged for withwrawal
	Fee string `json:"fee,omitempty"`
	// Wallet Transaction ID
	WalletTxId *string `json:"walletTxId,omitempty"`
	// Address remark
	AddressRemark *string `json:"addressRemark,omitempty"`
	// Remark
	Remark string `json:"remark,omitempty"`
	// Creation Time (milliseconds)
	CreatedAt  int64  `json:"createdAt,omitempty"`
	CancelType string `json:"cancelType,omitempty"`
	// Users in some regions need query this field
	Taxes []string `json:"taxes,omitempty"`
	// Tax description
	TaxDescription *string `json:"taxDescription,omitempty"`
	// Return status
	ReturnStatus string `json:"returnStatus,omitempty"`
	// Return amount
	ReturnAmount *string `json:"returnAmount,omitempty"`
	// Return currency
	ReturnCurrency string `json:"returnCurrency,omitempty"`
}

// NewGetWithdrawalHistoryByIdResp instantiates a new GetWithdrawalHistoryByIdResp object
// This constructor will assign default values to properties that have it defined
func NewGetWithdrawalHistoryByIdResp(id string, uid int32, currency string, chainId string, chainName string, currencyName string, status string, failureReason string, address string, memo string, isInner bool, amount string, fee string, remark string, createdAt int64, cancelType string, returnStatus string, returnCurrency string) *GetWithdrawalHistoryByIdResp {
	this := GetWithdrawalHistoryByIdResp{}
	this.Id = id
	this.Uid = uid
	this.Currency = currency
	this.ChainId = chainId
	this.ChainName = chainName
	this.CurrencyName = currencyName
	this.Status = status
	this.FailureReason = failureReason
	this.Address = address
	this.Memo = memo
	this.IsInner = isInner
	this.Amount = amount
	this.Fee = fee
	this.Remark = remark
	this.CreatedAt = createdAt
	this.CancelType = cancelType
	this.ReturnStatus = returnStatus
	this.ReturnCurrency = returnCurrency
	return &this
}

// NewGetWithdrawalHistoryByIdRespWithDefaults instantiates a new GetWithdrawalHistoryByIdResp object
// This constructor will only assign default values to properties that have it defined,
func NewGetWithdrawalHistoryByIdRespWithDefaults() *GetWithdrawalHistoryByIdResp {
	this := GetWithdrawalHistoryByIdResp{}
	return &this
}

func (o *GetWithdrawalHistoryByIdResp) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["uid"] = o.Uid
	toSerialize["currency"] = o.Currency
	toSerialize["chainId"] = o.ChainId
	toSerialize["chainName"] = o.ChainName
	toSerialize["currencyName"] = o.CurrencyName
	toSerialize["status"] = o.Status
	toSerialize["failureReason"] = o.FailureReason
	toSerialize["failureReasonMsg"] = o.FailureReasonMsg
	toSerialize["address"] = o.Address
	toSerialize["memo"] = o.Memo
	toSerialize["isInner"] = o.IsInner
	toSerialize["amount"] = o.Amount
	toSerialize["fee"] = o.Fee
	toSerialize["walletTxId"] = o.WalletTxId
	toSerialize["addressRemark"] = o.AddressRemark
	toSerialize["remark"] = o.Remark
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["cancelType"] = o.CancelType
	toSerialize["taxes"] = o.Taxes
	toSerialize["taxDescription"] = o.TaxDescription
	toSerialize["returnStatus"] = o.ReturnStatus
	toSerialize["returnAmount"] = o.ReturnAmount
	toSerialize["returnCurrency"] = o.ReturnCurrency
	return toSerialize
}

func (o *GetWithdrawalHistoryByIdResp) SetCommonResponse(response *types.RestResponse) {
	o.CommonResponse = response
}
