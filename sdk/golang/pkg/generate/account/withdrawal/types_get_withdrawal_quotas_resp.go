// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package withdrawal

import (
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// GetWithdrawalQuotasResp struct for GetWithdrawalQuotasResp
type GetWithdrawalQuotasResp struct {
	// common response
	CommonResponse *types.RestResponse
	Currency       string `json:"currency,omitempty"`
	LimitBTCAmount string `json:"limitBTCAmount,omitempty"`
	UsedBTCAmount  string `json:"usedBTCAmount,omitempty"`
	// Withdrawal limit currency
	QuotaCurrency string `json:"quotaCurrency,omitempty"`
	// The intraday available withdrawal amount (withdrawal limit currency)
	LimitQuotaCurrencyAmount string `json:"limitQuotaCurrencyAmount,omitempty"`
	// The intraday cumulative withdrawal amount (withdrawal limit currency)
	UsedQuotaCurrencyAmount string `json:"usedQuotaCurrencyAmount,omitempty"`
	// Remaining amount available to withdraw the current day
	RemainAmount string `json:"remainAmount,omitempty"`
	// Current available withdrawal amount
	AvailableAmount string `json:"availableAmount,omitempty"`
	// Minimum withdrawal fee
	WithdrawMinFee string `json:"withdrawMinFee,omitempty"`
	// Fees for internal withdrawal
	InnerWithdrawMinFee string `json:"innerWithdrawMinFee,omitempty"`
	// Minimum withdrawal amount
	WithdrawMinSize string `json:"withdrawMinSize,omitempty"`
	// Is the withdraw function enabled?
	IsWithdrawEnabled bool `json:"isWithdrawEnabled,omitempty"`
	// Floating point precision.
	Precision int32 `json:"precision,omitempty"`
	// The chainName of currency
	Chain string `json:"chain,omitempty"`
	// Reasons for restriction. Usually empty.
	Reason string `json:"reason,omitempty"`
	// Total locked amount (including the amount locked into USDT for each currency)
	LockedAmount string `json:"lockedAmount,omitempty"`
}

// NewGetWithdrawalQuotasResp instantiates a new GetWithdrawalQuotasResp object
// This constructor will assign default values to properties that have it defined
func NewGetWithdrawalQuotasResp(currency string, limitBTCAmount string, usedBTCAmount string, quotaCurrency string, limitQuotaCurrencyAmount string, usedQuotaCurrencyAmount string, remainAmount string, availableAmount string, withdrawMinFee string, innerWithdrawMinFee string, withdrawMinSize string, isWithdrawEnabled bool, precision int32, chain string, reason string, lockedAmount string) *GetWithdrawalQuotasResp {
	this := GetWithdrawalQuotasResp{}
	this.Currency = currency
	this.LimitBTCAmount = limitBTCAmount
	this.UsedBTCAmount = usedBTCAmount
	this.QuotaCurrency = quotaCurrency
	this.LimitQuotaCurrencyAmount = limitQuotaCurrencyAmount
	this.UsedQuotaCurrencyAmount = usedQuotaCurrencyAmount
	this.RemainAmount = remainAmount
	this.AvailableAmount = availableAmount
	this.WithdrawMinFee = withdrawMinFee
	this.InnerWithdrawMinFee = innerWithdrawMinFee
	this.WithdrawMinSize = withdrawMinSize
	this.IsWithdrawEnabled = isWithdrawEnabled
	this.Precision = precision
	this.Chain = chain
	this.Reason = reason
	this.LockedAmount = lockedAmount
	return &this
}

// NewGetWithdrawalQuotasRespWithDefaults instantiates a new GetWithdrawalQuotasResp object
// This constructor will only assign default values to properties that have it defined,
func NewGetWithdrawalQuotasRespWithDefaults() *GetWithdrawalQuotasResp {
	this := GetWithdrawalQuotasResp{}
	return &this
}

func (o *GetWithdrawalQuotasResp) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	toSerialize["limitBTCAmount"] = o.LimitBTCAmount
	toSerialize["usedBTCAmount"] = o.UsedBTCAmount
	toSerialize["quotaCurrency"] = o.QuotaCurrency
	toSerialize["limitQuotaCurrencyAmount"] = o.LimitQuotaCurrencyAmount
	toSerialize["usedQuotaCurrencyAmount"] = o.UsedQuotaCurrencyAmount
	toSerialize["remainAmount"] = o.RemainAmount
	toSerialize["availableAmount"] = o.AvailableAmount
	toSerialize["withdrawMinFee"] = o.WithdrawMinFee
	toSerialize["innerWithdrawMinFee"] = o.InnerWithdrawMinFee
	toSerialize["withdrawMinSize"] = o.WithdrawMinSize
	toSerialize["isWithdrawEnabled"] = o.IsWithdrawEnabled
	toSerialize["precision"] = o.Precision
	toSerialize["chain"] = o.Chain
	toSerialize["reason"] = o.Reason
	toSerialize["lockedAmount"] = o.LockedAmount
	return toSerialize
}

func (o *GetWithdrawalQuotasResp) SetCommonResponse(response *types.RestResponse) {
	o.CommonResponse = response
}
