// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package order

// GetTradeHistoryOldItems struct for GetTradeHistoryOldItems
type GetTradeHistoryOldItems struct {
	// symbol
	Symbol  *string `json:"symbol,omitempty"`
	TradeId *string `json:"tradeId,omitempty"`
	// The unique order id generated by the trading system
	OrderId *string `json:"orderId,omitempty"`
	// Counterparty order ID
	CounterOrderId *string `json:"counterOrderId,omitempty"`
	// Buy or sell
	Side *string `json:"side,omitempty"`
	// Liquidity type: taker or maker
	Liquidity  *string `json:"liquidity,omitempty"`
	ForceTaker *bool   `json:"forceTaker,omitempty"`
	// Order Price
	Price *string `json:"price,omitempty"`
	// Order Size
	Size *string `json:"size,omitempty"`
	// Order Funds
	Funds *string `json:"funds,omitempty"`
	// [Handling fees](https://www.kucoin.com/docs-new/api-5327739)
	Fee *string `json:"fee,omitempty"`
	// Fee rate
	FeeRate *string `json:"feeRate,omitempty"`
	// Currency used to calculate trading fee
	FeeCurrency *string `json:"feeCurrency,omitempty"`
	// Take Profit and Stop Loss type, currently HFT does not support the Take Profit and Stop Loss type, so it is empty
	Stop *string `json:"stop,omitempty"`
	// Trade type, redundancy param
	TradeType *string `json:"tradeType,omitempty"`
	// Specify if the order is a 'limit' order or 'market' order.
	Type      *string `json:"type,omitempty"`
	CreatedAt *int64  `json:"createdAt,omitempty"`
}

// NewGetTradeHistoryOldItems instantiates a new GetTradeHistoryOldItems object
// This constructor will assign default values to properties that have it defined
func NewGetTradeHistoryOldItems() *GetTradeHistoryOldItems {
	this := GetTradeHistoryOldItems{}
	return &this
}

// NewGetTradeHistoryOldItemsWithDefaults instantiates a new GetTradeHistoryOldItems object
// This constructor will only assign default values to properties that have it defined,
func NewGetTradeHistoryOldItemsWithDefaults() *GetTradeHistoryOldItems {
	this := GetTradeHistoryOldItems{}
	return &this
}

func (o *GetTradeHistoryOldItems) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["symbol"] = o.Symbol
	toSerialize["tradeId"] = o.TradeId
	toSerialize["orderId"] = o.OrderId
	toSerialize["counterOrderId"] = o.CounterOrderId
	toSerialize["side"] = o.Side
	toSerialize["liquidity"] = o.Liquidity
	toSerialize["forceTaker"] = o.ForceTaker
	toSerialize["price"] = o.Price
	toSerialize["size"] = o.Size
	toSerialize["funds"] = o.Funds
	toSerialize["fee"] = o.Fee
	toSerialize["feeRate"] = o.FeeRate
	toSerialize["feeCurrency"] = o.FeeCurrency
	toSerialize["stop"] = o.Stop
	toSerialize["tradeType"] = o.TradeType
	toSerialize["type"] = o.Type
	toSerialize["createdAt"] = o.CreatedAt
	return toSerialize
}
