// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package order

// BatchAddOrdersOrderList struct for BatchAddOrdersOrderList
type BatchAddOrdersOrderList struct {
	// Client Order ID: The ClientOid field is a unique ID created by the user (we recommend using a UUID), and can only contain numbers, letters, underscores (_), and hyphens (-). This field is returned when order information is obtained. You can use clientOid to tag your orders. ClientOid is different from the order ID created by the service provider. Please do not initiate requests using the same clientOid. The maximum length for the ClientOid is 40 characters.
	ClientOid *string `json:"clientOid,omitempty"`
	// symbol
	Symbol string `json:"symbol,omitempty"`
	// Specify if the order is a 'limit' order or 'market' order.
	Type string `json:"type,omitempty"`
	// [Time in force](https://www.kucoin.com/docs-new/doc-338146) is a special strategy used during trading
	TimeInForce *string `json:"timeInForce,omitempty"`
	// Specify if the order is to 'buy' or 'sell'.
	Side string `json:"side,omitempty"`
	// Specify price for order
	Price string `json:"price,omitempty"`
	// Specify quantity for order.  When **type** is limited, select one out of two: size or funds. Size refers to the amount of trading targets (the asset name written in front) for the trading pair. The Size must be based on the baseIncrement of the trading pair. The baseIncrement represents the precision for the trading pair. The size of an order must be a positive-integer multiple of baseIncrement and must be between baseMinSize and baseMaxSize.  When **type** is market, select one out of two: size or funds
	Size *string `json:"size,omitempty"`
	// [Self Trade Prevention](https://www.kucoin.com/docs-new/doc-338146) is divided into four strategies: CN, CO, CB , and DC
	Stp *string `json:"stp,omitempty"`
	// Cancel after n seconds, the order timing strategy is GTT, -1 means it will not be cancelled automatically, the default value is -1
	CancelAfter *int64 `json:"cancelAfter,omitempty"`
	// passive order labels, this is disabled when the order timing strategy is IOC or FOK
	PostOnly *bool `json:"postOnly,omitempty"`
	// [Hidden order](https://www.kucoin.com/docs-new/doc-338146) or not (not shown in order book)
	Hidden *bool `json:"hidden,omitempty"`
	// Whether or not only visible portions of orders are shown in [Iceberg orders](https://www.kucoin.com/docs-new/doc-338146)
	Iceberg *bool `json:"iceberg,omitempty"`
	// Maximum visible quantity in iceberg orders
	VisibleSize *string `json:"visibleSize,omitempty"`
	// Order tag, length cannot exceed 20 characters (ASCII)
	Tags *string `json:"tags,omitempty"`
	// Order placement remarks, length cannot exceed 20 characters (ASCII)
	Remark *string `json:"remark,omitempty"`
	// When **type** is market, select one out of two: size or funds
	Funds *string `json:"funds,omitempty"`
	// Equal to KC-API-TIMESTAMP. Needs to be defined if allowMaxTimeWindow is specified.
	ClientTimestamp *int64 `json:"clientTimestamp,omitempty"`
	// Order failed after timeout of specified milliseconds, If clientTimestamp + allowMaxTimeWindow < Gateway received the message time, this order will fail.
	AllowMaxTimeWindow *int64 `json:"allowMaxTimeWindow,omitempty"`
}

// NewBatchAddOrdersOrderList instantiates a new BatchAddOrdersOrderList object
// This constructor will assign default values to properties that have it defined
func NewBatchAddOrdersOrderList(symbol string, Type_ string, side string, price string) *BatchAddOrdersOrderList {
	this := BatchAddOrdersOrderList{}
	this.Symbol = symbol
	this.Type = Type_
	var timeInForce string = "GTC"
	this.TimeInForce = &timeInForce
	this.Side = side
	this.Price = price
	var cancelAfter int64 = -1
	this.CancelAfter = &cancelAfter
	var postOnly bool = false
	this.PostOnly = &postOnly
	var hidden bool = false
	this.Hidden = &hidden
	var iceberg bool = false
	this.Iceberg = &iceberg
	return &this
}

// NewBatchAddOrdersOrderListWithDefaults instantiates a new BatchAddOrdersOrderList object
// This constructor will only assign default values to properties that have it defined,
func NewBatchAddOrdersOrderListWithDefaults() *BatchAddOrdersOrderList {
	this := BatchAddOrdersOrderList{}
	var timeInForce string = "GTC"
	this.TimeInForce = &timeInForce
	var cancelAfter int64 = -1
	this.CancelAfter = &cancelAfter
	var postOnly bool = false
	this.PostOnly = &postOnly
	var hidden bool = false
	this.Hidden = &hidden
	var iceberg bool = false
	this.Iceberg = &iceberg
	return &this
}

func (o *BatchAddOrdersOrderList) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["clientOid"] = o.ClientOid
	toSerialize["symbol"] = o.Symbol
	toSerialize["type"] = o.Type
	toSerialize["timeInForce"] = o.TimeInForce
	toSerialize["side"] = o.Side
	toSerialize["price"] = o.Price
	toSerialize["size"] = o.Size
	toSerialize["stp"] = o.Stp
	toSerialize["cancelAfter"] = o.CancelAfter
	toSerialize["postOnly"] = o.PostOnly
	toSerialize["hidden"] = o.Hidden
	toSerialize["iceberg"] = o.Iceberg
	toSerialize["visibleSize"] = o.VisibleSize
	toSerialize["tags"] = o.Tags
	toSerialize["remark"] = o.Remark
	toSerialize["funds"] = o.Funds
	toSerialize["clientTimestamp"] = o.ClientTimestamp
	toSerialize["allowMaxTimeWindow"] = o.AllowMaxTimeWindow
	return toSerialize
}

type BatchAddOrdersOrderListBuilder struct {
	obj *BatchAddOrdersOrderList
}

func NewBatchAddOrdersOrderListBuilder() *BatchAddOrdersOrderListBuilder {
	return &BatchAddOrdersOrderListBuilder{obj: NewBatchAddOrdersOrderListWithDefaults()}
}

// Client Order ID: The ClientOid field is a unique ID created by the user (we recommend using a UUID), and can only contain numbers, letters, underscores (_), and hyphens (-). This field is returned when order information is obtained. You can use clientOid to tag your orders. ClientOid is different from the order ID created by the service provider. Please do not initiate requests using the same clientOid. The maximum length for the ClientOid is 40 characters.
func (builder *BatchAddOrdersOrderListBuilder) SetClientOid(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.ClientOid = &value
	return builder
}

// symbol
func (builder *BatchAddOrdersOrderListBuilder) SetSymbol(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.Symbol = value
	return builder
}

// Specify if the order is a 'limit' order or 'market' order.
func (builder *BatchAddOrdersOrderListBuilder) SetType(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.Type = value
	return builder
}

// [Time in force](https://www.kucoin.com/docs-new/doc-338146) is a special strategy used during trading
func (builder *BatchAddOrdersOrderListBuilder) SetTimeInForce(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.TimeInForce = &value
	return builder
}

// Specify if the order is to 'buy' or 'sell'.
func (builder *BatchAddOrdersOrderListBuilder) SetSide(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.Side = value
	return builder
}

// Specify price for order
func (builder *BatchAddOrdersOrderListBuilder) SetPrice(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.Price = value
	return builder
}

// Specify quantity for order.  When **type** is limited, select one out of two: size or funds. Size refers to the amount of trading targets (the asset name written in front) for the trading pair. The Size must be based on the baseIncrement of the trading pair. The baseIncrement represents the precision for the trading pair. The size of an order must be a positive-integer multiple of baseIncrement and must be between baseMinSize and baseMaxSize.  When **type** is market, select one out of two: size or funds
func (builder *BatchAddOrdersOrderListBuilder) SetSize(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.Size = &value
	return builder
}

// [Self Trade Prevention](https://www.kucoin.com/docs-new/doc-338146) is divided into four strategies: CN, CO, CB , and DC
func (builder *BatchAddOrdersOrderListBuilder) SetStp(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.Stp = &value
	return builder
}

// Cancel after n seconds, the order timing strategy is GTT, -1 means it will not be cancelled automatically, the default value is -1
func (builder *BatchAddOrdersOrderListBuilder) SetCancelAfter(value int64) *BatchAddOrdersOrderListBuilder {
	builder.obj.CancelAfter = &value
	return builder
}

// passive order labels, this is disabled when the order timing strategy is IOC or FOK
func (builder *BatchAddOrdersOrderListBuilder) SetPostOnly(value bool) *BatchAddOrdersOrderListBuilder {
	builder.obj.PostOnly = &value
	return builder
}

// [Hidden order](https://www.kucoin.com/docs-new/doc-338146) or not (not shown in order book)
func (builder *BatchAddOrdersOrderListBuilder) SetHidden(value bool) *BatchAddOrdersOrderListBuilder {
	builder.obj.Hidden = &value
	return builder
}

// Whether or not only visible portions of orders are shown in [Iceberg orders](https://www.kucoin.com/docs-new/doc-338146)
func (builder *BatchAddOrdersOrderListBuilder) SetIceberg(value bool) *BatchAddOrdersOrderListBuilder {
	builder.obj.Iceberg = &value
	return builder
}

// Maximum visible quantity in iceberg orders
func (builder *BatchAddOrdersOrderListBuilder) SetVisibleSize(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.VisibleSize = &value
	return builder
}

// Order tag, length cannot exceed 20 characters (ASCII)
func (builder *BatchAddOrdersOrderListBuilder) SetTags(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.Tags = &value
	return builder
}

// Order placement remarks, length cannot exceed 20 characters (ASCII)
func (builder *BatchAddOrdersOrderListBuilder) SetRemark(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.Remark = &value
	return builder
}

// When **type** is market, select one out of two: size or funds
func (builder *BatchAddOrdersOrderListBuilder) SetFunds(value string) *BatchAddOrdersOrderListBuilder {
	builder.obj.Funds = &value
	return builder
}

// Equal to KC-API-TIMESTAMP. Needs to be defined if allowMaxTimeWindow is specified.
func (builder *BatchAddOrdersOrderListBuilder) SetClientTimestamp(value int64) *BatchAddOrdersOrderListBuilder {
	builder.obj.ClientTimestamp = &value
	return builder
}

// Order failed after timeout of specified milliseconds, If clientTimestamp + allowMaxTimeWindow < Gateway received the message time, this order will fail.
func (builder *BatchAddOrdersOrderListBuilder) SetAllowMaxTimeWindow(value int64) *BatchAddOrdersOrderListBuilder {
	builder.obj.AllowMaxTimeWindow = &value
	return builder
}

func (builder *BatchAddOrdersOrderListBuilder) Build() *BatchAddOrdersOrderList {
	return builder.obj
}
