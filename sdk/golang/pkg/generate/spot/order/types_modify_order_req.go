// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package order

// ModifyOrderReq struct for ModifyOrderReq
type ModifyOrderReq struct {
	// One must be chose out of the old client order ID, orderId and clientOid
	ClientOid *string `json:"clientOid,omitempty"`
	// symbol
	Symbol string `json:"symbol,omitempty"`
	// One must be chosen out of the old order id, orderId and clientOid
	OrderId *string `json:"orderId,omitempty"`
	// One must be chosen out of the modified price of the new order, newPrice and newSize
	NewPrice *string `json:"newPrice,omitempty"`
	// One must be chosen out of the modified size of the new order, newPrice and newSize
	NewSize *string `json:"newSize,omitempty"`
}

// NewModifyOrderReq instantiates a new ModifyOrderReq object
// This constructor will assign default values to properties that have it defined
func NewModifyOrderReq(symbol string) *ModifyOrderReq {
	this := ModifyOrderReq{}
	this.Symbol = symbol
	return &this
}

// NewModifyOrderReqWithDefaults instantiates a new ModifyOrderReq object
// This constructor will only assign default values to properties that have it defined,
func NewModifyOrderReqWithDefaults() *ModifyOrderReq {
	this := ModifyOrderReq{}
	return &this
}

func (o *ModifyOrderReq) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["clientOid"] = o.ClientOid
	toSerialize["symbol"] = o.Symbol
	toSerialize["orderId"] = o.OrderId
	toSerialize["newPrice"] = o.NewPrice
	toSerialize["newSize"] = o.NewSize
	return toSerialize
}

type ModifyOrderReqBuilder struct {
	obj *ModifyOrderReq
}

func NewModifyOrderReqBuilder() *ModifyOrderReqBuilder {
	return &ModifyOrderReqBuilder{obj: NewModifyOrderReqWithDefaults()}
}

// One must be chose out of the old client order ID, orderId and clientOid
func (builder *ModifyOrderReqBuilder) SetClientOid(value string) *ModifyOrderReqBuilder {
	builder.obj.ClientOid = &value
	return builder
}

// symbol
func (builder *ModifyOrderReqBuilder) SetSymbol(value string) *ModifyOrderReqBuilder {
	builder.obj.Symbol = value
	return builder
}

// One must be chosen out of the old order id, orderId and clientOid
func (builder *ModifyOrderReqBuilder) SetOrderId(value string) *ModifyOrderReqBuilder {
	builder.obj.OrderId = &value
	return builder
}

// One must be chosen out of the modified price of the new order, newPrice and newSize
func (builder *ModifyOrderReqBuilder) SetNewPrice(value string) *ModifyOrderReqBuilder {
	builder.obj.NewPrice = &value
	return builder
}

// One must be chosen out of the modified size of the new order, newPrice and newSize
func (builder *ModifyOrderReqBuilder) SetNewSize(value string) *ModifyOrderReqBuilder {
	builder.obj.NewSize = &value
	return builder
}

func (builder *ModifyOrderReqBuilder) Build() *ModifyOrderReq {
	return builder.obj
}
