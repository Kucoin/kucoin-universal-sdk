// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package market

// GetCurrencyChains struct for GetCurrencyChains
type GetCurrencyChains struct {
	// Chain name of currency
	ChainName string `json:"chainName,omitempty"`
	// Minimum withdrawal amount
	WithdrawalMinSize string `json:"withdrawalMinSize,omitempty"`
	// Minimum deposit amount
	DepositMinSize *string `json:"depositMinSize,omitempty"`
	// Withdraw fee rate
	WithdrawFeeRate string `json:"withdrawFeeRate,omitempty"`
	// Minimum fees charged for withdrawal
	WithdrawalMinFee string `json:"withdrawalMinFee,omitempty"`
	// Withdrawal support or not
	IsWithdrawEnabled bool `json:"isWithdrawEnabled,omitempty"`
	// Deposit support or not
	IsDepositEnabled bool `json:"isDepositEnabled,omitempty"`
	// Number of block confirmations
	Confirms int32 `json:"confirms,omitempty"`
	// The number of blocks (confirmations) for advance on-chain verification
	PreConfirms int32 `json:"preConfirms,omitempty"`
	// Contract address
	ContractAddress string `json:"contractAddress,omitempty"`
	// Withdrawal precision bit, indicating the maximum supported length after the decimal point of the withdrawal amount
	WithdrawPrecision int32 `json:"withdrawPrecision,omitempty"`
	// Maximum amount of single withdrawal
	MaxWithdraw *float64 `json:"maxWithdraw,omitempty"`
	// Maximum amount of single deposit (only applicable to Lightning Network)
	MaxDeposit *string `json:"maxDeposit,omitempty"`
	// Need for memo/tag or not
	NeedTag bool `json:"needTag,omitempty"`
	// Chain id of currency
	ChainId string `json:"chainId,omitempty"`
}

// NewGetCurrencyChains instantiates a new GetCurrencyChains object
// This constructor will assign default values to properties that have it defined
func NewGetCurrencyChains(chainName string, withdrawalMinSize string, withdrawFeeRate string, withdrawalMinFee string, isWithdrawEnabled bool, isDepositEnabled bool, confirms int32, preConfirms int32, contractAddress string, withdrawPrecision int32, needTag bool, chainId string) *GetCurrencyChains {
	this := GetCurrencyChains{}
	this.ChainName = chainName
	this.WithdrawalMinSize = withdrawalMinSize
	this.WithdrawFeeRate = withdrawFeeRate
	this.WithdrawalMinFee = withdrawalMinFee
	this.IsWithdrawEnabled = isWithdrawEnabled
	this.IsDepositEnabled = isDepositEnabled
	this.Confirms = confirms
	this.PreConfirms = preConfirms
	this.ContractAddress = contractAddress
	this.WithdrawPrecision = withdrawPrecision
	this.NeedTag = needTag
	this.ChainId = chainId
	return &this
}

// NewGetCurrencyChainsWithDefaults instantiates a new GetCurrencyChains object
// This constructor will only assign default values to properties that have it defined,
func NewGetCurrencyChainsWithDefaults() *GetCurrencyChains {
	this := GetCurrencyChains{}
	return &this
}

func (o *GetCurrencyChains) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["chainName"] = o.ChainName
	toSerialize["withdrawalMinSize"] = o.WithdrawalMinSize
	toSerialize["depositMinSize"] = o.DepositMinSize
	toSerialize["withdrawFeeRate"] = o.WithdrawFeeRate
	toSerialize["withdrawalMinFee"] = o.WithdrawalMinFee
	toSerialize["isWithdrawEnabled"] = o.IsWithdrawEnabled
	toSerialize["isDepositEnabled"] = o.IsDepositEnabled
	toSerialize["confirms"] = o.Confirms
	toSerialize["preConfirms"] = o.PreConfirms
	toSerialize["contractAddress"] = o.ContractAddress
	toSerialize["withdrawPrecision"] = o.WithdrawPrecision
	toSerialize["maxWithdraw"] = o.MaxWithdraw
	toSerialize["maxDeposit"] = o.MaxDeposit
	toSerialize["needTag"] = o.NeedTag
	toSerialize["chainId"] = o.ChainId
	return toSerialize
}
