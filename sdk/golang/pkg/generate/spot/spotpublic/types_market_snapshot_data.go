// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package spotpublic

// MarketSnapshotData struct for MarketSnapshotData
type MarketSnapshotData struct {
	AskSize      float32 `json:"askSize,omitempty"`
	AveragePrice float32 `json:"averagePrice,omitempty"`
	BaseCurrency string  `json:"baseCurrency,omitempty"`
	BidSize      float32 `json:"bidSize,omitempty"`
	// Trading pair partition: 0. Primary partition 1.KuCoin Plus\", example = \"1\"
	Board            int32   `json:"board,omitempty"`
	Buy              float32 `json:"buy,omitempty"`
	ChangePrice      float32 `json:"changePrice,omitempty"`
	ChangeRate       float32 `json:"changeRate,omitempty"`
	Close            float32 `json:"close,omitempty"`
	Datetime         int64   `json:"datetime,omitempty"`
	High             float32 `json:"high,omitempty"`
	LastTradedPrice  float32 `json:"lastTradedPrice,omitempty"`
	Low              float32 `json:"low,omitempty"`
	MakerCoefficient float32 `json:"makerCoefficient,omitempty"`
	MakerFeeRate     float32 `json:"makerFeeRate,omitempty"`
	MarginTrade      bool    `json:"marginTrade,omitempty"`
	// Trading Pair Mark: 0. Default 1.ST. 2.NEW\", example = \"1\"
	Mark            int32                             `json:"mark,omitempty"`
	Market          string                            `json:"market,omitempty"`
	MarketChange1h  MarketSnapshotDataMarketChange1h  `json:"marketChange1h,omitempty"`
	MarketChange24h MarketSnapshotDataMarketChange24h `json:"marketChange24h,omitempty"`
	MarketChange4h  MarketSnapshotDataMarketChange4h  `json:"marketChange4h,omitempty"`
	Markets         []string                          `json:"markets,omitempty"`
	Open            float32                           `json:"open,omitempty"`
	QuoteCurrency   string                            `json:"quoteCurrency,omitempty"`
	Sell            float32                           `json:"sell,omitempty"`
	SiteTypes       []string                          `json:"siteTypes,omitempty"`
	// sorting number
	Sort             int32   `json:"sort,omitempty"`
	Symbol           string  `json:"symbol,omitempty"`
	SymbolCode       string  `json:"symbolCode,omitempty"`
	TakerCoefficient float32 `json:"takerCoefficient,omitempty"`
	TakerFeeRate     float32 `json:"takerFeeRate,omitempty"`
	Trading          bool    `json:"trading,omitempty"`
	Vol              float32 `json:"vol,omitempty"`
	VolValue         float32 `json:"volValue,omitempty"`
}

// NewMarketSnapshotData instantiates a new MarketSnapshotData object
// This constructor will assign default values to properties that have it defined
func NewMarketSnapshotData(askSize float32, averagePrice float32, baseCurrency string, bidSize float32, board int32, buy float32, changePrice float32, changeRate float32, close float32, datetime int64, high float32, lastTradedPrice float32, low float32, makerCoefficient float32, makerFeeRate float32, marginTrade bool, mark int32, market string, marketChange1h MarketSnapshotDataMarketChange1h, marketChange24h MarketSnapshotDataMarketChange24h, marketChange4h MarketSnapshotDataMarketChange4h, markets []string, open float32, quoteCurrency string, sell float32, siteTypes []string, sort int32, symbol string, symbolCode string, takerCoefficient float32, takerFeeRate float32, trading bool, vol float32, volValue float32) *MarketSnapshotData {
	this := MarketSnapshotData{}
	this.AskSize = askSize
	this.AveragePrice = averagePrice
	this.BaseCurrency = baseCurrency
	this.BidSize = bidSize
	this.Board = board
	this.Buy = buy
	this.ChangePrice = changePrice
	this.ChangeRate = changeRate
	this.Close = close
	this.Datetime = datetime
	this.High = high
	this.LastTradedPrice = lastTradedPrice
	this.Low = low
	this.MakerCoefficient = makerCoefficient
	this.MakerFeeRate = makerFeeRate
	this.MarginTrade = marginTrade
	this.Mark = mark
	this.Market = market
	this.MarketChange1h = marketChange1h
	this.MarketChange24h = marketChange24h
	this.MarketChange4h = marketChange4h
	this.Markets = markets
	this.Open = open
	this.QuoteCurrency = quoteCurrency
	this.Sell = sell
	this.SiteTypes = siteTypes
	this.Sort = sort
	this.Symbol = symbol
	this.SymbolCode = symbolCode
	this.TakerCoefficient = takerCoefficient
	this.TakerFeeRate = takerFeeRate
	this.Trading = trading
	this.Vol = vol
	this.VolValue = volValue
	return &this
}

// NewMarketSnapshotDataWithDefaults instantiates a new MarketSnapshotData object
// This constructor will only assign default values to properties that have it defined,
func NewMarketSnapshotDataWithDefaults() *MarketSnapshotData {
	this := MarketSnapshotData{}
	return &this
}

func (o *MarketSnapshotData) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["askSize"] = o.AskSize
	toSerialize["averagePrice"] = o.AveragePrice
	toSerialize["baseCurrency"] = o.BaseCurrency
	toSerialize["bidSize"] = o.BidSize
	toSerialize["board"] = o.Board
	toSerialize["buy"] = o.Buy
	toSerialize["changePrice"] = o.ChangePrice
	toSerialize["changeRate"] = o.ChangeRate
	toSerialize["close"] = o.Close
	toSerialize["datetime"] = o.Datetime
	toSerialize["high"] = o.High
	toSerialize["lastTradedPrice"] = o.LastTradedPrice
	toSerialize["low"] = o.Low
	toSerialize["makerCoefficient"] = o.MakerCoefficient
	toSerialize["makerFeeRate"] = o.MakerFeeRate
	toSerialize["marginTrade"] = o.MarginTrade
	toSerialize["mark"] = o.Mark
	toSerialize["market"] = o.Market
	toSerialize["marketChange1h"] = o.MarketChange1h
	toSerialize["marketChange24h"] = o.MarketChange24h
	toSerialize["marketChange4h"] = o.MarketChange4h
	toSerialize["markets"] = o.Markets
	toSerialize["open"] = o.Open
	toSerialize["quoteCurrency"] = o.QuoteCurrency
	toSerialize["sell"] = o.Sell
	toSerialize["siteTypes"] = o.SiteTypes
	toSerialize["sort"] = o.Sort
	toSerialize["symbol"] = o.Symbol
	toSerialize["symbolCode"] = o.SymbolCode
	toSerialize["takerCoefficient"] = o.TakerCoefficient
	toSerialize["takerFeeRate"] = o.TakerFeeRate
	toSerialize["trading"] = o.Trading
	toSerialize["vol"] = o.Vol
	toSerialize["volValue"] = o.VolValue
	return toSerialize
}
