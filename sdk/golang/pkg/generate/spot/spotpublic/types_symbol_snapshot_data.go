// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package spotpublic

// SymbolSnapshotData struct for SymbolSnapshotData
type SymbolSnapshotData struct {
	AskSize      float64 `json:"askSize,omitempty"`
	AveragePrice float64 `json:"averagePrice,omitempty"`
	BaseCurrency string  `json:"baseCurrency,omitempty"`
	BidSize      float64 `json:"bidSize,omitempty"`
	// Trading pair partition: 0. Primary partition 1.KuCoin Plus\", example = \"1\"
	Board            int32   `json:"board,omitempty"`
	Buy              float64 `json:"buy,omitempty"`
	ChangePrice      float64 `json:"changePrice,omitempty"`
	ChangeRate       float64 `json:"changeRate,omitempty"`
	Close            float64 `json:"close,omitempty"`
	Datetime         int64   `json:"datetime,omitempty"`
	High             float64 `json:"high,omitempty"`
	LastTradedPrice  float64 `json:"lastTradedPrice,omitempty"`
	Low              float64 `json:"low,omitempty"`
	MakerCoefficient float64 `json:"makerCoefficient,omitempty"`
	MakerFeeRate     float64 `json:"makerFeeRate,omitempty"`
	MarginTrade      bool    `json:"marginTrade,omitempty"`
	// Trading Pair Mark: 0. Default 1.ST. 2.NEW\", example = \"1\"
	Mark            int32                             `json:"mark,omitempty"`
	Market          string                            `json:"market,omitempty"`
	MarketChange1h  SymbolSnapshotDataMarketChange1h  `json:"marketChange1h,omitempty"`
	MarketChange24h SymbolSnapshotDataMarketChange24h `json:"marketChange24h,omitempty"`
	MarketChange4h  SymbolSnapshotDataMarketChange4h  `json:"marketChange4h,omitempty"`
	Markets         []string                          `json:"markets,omitempty"`
	Open            float64                           `json:"open,omitempty"`
	QuoteCurrency   string                            `json:"quoteCurrency,omitempty"`
	Sell            float64                           `json:"sell,omitempty"`
	SiteTypes       []string                          `json:"siteTypes,omitempty"`
	// sorting number(Pointless)
	Sort             int32   `json:"sort,omitempty"`
	Symbol           string  `json:"symbol,omitempty"`
	SymbolCode       string  `json:"symbolCode,omitempty"`
	TakerCoefficient float64 `json:"takerCoefficient,omitempty"`
	TakerFeeRate     float64 `json:"takerFeeRate,omitempty"`
	Trading          bool    `json:"trading,omitempty"`
	Vol              float64 `json:"vol,omitempty"`
	// 24-hour rolling transaction volume, refreshed every 2s
	VolValue float64 `json:"volValue,omitempty"`
}

// NewSymbolSnapshotData instantiates a new SymbolSnapshotData object
// This constructor will assign default values to properties that have it defined
func NewSymbolSnapshotData(askSize float64, averagePrice float64, baseCurrency string, bidSize float64, board int32, buy float64, changePrice float64, changeRate float64, close float64, datetime int64, high float64, lastTradedPrice float64, low float64, makerCoefficient float64, makerFeeRate float64, marginTrade bool, mark int32, market string, marketChange1h SymbolSnapshotDataMarketChange1h, marketChange24h SymbolSnapshotDataMarketChange24h, marketChange4h SymbolSnapshotDataMarketChange4h, markets []string, open float64, quoteCurrency string, sell float64, siteTypes []string, sort int32, symbol string, symbolCode string, takerCoefficient float64, takerFeeRate float64, trading bool, vol float64, volValue float64) *SymbolSnapshotData {
	this := SymbolSnapshotData{}
	this.AskSize = askSize
	this.AveragePrice = averagePrice
	this.BaseCurrency = baseCurrency
	this.BidSize = bidSize
	this.Board = board
	this.Buy = buy
	this.ChangePrice = changePrice
	this.ChangeRate = changeRate
	this.Close = close
	this.Datetime = datetime
	this.High = high
	this.LastTradedPrice = lastTradedPrice
	this.Low = low
	this.MakerCoefficient = makerCoefficient
	this.MakerFeeRate = makerFeeRate
	this.MarginTrade = marginTrade
	this.Mark = mark
	this.Market = market
	this.MarketChange1h = marketChange1h
	this.MarketChange24h = marketChange24h
	this.MarketChange4h = marketChange4h
	this.Markets = markets
	this.Open = open
	this.QuoteCurrency = quoteCurrency
	this.Sell = sell
	this.SiteTypes = siteTypes
	this.Sort = sort
	this.Symbol = symbol
	this.SymbolCode = symbolCode
	this.TakerCoefficient = takerCoefficient
	this.TakerFeeRate = takerFeeRate
	this.Trading = trading
	this.Vol = vol
	this.VolValue = volValue
	return &this
}

// NewSymbolSnapshotDataWithDefaults instantiates a new SymbolSnapshotData object
// This constructor will only assign default values to properties that have it defined,
func NewSymbolSnapshotDataWithDefaults() *SymbolSnapshotData {
	this := SymbolSnapshotData{}
	return &this
}

func (o *SymbolSnapshotData) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["askSize"] = o.AskSize
	toSerialize["averagePrice"] = o.AveragePrice
	toSerialize["baseCurrency"] = o.BaseCurrency
	toSerialize["bidSize"] = o.BidSize
	toSerialize["board"] = o.Board
	toSerialize["buy"] = o.Buy
	toSerialize["changePrice"] = o.ChangePrice
	toSerialize["changeRate"] = o.ChangeRate
	toSerialize["close"] = o.Close
	toSerialize["datetime"] = o.Datetime
	toSerialize["high"] = o.High
	toSerialize["lastTradedPrice"] = o.LastTradedPrice
	toSerialize["low"] = o.Low
	toSerialize["makerCoefficient"] = o.MakerCoefficient
	toSerialize["makerFeeRate"] = o.MakerFeeRate
	toSerialize["marginTrade"] = o.MarginTrade
	toSerialize["mark"] = o.Mark
	toSerialize["market"] = o.Market
	toSerialize["marketChange1h"] = o.MarketChange1h
	toSerialize["marketChange24h"] = o.MarketChange24h
	toSerialize["marketChange4h"] = o.MarketChange4h
	toSerialize["markets"] = o.Markets
	toSerialize["open"] = o.Open
	toSerialize["quoteCurrency"] = o.QuoteCurrency
	toSerialize["sell"] = o.Sell
	toSerialize["siteTypes"] = o.SiteTypes
	toSerialize["sort"] = o.Sort
	toSerialize["symbol"] = o.Symbol
	toSerialize["symbolCode"] = o.SymbolCode
	toSerialize["takerCoefficient"] = o.TakerCoefficient
	toSerialize["takerFeeRate"] = o.TakerFeeRate
	toSerialize["trading"] = o.Trading
	toSerialize["vol"] = o.Vol
	toSerialize["volValue"] = o.VolValue
	return toSerialize
}
