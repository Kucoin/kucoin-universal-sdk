// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package risklimit

// GetMarginRiskLimitData struct for GetMarginRiskLimitData
type GetMarginRiskLimitData struct {
	// Time stamp
	Timestamp *int64 `json:"timestamp,omitempty"`
	// CROSS MARGIN RESPONSES, Currency
	Currency *string `json:"currency,omitempty"`
	// CROSS MARGIN RESPONSES, Maximum personal borrow amount. If the platform has no borrowing amount, this value will still be displayed.
	BorrowMaxAmount *string `json:"borrowMaxAmount,omitempty"`
	// CROSS MARGIN RESPONSES, Maximum buy amount
	BuyMaxAmount *string `json:"buyMaxAmount,omitempty"`
	// CROSS MARGIN RESPONSES, Maximum holding amount
	HoldMaxAmount *string `json:"holdMaxAmount,omitempty"`
	// CROSS MARGIN RESPONSES, [Borrow Coefficient](https://www.kucoin.com/land/price-protect)
	BorrowCoefficient *string `json:"borrowCoefficient,omitempty"`
	// CROSS MARGIN RESPONSES, [Margin Coefficient](https://www.kucoin.com/land/price-protect)
	MarginCoefficient *string `json:"marginCoefficient,omitempty"`
	// CROSS MARGIN RESPONSES, Currency precision. The minimum repayment amount of a single transaction should be >= currency precision. For example, the precision of ETH is 8, and the minimum repayment amount is 0.00000001
	Precision *int32 `json:"precision,omitempty"`
	// CROSS MARGIN RESPONSES, Minimum personal borrow amount
	BorrowMinAmount *string `json:"borrowMinAmount,omitempty"`
	// CROSS MARGIN RESPONSES, Minimum unit for borrowing; the borrowed amount must be an integer multiple of this value
	BorrowMinUnit *string `json:"borrowMinUnit,omitempty"`
	// CROSS MARGIN RESPONSES, Whether to support borrowing
	BorrowEnabled *bool `json:"borrowEnabled,omitempty"`
	// ISOLATED MARGIN RESPONSES, Symbol
	Symbol *string `json:"symbol,omitempty"`
	// ISOLATED MARGIN RESPONSES, Base maximum personal borrow amount. If the platform has no borrowing amount, this value will still be displayed.
	BaseMaxBorrowAmount *string `json:"baseMaxBorrowAmount,omitempty"`
	// ISOLATED MARGIN RESPONSES, Quote maximum personal borrow amount. If the platform has no borrowing amount, this value will still be displayed.
	QuoteMaxBorrowAmount *string `json:"quoteMaxBorrowAmount,omitempty"`
	// ISOLATED MARGIN RESPONSES, Base maximum buy amount
	BaseMaxBuyAmount *string `json:"baseMaxBuyAmount,omitempty"`
	// ISOLATED MARGIN RESPONSES, Quote maximum buy amount
	QuoteMaxBuyAmount *string `json:"quoteMaxBuyAmount,omitempty"`
	// ISOLATED MARGIN RESPONSES, Base maximum holding amount
	BaseMaxHoldAmount *string `json:"baseMaxHoldAmount,omitempty"`
	// ISOLATED MARGIN RESPONSES, Quote maximum holding amount
	QuoteMaxHoldAmount *string `json:"quoteMaxHoldAmount,omitempty"`
	// ISOLATED MARGIN RESPONSES, Base currency precision. The minimum repayment amount of a single transaction should be >= currency precision. For example, the precision of ETH is 8, and the minimum repayment amount is 0.00000001
	BasePrecision *int32 `json:"basePrecision,omitempty"`
	// ISOLATED MARGIN RESPONSES, Quote currency precision. The minimum repayment amount of a single transaction should be >= currency precision. For example, the precision of ETH is 8, and the minimum repayment amount is 0.00000001
	QuotePrecision *int32 `json:"quotePrecision,omitempty"`
	// ISOLATED MARGIN RESPONSES, Base minimum personal borrow amount
	BaseBorrowMinAmount *string `json:"baseBorrowMinAmount,omitempty"`
	// ISOLATED MARGIN RESPONSES, Quote minimum personal borrow amount
	QuoteBorrowMinAmount *string `json:"quoteBorrowMinAmount,omitempty"`
	// ISOLATED MARGIN RESPONSES, Base minimum unit for borrowing, the borrowed amount must be an integer multiple of this value
	BaseBorrowMinUnit *string `json:"baseBorrowMinUnit,omitempty"`
	// ISOLATED MARGIN RESPONSES, Quote minimum unit for borrowing, the borrowed amount must be an integer multiple of this value
	QuoteBorrowMinUnit *string `json:"quoteBorrowMinUnit,omitempty"`
	// ISOLATED MARGIN RESPONSES, Base whether to support borrowing
	BaseBorrowEnabled *bool `json:"baseBorrowEnabled,omitempty"`
	// ISOLATED MARGIN RESPONSES, Quote whether to support borrowing
	QuoteBorrowEnabled *bool `json:"quoteBorrowEnabled,omitempty"`
	// ISOLATED MARGIN RESPONSES, [Base Borrow Coefficient](https://www.kucoin.com/land/price-protect)
	BaseBorrowCoefficient *string `json:"baseBorrowCoefficient,omitempty"`
	// ISOLATED MARGIN RESPONSES, [Quote Borrow Coefficient](https://www.kucoin.com/land/price-protect)
	QuoteBorrowCoefficient *string `json:"quoteBorrowCoefficient,omitempty"`
	// ISOLATED MARGIN RESPONSES, [Base Margin Coefficient](https://www.kucoin.com/land/price-protect)
	BaseMarginCoefficient *string `json:"baseMarginCoefficient,omitempty"`
	// ISOLATED MARGIN RESPONSES, [Quote Margin Coefficient](https://www.kucoin.com/land/price-protect)
	QuoteMarginCoefficient *string `json:"quoteMarginCoefficient,omitempty"`
}

// NewGetMarginRiskLimitData instantiates a new GetMarginRiskLimitData object
// This constructor will assign default values to properties that have it defined
func NewGetMarginRiskLimitData() *GetMarginRiskLimitData {
	this := GetMarginRiskLimitData{}
	return &this
}

// NewGetMarginRiskLimitDataWithDefaults instantiates a new GetMarginRiskLimitData object
// This constructor will only assign default values to properties that have it defined,
func NewGetMarginRiskLimitDataWithDefaults() *GetMarginRiskLimitData {
	this := GetMarginRiskLimitData{}
	return &this
}

func (o *GetMarginRiskLimitData) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["currency"] = o.Currency
	toSerialize["borrowMaxAmount"] = o.BorrowMaxAmount
	toSerialize["buyMaxAmount"] = o.BuyMaxAmount
	toSerialize["holdMaxAmount"] = o.HoldMaxAmount
	toSerialize["borrowCoefficient"] = o.BorrowCoefficient
	toSerialize["marginCoefficient"] = o.MarginCoefficient
	toSerialize["precision"] = o.Precision
	toSerialize["borrowMinAmount"] = o.BorrowMinAmount
	toSerialize["borrowMinUnit"] = o.BorrowMinUnit
	toSerialize["borrowEnabled"] = o.BorrowEnabled
	toSerialize["symbol"] = o.Symbol
	toSerialize["baseMaxBorrowAmount"] = o.BaseMaxBorrowAmount
	toSerialize["quoteMaxBorrowAmount"] = o.QuoteMaxBorrowAmount
	toSerialize["baseMaxBuyAmount"] = o.BaseMaxBuyAmount
	toSerialize["quoteMaxBuyAmount"] = o.QuoteMaxBuyAmount
	toSerialize["baseMaxHoldAmount"] = o.BaseMaxHoldAmount
	toSerialize["quoteMaxHoldAmount"] = o.QuoteMaxHoldAmount
	toSerialize["basePrecision"] = o.BasePrecision
	toSerialize["quotePrecision"] = o.QuotePrecision
	toSerialize["baseBorrowMinAmount"] = o.BaseBorrowMinAmount
	toSerialize["quoteBorrowMinAmount"] = o.QuoteBorrowMinAmount
	toSerialize["baseBorrowMinUnit"] = o.BaseBorrowMinUnit
	toSerialize["quoteBorrowMinUnit"] = o.QuoteBorrowMinUnit
	toSerialize["baseBorrowEnabled"] = o.BaseBorrowEnabled
	toSerialize["quoteBorrowEnabled"] = o.QuoteBorrowEnabled
	toSerialize["baseBorrowCoefficient"] = o.BaseBorrowCoefficient
	toSerialize["quoteBorrowCoefficient"] = o.QuoteBorrowCoefficient
	toSerialize["baseMarginCoefficient"] = o.BaseMarginCoefficient
	toSerialize["quoteMarginCoefficient"] = o.QuoteMarginCoefficient
	return toSerialize
}
