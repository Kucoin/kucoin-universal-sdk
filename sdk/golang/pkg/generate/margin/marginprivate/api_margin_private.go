// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package marginprivate

import (
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/internal/interfaces"
)

type MarginPrivateWS interface {

	// CrossMarginPosition Get Cross Margin Position change
	// The system will push the change event when the position status changes, or push the current debt message periodically when there is a liability.
	// push frequency: once every 4s
	CrossMarginPosition(callback CrossMarginPositionEventCallback) (id string, err error)

	// IsolatedMarginPosition Get Isolated Margin Position change
	// The system will push the change event when the position status changes, or push the current debt message periodically when there is a liability.
	// push frequency: real time
	IsolatedMarginPosition(symbol string, callback IsolatedMarginPositionEventCallback) (id string, err error)

	// Unsubscribe from topics
	UnSubscribe(id string) error

	// Start websocket
	Start() error

	// Stop websocket
	Stop() error
}

type MarginPrivateWSImpl struct {
	wsService interfaces.WebSocketService
}

func NewMarginPrivateWSImp(wsService interfaces.WebSocketService) *MarginPrivateWSImpl {
	return &MarginPrivateWSImpl{wsService: wsService}
}

func (impl *MarginPrivateWSImpl) CrossMarginPosition(callback CrossMarginPositionEventCallback) (string, error) {
	topicPrefix := "/margin/position"

	args := []string{}

	return impl.wsService.Subscribe(topicPrefix, args, &CrossMarginPositionEventCallbackWrapper{callback: callback})
}

func (impl *MarginPrivateWSImpl) IsolatedMarginPosition(symbol string, callback IsolatedMarginPositionEventCallback) (string, error) {
	topicPrefix := "/margin/isolatedPosition"

	args := []string{symbol}

	return impl.wsService.Subscribe(topicPrefix, args, &IsolatedMarginPositionEventCallbackWrapper{callback: callback})
}

func (impl *MarginPrivateWSImpl) UnSubscribe(id string) error {
	return impl.wsService.Unsubscribe(id)
}

func (impl *MarginPrivateWSImpl) Start() error {
	return impl.wsService.Start()
}

func (impl *MarginPrivateWSImpl) Stop() error {
	return impl.wsService.Stop()
}
