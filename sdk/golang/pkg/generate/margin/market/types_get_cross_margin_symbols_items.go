// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package market

// GetCrossMarginSymbolsItems struct for GetCrossMarginSymbolsItems
type GetCrossMarginSymbolsItems struct {
	// symbol
	Symbol string `json:"symbol,omitempty"`
	// Symbol name
	Name string `json:"name,omitempty"`
	// Whether trading is enabled: True for enabled; false for disabled
	EnableTrading bool `json:"enableTrading,omitempty"`
	// Trading market
	Market string `json:"market,omitempty"`
	// Base currency, e.g. BTC.
	BaseCurrency string `json:"baseCurrency,omitempty"`
	// Quote currency, e.g. USDT.
	QuoteCurrency string `json:"quoteCurrency,omitempty"`
	// Quantity increment: The quantity for an order must be a positive integer multiple of this increment. Here, the size refers to the quantity of the base currency for the order. For example, for the ETH-USDT trading pair, if the baseIncrement is 0.0000001, the order quantity can be 1.0000001 but not 1.00000001.
	BaseIncrement string `json:"baseIncrement,omitempty"`
	// The minimum order quantity required to place an order.
	BaseMinSize string `json:"baseMinSize,omitempty"`
	// Quote increment: The funds for a market order must be a positive integer multiple of this increment. The funds refer to the quote currency amount. For example, for the ETH-USDT trading pair, if the quoteIncrement is 0.000001, the amount of USDT for the order can be 3000.000001 but not 3000.0000001.
	QuoteIncrement string `json:"quoteIncrement,omitempty"`
	// The minimum order funds required to place a market order.
	QuoteMinSize string `json:"quoteMinSize,omitempty"`
	// The maximum order size required to place an order.
	BaseMaxSize string `json:"baseMaxSize,omitempty"`
	// The maximum order funds required to place a market order.
	QuoteMaxSize string `json:"quoteMaxSize,omitempty"`
	// Price increment: The price of an order must be a positive integer multiple of this increment. For example, for the ETH-USDT trading pair, if the priceIncrement is 0.01, the order price can be 3000.01 but not 3000.001.  Specifies the min. order price as well as the price increment.This also applies to quote currency.
	PriceIncrement string `json:"priceIncrement,omitempty"`
	// The currency of charged fees.
	FeeCurrency string `json:"feeCurrency,omitempty"`
	// Threshold for price protection
	PriceLimitRate string `json:"priceLimitRate,omitempty"`
	// The minimum trading amounts
	MinFunds string `json:"minFunds,omitempty"`
}

// NewGetCrossMarginSymbolsItems instantiates a new GetCrossMarginSymbolsItems object
// This constructor will assign default values to properties that have it defined
func NewGetCrossMarginSymbolsItems(symbol string, name string, enableTrading bool, market string, baseCurrency string, quoteCurrency string, baseIncrement string, baseMinSize string, quoteIncrement string, quoteMinSize string, baseMaxSize string, quoteMaxSize string, priceIncrement string, feeCurrency string, priceLimitRate string, minFunds string) *GetCrossMarginSymbolsItems {
	this := GetCrossMarginSymbolsItems{}
	this.Symbol = symbol
	this.Name = name
	this.EnableTrading = enableTrading
	this.Market = market
	this.BaseCurrency = baseCurrency
	this.QuoteCurrency = quoteCurrency
	this.BaseIncrement = baseIncrement
	this.BaseMinSize = baseMinSize
	this.QuoteIncrement = quoteIncrement
	this.QuoteMinSize = quoteMinSize
	this.BaseMaxSize = baseMaxSize
	this.QuoteMaxSize = quoteMaxSize
	this.PriceIncrement = priceIncrement
	this.FeeCurrency = feeCurrency
	this.PriceLimitRate = priceLimitRate
	this.MinFunds = minFunds
	return &this
}

// NewGetCrossMarginSymbolsItemsWithDefaults instantiates a new GetCrossMarginSymbolsItems object
// This constructor will only assign default values to properties that have it defined,
func NewGetCrossMarginSymbolsItemsWithDefaults() *GetCrossMarginSymbolsItems {
	this := GetCrossMarginSymbolsItems{}
	return &this
}

func (o *GetCrossMarginSymbolsItems) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["symbol"] = o.Symbol
	toSerialize["name"] = o.Name
	toSerialize["enableTrading"] = o.EnableTrading
	toSerialize["market"] = o.Market
	toSerialize["baseCurrency"] = o.BaseCurrency
	toSerialize["quoteCurrency"] = o.QuoteCurrency
	toSerialize["baseIncrement"] = o.BaseIncrement
	toSerialize["baseMinSize"] = o.BaseMinSize
	toSerialize["quoteIncrement"] = o.QuoteIncrement
	toSerialize["quoteMinSize"] = o.QuoteMinSize
	toSerialize["baseMaxSize"] = o.BaseMaxSize
	toSerialize["quoteMaxSize"] = o.QuoteMaxSize
	toSerialize["priceIncrement"] = o.PriceIncrement
	toSerialize["feeCurrency"] = o.FeeCurrency
	toSerialize["priceLimitRate"] = o.PriceLimitRate
	toSerialize["minFunds"] = o.MinFunds
	return toSerialize
}
