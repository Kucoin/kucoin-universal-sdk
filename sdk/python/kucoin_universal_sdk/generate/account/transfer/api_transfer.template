# API FUNCTION TEMPLATE


def test_get_transfer_quotas_req(self):
    """
        get_transfer_quotas
        Get Transfer Quotas
        /api/v1/accounts/transferable
    """

    builder = GetTransferQuotasReqBuilder()
    builder.set_currency(?).set_type(?).set_tag(?)
    req = builder.build()
    try:
        resp = self.api.get_transfer_quotas(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_flex_transfer_req(self):
    """
        flex_transfer
        Flex Transfer
        /api/v3/accounts/universal-transfer
    """

    builder = FlexTransferReqBuilder()
    builder.set_client_oid(?).set_currency(?).set_amount(?).set_from_user_id(?).set_from_account_type(?).set_from_account_tag(?).set_type(?).set_to_user_id(?).set_to_account_type(?).set_to_account_tag(?)
    req = builder.build()
    try:
        resp = self.api.flex_transfer(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_sub_account_transfer_req(self):
    """
        sub_account_transfer
        Sub-account Transfer
        /api/v2/accounts/sub-transfer
    """

    builder = SubAccountTransferReqBuilder()
    builder.set_client_oid(?).set_currency(?).set_amount(?).set_direction(?).set_account_type(?).set_sub_account_type(?).set_sub_user_id(?).set_tag(?).set_sub_tag(?)
    req = builder.build()
    try:
        resp = self.api.sub_account_transfer(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_inner_transfer_req(self):
    """
        inner_transfer
        Internal Transfer
        /api/v2/accounts/inner-transfer
    """

    builder = InnerTransferReqBuilder()
    builder.set_client_oid(?).set_currency(?).set_amount(?).set_to(?).set_from_tag(?).set_to_tag(?).set_from_(?)
    req = builder.build()
    try:
        resp = self.api.inner_transfer(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_get_futures_account_transfer_out_ledger_req(self):
    """
        get_futures_account_transfer_out_ledger
        Get Futures Account Transfer Out Ledger
        /api/v1/transfer-list
    """

    builder = GetFuturesAccountTransferOutLedgerReqBuilder()
    builder.set_currency(?).set_type(?).set_tag(?).set_start_at(?).set_end_at(?).set_current_page(?).set_page_size(?)
    req = builder.build()
    try:
        resp = self.api.get_futures_account_transfer_out_ledger(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_futures_account_transfer_out_req(self):
    """
        futures_account_transfer_out
        Futures Account Transfer Out
        /api/v3/transfer-out
    """

    builder = FuturesAccountTransferOutReqBuilder()
    builder.set_currency(?).set_amount(?).set_rec_account_type(?)
    req = builder.build()
    try:
        resp = self.api.futures_account_transfer_out(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_futures_account_transfer_in_req(self):
    """
        futures_account_transfer_in
        Futures Account Transfer In
        /api/v1/transfer-in
    """

    builder = FuturesAccountTransferInReqBuilder()
    builder.set_currency(?).set_amount(?).set_pay_account_type(?)
    req = builder.build()
    try:
        resp = self.api.futures_account_transfer_in(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e
