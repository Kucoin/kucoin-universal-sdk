# API FUNCTION TEMPLATE


def test_get_loan_market_req(self):
    """
        get_loan_market
        Get Loan Market
        /api/v3/project/list
    """

    builder = GetLoanMarketReqBuilder()
    builder.set_currency(?)
    req = builder.build()
    try:
        resp = self.api.get_loan_market(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_get_loan_market_interest_rate_req(self):
    """
        get_loan_market_interest_rate
        Get Loan Market Interest Rate
        /api/v3/project/marketInterestRate
    """

    builder = GetLoanMarketInterestRateReqBuilder()
    builder.set_currency(?)
    req = builder.build()
    try:
        resp = self.api.get_loan_market_interest_rate(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_purchase_req(self):
    """
        purchase
        Purchase
        /api/v3/purchase
    """

    builder = PurchaseReqBuilder()
    builder.set_currency(?).set_size(?).set_interest_rate(?)
    req = builder.build()
    try:
        resp = self.api.purchase(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_modify_purchase_req(self):
    """
        modify_purchase
        Modify Purchase
        /api/v3/lend/purchase/update
    """

    builder = ModifyPurchaseReqBuilder()
    builder.set_currency(?).set_interest_rate(?).set_purchase_order_no(?)
    req = builder.build()
    try:
        resp = self.api.modify_purchase(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_get_purchase_orders_req(self):
    """
        get_purchase_orders
        Get Purchase Orders
        /api/v3/purchase/orders
    """

    builder = GetPurchaseOrdersReqBuilder()
    builder.set_status(?).set_currency(?).set_purchase_order_no(?).set_current_page(?).set_page_size(?)
    req = builder.build()
    try:
        resp = self.api.get_purchase_orders(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_redeem_req(self):
    """
        redeem
        Redeem
        /api/v3/redeem
    """

    builder = RedeemReqBuilder()
    builder.set_currency(?).set_size(?).set_purchase_order_no(?)
    req = builder.build()
    try:
        resp = self.api.redeem(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e

def test_get_redeem_orders_req(self):
    """
        get_redeem_orders
        Get Redeem Orders
        /api/v3/redeem/orders
    """

    builder = GetRedeemOrdersReqBuilder()
    builder.set_status(?).set_currency(?).set_redeem_order_no(?).set_current_page(?).set_page_size(?)
    req = builder.build()
    try:
        resp = self.api.get_redeem_orders(req)
        print("code: ", resp.common_response.code)
        print("msg: ", resp.common_response.message)
        print("data: ", resp.to_json())
    except Exception as e:
        print("error: ", e)
        raise e
