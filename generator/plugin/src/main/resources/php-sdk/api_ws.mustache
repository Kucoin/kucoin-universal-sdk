<?php
{{>partial_header}}
{{#imports}}
{{{.}}}
{{/imports}}
namespace {{package}};
use React\Promise\PromiseInterface;

interface {{classname}} {

{{#operations}}
    {{#operation}}

    /**
    * {{summary}}
    * {{notes}}
    * push frequency: {{vendorExtensions.x-push_frequency}}
    * @param callable $onData function(string $topic, string $subject, {{vendorExtensions.x-meta.methodServiceFmt}}Event $data): void
    * @param ?callable $onSuccess function(string $id): void
    * @param ?callable $onError function(Exception $e): void
    * @return PromiseInterface<string> A promise that resolves to the subscription ID or rejects with an error.
    */
    public function {{vendorExtensions.x-meta.method}}{{operationName}}({{#vendorExtensions.x-meta.otherProperties}}{{#parameters}}{{#type}}{{#type.simple}}string ${{paras}},{{/type.simple}}{{#type.array}}array ${{paras}},{{/type.array}}{{#type.object}}{{#paras}}string ${{.}},{{/paras}}{{/type.object}}{{/type}}{{/parameters}}{{/vendorExtensions.x-meta.otherProperties}}callable $onData, ?callable $onSuccess = null, ?callable $onError = null) : PromiseInterface;
    {{/operation}}

    /**
    * Unsubscribe from topics
    */
    public function unSubscribe(string $id) : PromiseInterface;

    /**
    * Start websocket
    */
    public function start(): PromiseInterface;

    /**
    * Stop websocket
    */
    public function stop(): PromiseInterface;
{{/operations}}
}